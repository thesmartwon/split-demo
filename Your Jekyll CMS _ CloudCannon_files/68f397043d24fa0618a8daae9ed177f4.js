/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./_scripts/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./_bookshop/components/accordion/accordion.svelte":
/*!*********************************************************!*\
  !*** ./_bookshop/components/accordion/accordion.svelte ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* _bookshop/components/accordion/accordion.svelte generated by Svelte v3.29.0 */


function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[12] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[12] = list[i];
	return child_ctx;
}

// (45:12) {#if !!title}
function create_if_block_4(ctx) {
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*title*/ ctx[1]);
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, /*title*/ ctx[1]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*title*/ 2) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*title*/ ctx[1]);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (53:16) {:else}
function create_else_block_2(ctx) {
	let div;
	let t;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Close All");
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div_nodes, "Close All");
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-accordion__compact-close-all");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

// (49:16) {#if showCompactOpen}
function create_if_block_3(ctx) {
	let div;
	let t;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Open All");
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div_nodes, "Open All");
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-accordion__compact-open-all");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

// (71:28) {:else}
function create_else_block_1(ctx) {
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Open");
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, "Open");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (69:28) {#if item.is_open}
function create_if_block_2(ctx) {
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Close");
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, "Close");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (63:12) {#each newAccordionItems as item}
function create_each_block_1(ctx) {
	let div2;
	let button;
	let t0_value = /*item*/ ctx[12].heading + "";
	let t0;
	let t1;
	let div0;
	let t2;
	let div1;
	let button_aria_controls_value;
	let button_aria_expanded_value;
	let t3;
	let p;
	let t4_value = /*item*/ ctx[12].content + "";
	let t4;
	let p_id_value;
	let p_aria_hidden_value;
	let t5;
	let mounted;
	let dispose;

	function select_block_type_1(ctx, dirty) {
		if (/*item*/ ctx[12].is_open) return create_if_block_2;
		return create_else_block_1;
	}

	let current_block_type = select_block_type_1(ctx, -1);
	let if_block = current_block_type(ctx);

	return {
		c() {
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if_block.c();
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("p");
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t4_value);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);

			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "BUTTON", {
				class: true,
				"aria-controls": true,
				"aria-expanded": true
			});

			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(button_nodes, t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(button_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(button_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			if_block.l(div1_nodes);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);

			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "P", {
				class: true,
				id: true,
				"aria-hidden": true
			});

			var p_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(p);
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(p_nodes, t4_value);
			p_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "c-accordion__icon");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "cc-helper-hidden");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "c-accordion__button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "aria-controls", button_aria_controls_value = /*item*/ ctx[12].id);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "aria-expanded", button_aria_expanded_value = /*item*/ ctx[12].is_open);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "class", "c-accordion__item-content");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "id", p_id_value = /*item*/ ctx[12].id);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "aria-hidden", p_aria_hidden_value = !/*item*/ ctx[12].is_open);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "c-accordion__item-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "is-open", /*item*/ ctx[12].is_open);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "is-closed", !/*item*/ ctx[12].is_open);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div2, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, button);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, div1);
			if_block.m(div1, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, p);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(p, t4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t5);

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(button, "click", function () {
					if (Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["is_function"])(/*handleIndividualAccordionClick*/ ctx[7](/*item*/ ctx[12]))) /*handleIndividualAccordionClick*/ ctx[7](/*item*/ ctx[12]).apply(this, arguments);
				});

				mounted = true;
			}
		},
		p(new_ctx, dirty) {
			ctx = new_ctx;
			if (dirty & /*newAccordionItems*/ 16 && t0_value !== (t0_value = /*item*/ ctx[12].heading + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (dirty & /*baseurl*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			}

			if (dirty & /*baseurl*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			}

			if (current_block_type !== (current_block_type = select_block_type_1(ctx, dirty))) {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div1, null);
				}
			}

			if (dirty & /*newAccordionItems*/ 16 && button_aria_controls_value !== (button_aria_controls_value = /*item*/ ctx[12].id)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "aria-controls", button_aria_controls_value);
			}

			if (dirty & /*newAccordionItems*/ 16 && button_aria_expanded_value !== (button_aria_expanded_value = /*item*/ ctx[12].is_open)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "aria-expanded", button_aria_expanded_value);
			}

			if (dirty & /*newAccordionItems*/ 16 && t4_value !== (t4_value = /*item*/ ctx[12].content + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t4, t4_value);

			if (dirty & /*newAccordionItems*/ 16 && p_id_value !== (p_id_value = /*item*/ ctx[12].id)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "id", p_id_value);
			}

			if (dirty & /*newAccordionItems*/ 16 && p_aria_hidden_value !== (p_aria_hidden_value = !/*item*/ ctx[12].is_open)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "aria-hidden", p_aria_hidden_value);
			}

			if (dirty & /*newAccordionItems*/ 16) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "is-open", /*item*/ ctx[12].is_open);
			}

			if (dirty & /*newAccordionItems*/ 16) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "is-closed", !/*item*/ ctx[12].is_open);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div2);
			if_block.d();
			mounted = false;
			dispose();
		}
	};
}

// (84:8) {#if two_columns}
function create_if_block(ctx) {
	let div;
	let each_value = /*newAccordionItems*/ ctx[4];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", {});
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "c-accordion__item-container-odd", /*two_columns*/ ctx[2]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}
		},
		p(ctx, dirty) {
			if (dirty & /*newAccordionItems, handleIndividualAccordionClick, baseurl*/ 152) {
				each_value = /*newAccordionItems*/ ctx[4];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (dirty & /*two_columns*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "c-accordion__item-container-odd", /*two_columns*/ ctx[2]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
		}
	};
}

// (94:32) {:else}
function create_else_block(ctx) {
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Open");
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, "Open");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (92:32) {#if item.is_open}
function create_if_block_1(ctx) {
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Close");
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, "Close");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (86:16) {#each newAccordionItems as item}
function create_each_block(ctx) {
	let div2;
	let button;
	let t0_value = /*item*/ ctx[12].heading + "";
	let t0;
	let t1;
	let div0;
	let t2;
	let div1;
	let button_aria_controls_value;
	let button_aria_expanded_value;
	let t3;
	let p;
	let t4_value = /*item*/ ctx[12].content + "";
	let t4;
	let p_id_value;
	let p_aria_hidden_value;
	let t5;
	let mounted;
	let dispose;

	function select_block_type_2(ctx, dirty) {
		if (/*item*/ ctx[12].is_open) return create_if_block_1;
		return create_else_block;
	}

	let current_block_type = select_block_type_2(ctx, -1);
	let if_block = current_block_type(ctx);

	return {
		c() {
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if_block.c();
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("p");
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t4_value);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);

			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "BUTTON", {
				class: true,
				"aria-controls": true,
				"aria-expanded": true
			});

			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(button_nodes, t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(button_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(button_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			if_block.l(div1_nodes);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);

			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "P", {
				class: true,
				id: true,
				"aria-hidden": true
			});

			var p_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(p);
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(p_nodes, t4_value);
			p_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "c-accordion__icon");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "cc-helper-hidden");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "c-accordion__button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "aria-controls", button_aria_controls_value = /*item*/ ctx[12].id);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "aria-expanded", button_aria_expanded_value = /*item*/ ctx[12].is_open);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "class", "c-accordion__item-content");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "id", p_id_value = /*item*/ ctx[12].id);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "aria-hidden", p_aria_hidden_value = !/*item*/ ctx[12].is_open);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "c-accordion__item-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "is-open", /*item*/ ctx[12].is_open);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "is-closed", !/*item*/ ctx[12].is_open);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div2, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, button);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, div1);
			if_block.m(div1, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, p);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(p, t4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t5);

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(button, "click", function () {
					if (Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["is_function"])(/*handleIndividualAccordionClick*/ ctx[7](/*item*/ ctx[12]))) /*handleIndividualAccordionClick*/ ctx[7](/*item*/ ctx[12]).apply(this, arguments);
				});

				mounted = true;
			}
		},
		p(new_ctx, dirty) {
			ctx = new_ctx;
			if (dirty & /*newAccordionItems*/ 16 && t0_value !== (t0_value = /*item*/ ctx[12].heading + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (dirty & /*baseurl*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			}

			if (dirty & /*baseurl*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			}

			if (current_block_type !== (current_block_type = select_block_type_2(ctx, dirty))) {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div1, null);
				}
			}

			if (dirty & /*newAccordionItems*/ 16 && button_aria_controls_value !== (button_aria_controls_value = /*item*/ ctx[12].id)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "aria-controls", button_aria_controls_value);
			}

			if (dirty & /*newAccordionItems*/ 16 && button_aria_expanded_value !== (button_aria_expanded_value = /*item*/ ctx[12].is_open)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "aria-expanded", button_aria_expanded_value);
			}

			if (dirty & /*newAccordionItems*/ 16 && t4_value !== (t4_value = /*item*/ ctx[12].content + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t4, t4_value);

			if (dirty & /*newAccordionItems*/ 16 && p_id_value !== (p_id_value = /*item*/ ctx[12].id)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "id", p_id_value);
			}

			if (dirty & /*newAccordionItems*/ 16 && p_aria_hidden_value !== (p_aria_hidden_value = !/*item*/ ctx[12].is_open)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "aria-hidden", p_aria_hidden_value);
			}

			if (dirty & /*newAccordionItems*/ 16) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "is-open", /*item*/ ctx[12].is_open);
			}

			if (dirty & /*newAccordionItems*/ 16) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "is-closed", !/*item*/ ctx[12].is_open);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div2);
			if_block.d();
			mounted = false;
			dispose();
		}
	};
}

function create_fragment(ctx) {
	let div4;
	let div3;
	let div1;
	let t0;
	let button;
	let t1;
	let div0;
	let t2;
	let div2;
	let t3;
	let mounted;
	let dispose;
	let if_block0 = !!/*title*/ ctx[1] && create_if_block_4(ctx);

	function select_block_type(ctx, dirty) {
		if (/*showCompactOpen*/ ctx[5]) return create_if_block_3;
		return create_else_block_2;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block1 = current_block_type(ctx);
	let each_value_1 = /*newAccordionItems*/ ctx[4];
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	let if_block2 = /*two_columns*/ ctx[2] && create_if_block(ctx);

	return {
		c() {
			div4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if (if_block0) if_block0.c();
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			if_block1.c();
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block2) if_block2.c();
			this.h();
		},
		l(nodes) {
			div4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div4_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div4);
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div4_nodes, "DIV", { class: true });
			var div3_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div3);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			if (if_block0) if_block0.l(div1_nodes);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "BUTTON", { class: true });
			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			if_block1.l(button_nodes);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(button_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div3_nodes);
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "DIV", {});
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div2_nodes);
			}

			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div3_nodes);
			if (if_block2) if_block2.l(div3_nodes);
			div3_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div4_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "c-accordion__icon c-accordion__icon--compact");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "c-accordion__button c-accordion__button--compact");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "is-open", !/*showCompactOpen*/ ctx[5]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "c-accordion__compact-heading cc-helper__h4");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div1, "c-accordion__compact-heading--no-title", !/*title*/ ctx[1]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "c-accordion__item-container-even", /*two_columns*/ ctx[2]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div3, "class", "c-accordion__container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div4, "class", "c-accordion");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div4, "c-accordion--compact", /*compact*/ ctx[0]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div4, "c-accordion--two_columns", /*two_columns*/ ctx[2]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div4, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div4, div3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, div1);
			if (if_block0) if_block0.m(div1, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, button);
			if_block1.m(button, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, div2);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div2, null);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, t3);
			if (if_block2) if_block2.m(div3, null);

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(button, "click", /*handleCompactClick*/ ctx[6]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (!!/*title*/ ctx[1]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_4(ctx);
					if_block0.c();
					if_block0.m(div1, t0);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (current_block_type !== (current_block_type = select_block_type(ctx, dirty))) {
				if_block1.d(1);
				if_block1 = current_block_type(ctx);

				if (if_block1) {
					if_block1.c();
					if_block1.m(button, t1);
				}
			}

			if (dirty & /*baseurl*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			}

			if (dirty & /*baseurl*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[3] + "/assets/chevron-down.svg')");
			}

			if (dirty & /*showCompactOpen*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "is-open", !/*showCompactOpen*/ ctx[5]);
			}

			if (dirty & /*title*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div1, "c-accordion__compact-heading--no-title", !/*title*/ ctx[1]);
			}

			if (dirty & /*newAccordionItems, handleIndividualAccordionClick, baseurl*/ 152) {
				each_value_1 = /*newAccordionItems*/ ctx[4];
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div2, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value_1.length;
			}

			if (dirty & /*two_columns*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "c-accordion__item-container-even", /*two_columns*/ ctx[2]);
			}

			if (/*two_columns*/ ctx[2]) {
				if (if_block2) {
					if_block2.p(ctx, dirty);
				} else {
					if_block2 = create_if_block(ctx);
					if_block2.c();
					if_block2.m(div3, null);
				}
			} else if (if_block2) {
				if_block2.d(1);
				if_block2 = null;
			}

			if (dirty & /*compact*/ 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div4, "c-accordion--compact", /*compact*/ ctx[0]);
			}

			if (dirty & /*two_columns*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div4, "c-accordion--two_columns", /*two_columns*/ ctx[2]);
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div4);
			if (if_block0) if_block0.d();
			if_block1.d();
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
			if (if_block2) if_block2.d();
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { id } = $$props;
	let { compact } = $$props;
	let { title } = $$props;
	let { accordion_items } = $$props;
	let { two_columns } = $$props;
	let { baseurl } = $$props;
	let newAccordionItems = accordion_items;
	let isCompactOpen = items => items.includes(item => item.is_open);
	let showCompactOpen = !isCompactOpen(newAccordionItems);

	function updateAccordionItems(items, id) {
		let id_counter = 0;

		const newArr = items.map(i => {
			const item = { ...i, id: `${id_counter}-${id}` };
			id_counter++;
			return item;
		});

		$$invalidate(4, newAccordionItems = newArr);
	}

	function handleCompactClick() {
		const newArr = newAccordionItems.map(item => ({ ...item, is_open: showCompactOpen }));
		$$invalidate(5, showCompactOpen = !showCompactOpen);
		$$invalidate(4, newAccordionItems = newArr);
	}

	function handleIndividualAccordionClick(clickedItem) {
		const newArr = newAccordionItems.map(item => item === clickedItem
		? { ...item, is_open: !item.is_open }
		: item);

		if (compact) {
			$$invalidate(5, showCompactOpen = newArr.filter(item => item.is_open === !showCompactOpen).length > 0
			? false
			: true);
		}

		$$invalidate(4, newAccordionItems = newArr);
	}

	updateAccordionItems(newAccordionItems, id);

	$$self.$$set = $$props => {
		if ("id" in $$props) $$invalidate(8, id = $$props.id);
		if ("compact" in $$props) $$invalidate(0, compact = $$props.compact);
		if ("title" in $$props) $$invalidate(1, title = $$props.title);
		if ("accordion_items" in $$props) $$invalidate(9, accordion_items = $$props.accordion_items);
		if ("two_columns" in $$props) $$invalidate(2, two_columns = $$props.two_columns);
		if ("baseurl" in $$props) $$invalidate(3, baseurl = $$props.baseurl);
	};

	return [
		compact,
		title,
		two_columns,
		baseurl,
		newAccordionItems,
		showCompactOpen,
		handleCompactClick,
		handleIndividualAccordionClick,
		id,
		accordion_items
	];
}

class Accordion extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			id: 8,
			compact: 0,
			title: 1,
			accordion_items: 9,
			two_columns: 2,
			baseurl: 3
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Accordion);

/***/ }),

/***/ "./_bookshop/components/button/button.svelte":
/*!***************************************************!*\
  !*** ./_bookshop/components/button/button.svelte ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* _bookshop/components/button/button.svelte generated by Svelte v3.29.0 */


function create_if_block_1(ctx) {
	let div;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", {
				class: true,
				"aria-hidden": true,
				style: true
			});

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-button__icon");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "aria-hidden", "true");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "height", /*icon_size_height_number*/ ctx[10]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "width", /*icon_size_width_number*/ ctx[9]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*icon_path*/ ctx[8] + "')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*icon_path*/ ctx[8] + "')");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*icon_size_height_number*/ 1024) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "height", /*icon_size_height_number*/ ctx[10]);
			}

			if (dirty & /*icon_size_width_number*/ 512) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "width", /*icon_size_width_number*/ ctx[9]);
			}

			if (dirty & /*icon_path*/ 256) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*icon_path*/ ctx[8] + "')");
			}

			if (dirty & /*icon_path*/ 256) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*icon_path*/ ctx[8] + "')");
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

// (34:4) {#if right_icon}
function create_if_block(ctx) {
	let div;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", {
				class: true,
				"aria-hidden": true,
				style: true
			});

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-button__icon");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "aria-hidden", "true");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "height", /*icon_size_height_number*/ ctx[10]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "width", /*icon_size_width_number*/ ctx[9]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*icon_path*/ ctx[8] + "')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*icon_path*/ ctx[8] + "')");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*icon_size_height_number*/ 1024) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "height", /*icon_size_height_number*/ ctx[10]);
			}

			if (dirty & /*icon_size_width_number*/ 512) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "width", /*icon_size_width_number*/ ctx[9]);
			}

			if (dirty & /*icon_path*/ 256) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*icon_path*/ ctx[8] + "')");
			}

			if (dirty & /*icon_path*/ 256) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*icon_path*/ ctx[8] + "')");
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

function create_fragment(ctx) {
	let button;
	let t0;
	let t1;
	let t2;
	let mounted;
	let dispose;
	let if_block0 = /*left_icon*/ ctx[6] && create_if_block_1(ctx);
	let if_block1 = /*right_icon*/ ctx[5] && create_if_block(ctx);

	return {
		c() {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			if (if_block0) if_block0.c();
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*content*/ ctx[4]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block1) if_block1.c();
			this.h();
		},
		l(nodes) {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "BUTTON", {
				id: true,
				class: true,
				"type:submit": true
			});

			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			if (if_block0) if_block0.l(button_nodes);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(button_nodes, /*content*/ ctx[4]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			if (if_block1) if_block1.l(button_nodes);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "id", /*id*/ ctx[0]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "c-button cc-helper__button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "type:submit", /*submit*/ ctx[7]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-button--disabled", /*disabled*/ ctx[1]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-helper__button--light", /*style*/ ctx[2] === "light");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-helper__button--dark", /*style*/ ctx[2] === "dark");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-button--link", /*link*/ ctx[3]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-button--right_icon", /*right_icon*/ ctx[5]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-button--left_icon", /*left_icon*/ ctx[6]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, button, anchor);
			if (if_block0) if_block0.m(button, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t2);
			if (if_block1) if_block1.m(button, null);

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(button, "click", function () {
					if (Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["is_function"])(/*onclick*/ ctx[11])) /*onclick*/ ctx[11].apply(this, arguments);
				});

				mounted = true;
			}
		},
		p(new_ctx, [dirty]) {
			ctx = new_ctx;

			if (/*left_icon*/ ctx[6]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					if_block0.m(button, t0);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (dirty & /*content*/ 16) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t1, /*content*/ ctx[4]);

			if (/*right_icon*/ ctx[5]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					if_block1.m(button, null);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (dirty & /*id*/ 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "id", /*id*/ ctx[0]);
			}

			if (dirty & /*submit*/ 128) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "type:submit", /*submit*/ ctx[7]);
			}

			if (dirty & /*disabled*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-button--disabled", /*disabled*/ ctx[1]);
			}

			if (dirty & /*style*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-helper__button--light", /*style*/ ctx[2] === "light");
			}

			if (dirty & /*style*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-helper__button--dark", /*style*/ ctx[2] === "dark");
			}

			if (dirty & /*link*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-button--link", /*link*/ ctx[3]);
			}

			if (dirty & /*right_icon*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-button--right_icon", /*right_icon*/ ctx[5]);
			}

			if (dirty & /*left_icon*/ 64) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-button--left_icon", /*left_icon*/ ctx[6]);
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(button);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { id } = $$props;
	let { disabled } = $$props;
	let { style } = $$props;
	let { link } = $$props;
	let { content } = $$props;
	let { right_icon } = $$props;
	let { left_icon } = $$props;
	let { submit } = $$props;
	let { icon_path } = $$props;
	let { icon_size_width_number } = $$props;
	let { icon_size_height_number } = $$props;
	let { onclick } = $$props;

	$$self.$$set = $$props => {
		if ("id" in $$props) $$invalidate(0, id = $$props.id);
		if ("disabled" in $$props) $$invalidate(1, disabled = $$props.disabled);
		if ("style" in $$props) $$invalidate(2, style = $$props.style);
		if ("link" in $$props) $$invalidate(3, link = $$props.link);
		if ("content" in $$props) $$invalidate(4, content = $$props.content);
		if ("right_icon" in $$props) $$invalidate(5, right_icon = $$props.right_icon);
		if ("left_icon" in $$props) $$invalidate(6, left_icon = $$props.left_icon);
		if ("submit" in $$props) $$invalidate(7, submit = $$props.submit);
		if ("icon_path" in $$props) $$invalidate(8, icon_path = $$props.icon_path);
		if ("icon_size_width_number" in $$props) $$invalidate(9, icon_size_width_number = $$props.icon_size_width_number);
		if ("icon_size_height_number" in $$props) $$invalidate(10, icon_size_height_number = $$props.icon_size_height_number);
		if ("onclick" in $$props) $$invalidate(11, onclick = $$props.onclick);
	};

	return [
		id,
		disabled,
		style,
		link,
		content,
		right_icon,
		left_icon,
		submit,
		icon_path,
		icon_size_width_number,
		icon_size_height_number,
		onclick
	];
}

class Button extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			id: 0,
			disabled: 1,
			style: 2,
			link: 3,
			content: 4,
			right_icon: 5,
			left_icon: 6,
			submit: 7,
			icon_path: 8,
			icon_size_width_number: 9,
			icon_size_height_number: 10,
			onclick: 11
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Button);

/***/ }),

/***/ "./_bookshop/components/contact-form/contact-form.svelte":
/*!***************************************************************!*\
  !*** ./_bookshop/components/contact-form/contact-form.svelte ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _input_input_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../input/input.svelte */ "./_bookshop/components/input/input.svelte");
/* _bookshop/components/contact-form/contact-form.svelte generated by Svelte v3.29.0 */





function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[10] = list[i];
	return child_ctx;
}

// (28:4) {#if recaptcha_id}
function create_if_block_3(ctx) {
	let script;
	let script_src_value;

	return {
		c() {
			script = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("script");
			this.h();
		},
		l(nodes) {
			script = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "SCRIPT", { src: true });
			var script_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(script);
			script_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			if (script.src !== (script_src_value = "https://www.google.com/recaptcha/api.js")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(script, "src", script_src_value);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, script, anchor);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(script);
		}
	};
}

// (42:12) {#if cloudcannon_encrypted_details}
function create_if_block_2(ctx) {
	let input;

	return {
		c() {
			input = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("input");
			this.h();
		},
		l(nodes) {
			input = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "INPUT", { type: true, name: true, value: true });
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "type", "hidden");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "name", "_encrypted_details");
			input.value = /*cloudcannon_encrypted_details*/ ctx[6];
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, input, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*cloudcannon_encrypted_details*/ 64) {
				input.value = /*cloudcannon_encrypted_details*/ ctx[6];
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(input);
		}
	};
}

// (64:16) {:else}
function create_else_block_1(ctx) {
	let input;
	let current;
	const input_spread_levels = [/*item*/ ctx[10]];
	let input_props = {};

	for (let i = 0; i < input_spread_levels.length; i += 1) {
		input_props = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["assign"])(input_props, input_spread_levels[i]);
	}

	input = new _input_input_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({ props: input_props });

	return {
		c() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(input.$$.fragment);
		},
		l(nodes) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(input.$$.fragment, nodes);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(input, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const input_changes = (dirty & /*form_items*/ 16)
			? Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["get_spread_update"])(input_spread_levels, [Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["get_spread_object"])(/*item*/ ctx[10])])
			: {};

			input.$set(input_changes);
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(input.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(input.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(input, detaching);
		}
	};
}

// (46:16) {#if item.input_type === 'submit'}
function create_if_block(ctx) {
	let div;
	let t;

	function select_block_type_1(ctx, dirty) {
		if (/*recaptcha_id*/ ctx[7]) return create_if_block_1;
		return create_else_block;
	}

	let current_block_type = select_block_type_1(ctx, -1);
	let if_block = current_block_type(ctx);

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if_block.c();
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			if_block.l(div_nodes);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div_nodes);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-contact-form__submit");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			if_block.m(div, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t);
		},
		p(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type_1(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div, t);
				}
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			if_block.d();
		}
	};
}

// (56:24) {:else}
function create_else_block(ctx) {
	let button;
	let t_value = /*item*/ ctx[10].default_value + "";
	let t;

	return {
		c() {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
			this.h();
		},
		l(nodes) {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "BUTTON", { class: true, type: true });
			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(button_nodes, t_value);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "cc-helper__button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "type", "submit");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, button, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t);
		},
		p(ctx, dirty) {
			if (dirty & /*form_items*/ 16 && t_value !== (t_value = /*item*/ ctx[10].default_value + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(button);
		}
	};
}

// (48:20) {#if recaptcha_id}
function create_if_block_1(ctx) {
	let button;
	let t_value = /*item*/ ctx[10].default_value + "";
	let t;

	return {
		c() {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
			this.h();
		},
		l(nodes) {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "BUTTON", {
				class: true,
				"data-sitekey": true,
				"data-callback": true,
				"data-action": true
			});

			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(button_nodes, t_value);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "g-recaptcha cc-helper__button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "data-sitekey", /*recaptcha_id*/ ctx[7]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "data-callback", "onContactSubmit");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "data-action", "submit");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, button, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t);
		},
		p(ctx, dirty) {
			if (dirty & /*form_items*/ 16 && t_value !== (t_value = /*item*/ ctx[10].default_value + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);

			if (dirty & /*recaptcha_id*/ 128) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "data-sitekey", /*recaptcha_id*/ ctx[7]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(button);
		}
	};
}

// (45:12) {#each form_items as item}
function create_each_block(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block_1];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*item*/ ctx[10].input_type === "submit") return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	return {
		c() {
			if_block.c();
			if_block_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		l(nodes) {
			if_block.l(nodes);
			if_block_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		m(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, if_block_anchor, anchor);
			current = true;
		},
		p(ctx, dirty) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block);
			current = false;
		},
		d(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(if_block_anchor);
		}
	};
}

function create_fragment(ctx) {
	let div1;
	let t0;
	let img0;
	let img0_src_value;
	let t1;
	let div0;
	let h2;
	let t2;
	let t3;
	let p;
	let t4;
	let t5;
	let img1;
	let img1_src_value;
	let t6;
	let form;
	let t7;
	let current;
	let if_block0 = /*recaptcha_id*/ ctx[7] && create_if_block_3(ctx);
	let if_block1 = /*cloudcannon_encrypted_details*/ ctx[6] && create_if_block_2(ctx);
	let each_value = /*form_items*/ ctx[4];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	return {
		c() {
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if (if_block0) if_block0.c();
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			img0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			h2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("h2");
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*heading*/ ctx[0]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("p");
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*content*/ ctx[1]);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			img1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			form = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("form");
			if (if_block1) if_block1.c();
			t7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			if (if_block0) if_block0.l(div1_nodes);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			img0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "IMG", { class: true, src: true, alt: true });
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "DIV", { class: true });
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			h2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div0_nodes, "H2", { class: true });
			var h2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(h2);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(h2_nodes, /*heading*/ ctx[0]);
			h2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div0_nodes);
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div0_nodes, "P", { class: true });
			var p_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(p);
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(p_nodes, /*content*/ ctx[1]);
			p_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div0_nodes);
			img1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div0_nodes, "IMG", { class: true, src: true, alt: true });
			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div0_nodes);
			form = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div0_nodes, "FORM", { id: true, method: true, action: true });
			var form_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(form);
			if (if_block1) if_block1.l(form_nodes);
			t7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(form_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(form_nodes);
			}

			form_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "class", "c-contact-form__image-laptop");
			if (img0.src !== (img0_src_value = /*image_path*/ ctx[2])) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "src", img0_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "alt", /*image_alt*/ ctx[3]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(h2, "class", "c-contact-form__heading");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "class", "c-contact-form__content");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "class", "c-contact-form__image-mobile");
			if (img1.src !== (img1_src_value = /*image_path*/ ctx[2])) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "src", img1_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "alt", /*image_alt*/ ctx[3]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(form, "id", /*formId*/ ctx[8]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(form, "method", "POST");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(form, "action", /*success_page*/ ctx[5]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "c-contact-form__body-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "c-contact-form");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div1, anchor);
			if (if_block0) if_block0.m(div1, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, img0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, h2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(h2, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, p);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(p, t4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t5);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, img1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t6);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, form);
			if (if_block1) if_block1.m(form, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(form, t7);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(form, null);
			}

			current = true;
		},
		p(ctx, [dirty]) {
			if (/*recaptcha_id*/ ctx[7]) {
				if (if_block0) {
					
				} else {
					if_block0 = create_if_block_3(ctx);
					if_block0.c();
					if_block0.m(div1, t0);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (!current || dirty & /*image_path*/ 4 && img0.src !== (img0_src_value = /*image_path*/ ctx[2])) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "src", img0_src_value);
			}

			if (!current || dirty & /*image_alt*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "alt", /*image_alt*/ ctx[3]);
			}

			if (!current || dirty & /*heading*/ 1) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t2, /*heading*/ ctx[0]);
			if (!current || dirty & /*content*/ 2) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t4, /*content*/ ctx[1]);

			if (!current || dirty & /*image_path*/ 4 && img1.src !== (img1_src_value = /*image_path*/ ctx[2])) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "src", img1_src_value);
			}

			if (!current || dirty & /*image_alt*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "alt", /*image_alt*/ ctx[3]);
			}

			if (/*cloudcannon_encrypted_details*/ ctx[6]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_2(ctx);
					if_block1.c();
					if_block1.m(form, t7);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (dirty & /*recaptcha_id, form_items*/ 144) {
				each_value = /*form_items*/ ctx[4];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks[i], 1);
						each_blocks[i].m(form, null);
					}
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
			}

			if (!current || dirty & /*formId*/ 256) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(form, "id", /*formId*/ ctx[8]);
			}

			if (!current || dirty & /*success_page*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(form, "action", /*success_page*/ ctx[5]);
			}
		},
		i(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks[i]);
			}

			current = true;
		},
		o(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(each_blocks[i]);
			}

			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div1);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { heading } = $$props;
	let { content } = $$props;
	let { image_path } = $$props;
	let { image_alt } = $$props;
	let { form_items } = $$props;
	let { success_page } = $$props;
	let { cloudcannon_encrypted_details } = $$props;
	let { recaptcha_id } = $$props;
	let { form_id } = $$props;
	let formId;

	Object(svelte__WEBPACK_IMPORTED_MODULE_1__["onMount"])(() => {
		$$invalidate(8, formId = form_id.replace("", "_"));

		window.onContactSubmit = function (token) {
			document.getElementById(formId).submit();
		};
	});

	$$self.$$set = $$props => {
		if ("heading" in $$props) $$invalidate(0, heading = $$props.heading);
		if ("content" in $$props) $$invalidate(1, content = $$props.content);
		if ("image_path" in $$props) $$invalidate(2, image_path = $$props.image_path);
		if ("image_alt" in $$props) $$invalidate(3, image_alt = $$props.image_alt);
		if ("form_items" in $$props) $$invalidate(4, form_items = $$props.form_items);
		if ("success_page" in $$props) $$invalidate(5, success_page = $$props.success_page);
		if ("cloudcannon_encrypted_details" in $$props) $$invalidate(6, cloudcannon_encrypted_details = $$props.cloudcannon_encrypted_details);
		if ("recaptcha_id" in $$props) $$invalidate(7, recaptcha_id = $$props.recaptcha_id);
		if ("form_id" in $$props) $$invalidate(9, form_id = $$props.form_id);
	};

	return [
		heading,
		content,
		image_path,
		image_alt,
		form_items,
		success_page,
		cloudcannon_encrypted_details,
		recaptcha_id,
		formId,
		form_id
	];
}

class Contact_form extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			heading: 0,
			content: 1,
			image_path: 2,
			image_alt: 3,
			form_items: 4,
			success_page: 5,
			cloudcannon_encrypted_details: 6,
			recaptcha_id: 7,
			form_id: 9
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Contact_form);

/***/ }),

/***/ "./_bookshop/components/input/input.svelte":
/*!*************************************************!*\
  !*** ./_bookshop/components/input/input.svelte ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* _bookshop/components/input/input.svelte generated by Svelte v3.29.0 */


function create_if_block_3(ctx) {
	let input;

	return {
		c() {
			input = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("input");
			this.h();
		},
		l(nodes) {
			input = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "INPUT", { class: true, type: true, value: true });
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "class", "c-input__submit cc-helper__button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "type", "submit");
			input.value = /*default_value*/ ctx[1];
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(input, "cc-helper__button--dark", /*button_dark*/ ctx[6]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, input, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*default_value*/ 2) {
				input.value = /*default_value*/ ctx[1];
			}

			if (dirty & /*button_dark*/ 64) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(input, "cc-helper__button--dark", /*button_dark*/ ctx[6]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(input);
		}
	};
}

// (51:4) {#if input_type != inputTypes.SUBMIT}
function create_if_block(ctx) {
	let label_1;
	let t0;
	let t1;
	let t2;
	let if_block1_anchor;

	function select_block_type_1(ctx, dirty) {
		if (/*input_type*/ ctx[5] === /*inputTypes*/ ctx[13].TEXTAREA) return create_if_block_2;
		return create_else_block;
	}

	let current_block_type = select_block_type_1(ctx, -1);
	let if_block0 = current_block_type(ctx);
	let if_block1 = /*is_required*/ ctx[4] && !/*isValid*/ ctx[9] && create_if_block_1(ctx);

	return {
		c() {
			label_1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("label");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*label*/ ctx[0]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if_block0.c();
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block1) if_block1.c();
			if_block1_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
			this.h();
		},
		l(nodes) {
			label_1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LABEL", { class: true, for: true });
			var label_1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(label_1);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(label_1_nodes, /*label*/ ctx[0]);
			label_1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);
			if_block0.l(nodes);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);
			if (if_block1) if_block1.l(nodes);
			if_block1_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(label_1, "class", "c-input__label");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(label_1, "for", /*formId*/ ctx[14]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, label_1, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(label_1, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t1, anchor);
			if_block0.m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t2, anchor);
			if (if_block1) if_block1.m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, if_block1_anchor, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*label*/ 1) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, /*label*/ ctx[0]);

			if (current_block_type === (current_block_type = select_block_type_1(ctx, dirty)) && if_block0) {
				if_block0.p(ctx, dirty);
			} else {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					if_block0.m(t2.parentNode, t2);
				}
			}

			if (/*is_required*/ ctx[4] && !/*isValid*/ ctx[9]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_1(ctx);
					if_block1.c();
					if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(label_1);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t1);
			if_block0.d(detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t2);
			if (if_block1) if_block1.d(detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(if_block1_anchor);
		}
	};
}

// (67:8) {:else}
function create_else_block(ctx) {
	let input;
	let mounted;
	let dispose;

	return {
		c() {
			input = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("input");
			this.h();
		},
		l(nodes) {
			input = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "INPUT", {
				placeholder: true,
				id: true,
				name: true,
				type: true,
				class: true,
				value: true,
				required: true,
				"aria-describedby": true
			});

			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "placeholder", /*placeholder*/ ctx[2]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "id", /*id*/ ctx[8]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "name", /*name*/ ctx[7]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "type", /*input_type*/ ctx[5]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "class", "c-input__input");
			input.value = /*default_value*/ ctx[1];
			input.required = /*is_required*/ ctx[4];
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "aria-describedby", "error");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(input, "c-input__input--valid", /*showValidState*/ ctx[11]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(input, "touched", /*isTouched*/ ctx[10]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, input, anchor);

			if (!mounted) {
				dispose = [
					Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(input, "blur", /*onBlur*/ ctx[15]),
					Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(input, "focus", /*onFocus*/ ctx[16])
				];

				mounted = true;
			}
		},
		p(ctx, dirty) {
			if (dirty & /*placeholder*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "placeholder", /*placeholder*/ ctx[2]);
			}

			if (dirty & /*id*/ 256) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "id", /*id*/ ctx[8]);
			}

			if (dirty & /*name*/ 128) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "name", /*name*/ ctx[7]);
			}

			if (dirty & /*input_type*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "type", /*input_type*/ ctx[5]);
			}

			if (dirty & /*default_value*/ 2 && input.value !== /*default_value*/ ctx[1]) {
				input.value = /*default_value*/ ctx[1];
			}

			if (dirty & /*is_required*/ 16) {
				input.required = /*is_required*/ ctx[4];
			}

			if (dirty & /*showValidState*/ 2048) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(input, "c-input__input--valid", /*showValidState*/ ctx[11]);
			}

			if (dirty & /*isTouched*/ 1024) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(input, "touched", /*isTouched*/ ctx[10]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(input);
			mounted = false;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["run_all"])(dispose);
		}
	};
}

// (53:8) {#if input_type === inputTypes.TEXTAREA}
function create_if_block_2(ctx) {
	let textarea;
	let mounted;
	let dispose;

	return {
		c() {
			textarea = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("textarea");
			this.h();
		},
		l(nodes) {
			textarea = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "TEXTAREA", {
				placeholder: true,
				id: true,
				name: true,
				rows: true,
				class: true,
				value: true,
				required: true,
				"aria-describedby": true
			});

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(textarea).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(textarea, "placeholder", /*placeholder*/ ctx[2]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(textarea, "id", /*id*/ ctx[8]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(textarea, "name", /*name*/ ctx[7]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(textarea, "rows", "6");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(textarea, "class", "c-input__input--text-area c-input__input");
			textarea.value = /*default_value*/ ctx[1];
			textarea.required = /*is_required*/ ctx[4];
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(textarea, "aria-describedby", "error");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(textarea, "c-input__input--valid", /*showValidState*/ ctx[11]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(textarea, "touched", /*isTouched*/ ctx[10]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, textarea, anchor);

			if (!mounted) {
				dispose = [
					Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(textarea, "blur", /*onBlur*/ ctx[15]),
					Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(textarea, "focus", /*onFocus*/ ctx[16])
				];

				mounted = true;
			}
		},
		p(ctx, dirty) {
			if (dirty & /*placeholder*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(textarea, "placeholder", /*placeholder*/ ctx[2]);
			}

			if (dirty & /*id*/ 256) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(textarea, "id", /*id*/ ctx[8]);
			}

			if (dirty & /*name*/ 128) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(textarea, "name", /*name*/ ctx[7]);
			}

			if (dirty & /*default_value*/ 2) {
				textarea.value = /*default_value*/ ctx[1];
			}

			if (dirty & /*is_required*/ 16) {
				textarea.required = /*is_required*/ ctx[4];
			}

			if (dirty & /*showValidState*/ 2048) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(textarea, "c-input__input--valid", /*showValidState*/ ctx[11]);
			}

			if (dirty & /*isTouched*/ 1024) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(textarea, "touched", /*isTouched*/ ctx[10]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(textarea);
			mounted = false;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["run_all"])(dispose);
		}
	};
}

// (83:8) {#if is_required && !isValid}
function create_if_block_1(ctx) {
	let div;
	let t;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*invalid_helper_text*/ ctx[3]);
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { id: true, class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div_nodes, /*invalid_helper_text*/ ctx[3]);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "id", "error");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-input__invalid-helper-text");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "cc-helper-hidden", /*hideErrorMessage*/ ctx[12]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t);
		},
		p(ctx, dirty) {
			if (dirty & /*invalid_helper_text*/ 8) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*invalid_helper_text*/ ctx[3]);

			if (dirty & /*hideErrorMessage*/ 4096) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "cc-helper-hidden", /*hideErrorMessage*/ ctx[12]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

function create_fragment(ctx) {
	let div;

	function select_block_type(ctx, dirty) {
		if (/*input_type*/ ctx[5] != /*inputTypes*/ ctx[13].SUBMIT) return create_if_block;
		if (/*input_type*/ ctx[5] === /*inputTypes*/ ctx[13].SUBMIT) return create_if_block_3;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block = current_block_type && current_block_type(ctx);

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if (if_block) if_block.c();
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			if (if_block) if_block.l(div_nodes);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-input");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			if (if_block) if_block.m(div, null);
		},
		p(ctx, [dirty]) {
			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if (if_block) if_block.d(1);
				if_block = current_block_type && current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div, null);
				}
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);

			if (if_block) {
				if_block.d();
			}
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	const inputTypes = {
		TEXTAREA: "textarea",
		TEXT: "text",
		EMAIL: "email",
		PASSWORD: "password",
		SUBMIT: "submit",
		TELEPHONE: "tel"
	};

	let { label } = $$props;
	let { default_value = "" } = $$props;
	let { placeholder } = $$props;
	let { invalid_helper_text } = $$props;
	let { is_required } = $$props;
	let { input_type } = $$props;
	let { button_dark } = $$props;
	let { name } = $$props;
	let { id } = $$props;
	let formId;
	let isValid = true;
	let isTouched = false;
	let showValidState = false;
	let hideErrorMessage = true;
	const validate = e => $$invalidate(9, isValid = e.target ? e.target.validity.valid : e.validity.valid);

	function onBlur(e) {
		validate(e);
		$$invalidate(10, isTouched = true);
		$$invalidate(11, showValidState = false);

		if (!isValid) {
			$$invalidate(12, hideErrorMessage = false);
		}
	}

	function onFocus() {
		if (isTouched && !isValid) {
			$$invalidate(11, showValidState = true);
		}

		if (isValid) {
			$$invalidate(10, isTouched = false);
		}

		$$invalidate(12, hideErrorMessage = true);
	}

	$$self.$$set = $$props => {
		if ("label" in $$props) $$invalidate(0, label = $$props.label);
		if ("default_value" in $$props) $$invalidate(1, default_value = $$props.default_value);
		if ("placeholder" in $$props) $$invalidate(2, placeholder = $$props.placeholder);
		if ("invalid_helper_text" in $$props) $$invalidate(3, invalid_helper_text = $$props.invalid_helper_text);
		if ("is_required" in $$props) $$invalidate(4, is_required = $$props.is_required);
		if ("input_type" in $$props) $$invalidate(5, input_type = $$props.input_type);
		if ("button_dark" in $$props) $$invalidate(6, button_dark = $$props.button_dark);
		if ("name" in $$props) $$invalidate(7, name = $$props.name);
		if ("id" in $$props) $$invalidate(8, id = $$props.id);
	};

	return [
		label,
		default_value,
		placeholder,
		invalid_helper_text,
		is_required,
		input_type,
		button_dark,
		name,
		id,
		isValid,
		isTouched,
		showValidState,
		hideErrorMessage,
		inputTypes,
		formId,
		onBlur,
		onFocus
	];
}

class Input extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			label: 0,
			default_value: 1,
			placeholder: 2,
			invalid_helper_text: 3,
			is_required: 4,
			input_type: 5,
			button_dark: 6,
			name: 7,
			id: 8
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Input);

/***/ }),

/***/ "./_bookshop/components/link/link.svelte":
/*!***********************************************!*\
  !*** ./_bookshop/components/link/link.svelte ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* _bookshop/components/link/link.svelte generated by Svelte v3.29.0 */


function create_if_block(ctx) {
	let div;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", {
				class: true,
				"aria-hidden": true,
				style: true
			});

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-link__link-svg c-button__icon");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "aria-hidden", "true");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron_right-18px.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron_right-18px.svg')");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*baseurl*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron_right-18px.svg')");
			}

			if (dirty & /*baseurl*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron_right-18px.svg')");
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

function create_fragment(ctx) {
	let a;
	let t0;
	let t1;
	let a_rel_value;
	let a_target_blank_value;
	let if_block = /*show_icon*/ ctx[3] && create_if_block(ctx);

	return {
		c() {
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*content*/ ctx[1]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block) if_block.c();
			this.h();
		},
		l(nodes) {
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "A", {
				class: true,
				href: true,
				rel: true,
				"target:blank": true
			});

			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a_nodes, /*content*/ ctx[1]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(a_nodes);
			if (if_block) if_block.l(a_nodes);
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "c-link");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", /*url*/ ctx[2]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "rel", a_rel_value = /*open_in_new_tab*/ ctx[4] ? "noopener" : null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "target:blank", a_target_blank_value = /*open_in_new_tab*/ ctx[4] ? "_blank" : null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(a, "cc-helper__button", /*style*/ ctx[0]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(a, "cc-helper__button--dark", /*style*/ ctx[0] === /*styleOptions*/ ctx[6].DARK);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(a, "cc-helper__button--light", /*style*/ ctx[0] === /*styleOptions*/ ctx[6].LIGHT);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, a, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t1);
			if (if_block) if_block.m(a, null);
		},
		p(ctx, [dirty]) {
			if (dirty & /*content*/ 2) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, /*content*/ ctx[1]);

			if (/*show_icon*/ ctx[3]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(a, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*url*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", /*url*/ ctx[2]);
			}

			if (dirty & /*open_in_new_tab*/ 16 && a_rel_value !== (a_rel_value = /*open_in_new_tab*/ ctx[4] ? "noopener" : null)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "rel", a_rel_value);
			}

			if (dirty & /*open_in_new_tab*/ 16 && a_target_blank_value !== (a_target_blank_value = /*open_in_new_tab*/ ctx[4] ? "_blank" : null)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "target:blank", a_target_blank_value);
			}

			if (dirty & /*style*/ 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(a, "cc-helper__button", /*style*/ ctx[0]);
			}

			if (dirty & /*style, styleOptions*/ 65) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(a, "cc-helper__button--dark", /*style*/ ctx[0] === /*styleOptions*/ ctx[6].DARK);
			}

			if (dirty & /*style, styleOptions*/ 65) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(a, "cc-helper__button--light", /*style*/ ctx[0] === /*styleOptions*/ ctx[6].LIGHT);
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(a);
			if (if_block) if_block.d();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	const styleOptions = {
		NONE: false,
		BUTTON: "button",
		LIGHT: "light",
		DARK: "dark"
	};

	let { style } = $$props;
	let { content } = $$props;
	let { url } = $$props;
	let { show_icon } = $$props;
	let { open_in_new_tab } = $$props;
	let { baseurl } = $$props;

	$$self.$$set = $$props => {
		if ("style" in $$props) $$invalidate(0, style = $$props.style);
		if ("content" in $$props) $$invalidate(1, content = $$props.content);
		if ("url" in $$props) $$invalidate(2, url = $$props.url);
		if ("show_icon" in $$props) $$invalidate(3, show_icon = $$props.show_icon);
		if ("open_in_new_tab" in $$props) $$invalidate(4, open_in_new_tab = $$props.open_in_new_tab);
		if ("baseurl" in $$props) $$invalidate(5, baseurl = $$props.baseurl);
	};

	return [style, content, url, show_icon, open_in_new_tab, baseurl, styleOptions];
}

class Link extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			style: 0,
			content: 1,
			url: 2,
			show_icon: 3,
			open_in_new_tab: 4,
			baseurl: 5
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Link);

/***/ }),

/***/ "./_bookshop/components/pricing-table/desktop-table/desktop-table.svelte":
/*!*******************************************************************************!*\
  !*** ./_bookshop/components/pricing-table/desktop-table/desktop-table.svelte ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _toggle_toggle_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../toggle/toggle.svelte */ "./_bookshop/components/toggle/toggle.svelte");
/* harmony import */ var _link_link_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../link/link.svelte */ "./_bookshop/components/link/link.svelte");
/* _bookshop/components/pricing-table/desktop-table/desktop-table.svelte generated by Svelte v3.29.0 */






function get_each_context_2(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[26] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[23] = list[i];
	return child_ctx;
}

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[20] = list[i];
	return child_ctx;
}

function get_each_context_3(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[29] = list[i];
	child_ctx[31] = i;
	return child_ctx;
}

// (77:24) {#if showPriceArray}
function create_if_block_5(ctx) {
	let t_value = /*showPriceArray*/ ctx[11][/*i*/ ctx[31]] + "";
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, t_value);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		p(ctx, dirty) {
			if (dirty[0] & /*showPriceArray*/ 2048 && t_value !== (t_value = /*showPriceArray*/ ctx[11][/*i*/ ctx[31]] + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (70:12) {#each table_headings as header, i}
function create_each_block_3(ctx) {
	let th;
	let div0;
	let t0_value = /*header*/ ctx[29].title + "";
	let t0;
	let t1;
	let div1;
	let t2;
	let div2;
	let link;
	let t3;
	let current;
	let if_block = /*showPriceArray*/ ctx[11] && create_if_block_5(ctx);

	link = new _link_link_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				url: /*header*/ ctx[29].button_url,
				content: /*header*/ ctx[29].button_text,
				style: "button"
			}
		});

	return {
		c() {
			th = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("th");
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if (if_block) if_block.c();
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(link.$$.fragment);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			th = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "TH", { class: true, style: true, scope: true });
			var th_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(th);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(th_nodes, "DIV", { class: true });
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div0_nodes, t0_value);
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(th_nodes);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(th_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			if (if_block) if_block.l(div1_nodes);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(th_nodes);
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(th_nodes, "DIV", { class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(link.$$.fragment, div2_nodes);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(th_nodes);
			th_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "c-pricing-desktop-table__cta-heading");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "c-pricing-desktop-table__cta-cash");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "c-pricing-desktop-table__cta-button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "c-pricing-desktop-table__cta-button--featured", /*header*/ ctx[29].featured);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(th, "class", "c-pricing-desktop-table__heading c-pricing-desktop-table__th");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(th, "width", /*tableWidth*/ ctx[10] + "%");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(th, "scope", "col");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, th, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(th, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(th, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(th, div1);
			if (if_block) if_block.m(div1, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(th, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(th, div2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(link, div2, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(th, t3);
			current = true;
		},
		p(ctx, dirty) {
			if ((!current || dirty[0] & /*table_headings*/ 512) && t0_value !== (t0_value = /*header*/ ctx[29].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (/*showPriceArray*/ ctx[11]) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_5(ctx);
					if_block.c();
					if_block.m(div1, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			const link_changes = {};
			if (dirty[0] & /*table_headings*/ 512) link_changes.url = /*header*/ ctx[29].button_url;
			if (dirty[0] & /*table_headings*/ 512) link_changes.content = /*header*/ ctx[29].button_text;
			link.$set(link_changes);

			if (dirty[0] & /*table_headings*/ 512) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "c-pricing-desktop-table__cta-button--featured", /*header*/ ctx[29].featured);
			}

			if (!current || dirty[0] & /*tableWidth*/ 1024) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(th, "width", /*tableWidth*/ ctx[10] + "%");
			}
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(link.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(link.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(th);
			if (if_block) if_block.d();
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(link);
		}
	};
}

// (108:36) 
function create_if_block_2(ctx) {
	let each_1_anchor;
	let each_value_2 = /*item*/ ctx[23].body;
	let each_blocks = [];

	for (let i = 0; i < each_value_2.length; i += 1) {
		each_blocks[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
	}

	return {
		c() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		l(nodes) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_1_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		m(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, each_1_anchor, anchor);
		},
		p(ctx, dirty) {
			if (dirty[0] & /*tableWidth, baseurl, table_rows*/ 1408) {
				each_value_2 = /*item*/ ctx[23].body;
				let i;

				for (i = 0; i < each_value_2.length; i += 1) {
					const child_ctx = get_each_context_2(ctx, each_value_2, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block_2(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value_2.length;
			}
		},
		d(detaching) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(each_1_anchor);
		}
	};
}

// (95:16) {#if item.heading}
function create_if_block(ctx) {
	let th;
	let div2;
	let div0;
	let t0_value = /*item*/ ctx[23].heading.title + "";
	let t0;
	let t1;
	let div1;
	let if_block = /*item*/ ctx[23].heading.tooltip && create_if_block_1(ctx);

	return {
		c() {
			th = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("th");
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if (if_block) if_block.c();
			this.h();
		},
		l(nodes) {
			th = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "TH", { class: true, scope: true });
			var th_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(th);
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(th_nodes, "DIV", { class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "DIV", {});
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div0_nodes, t0_value);
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			if (if_block) if_block.l(div1_nodes);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			th_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "c-pricing-desktop-table__row-tooltip");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "c-pricing-desktop-table__th-content");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(th, "class", "cc-helper__p c-pricing-desktop-table__th c-pricing-desktop-table__th--left-heading");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(th, "scope", "row");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, th, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(th, div2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, div1);
			if (if_block) if_block.m(div1, null);
		},
		p(ctx, dirty) {
			if (dirty[0] & /*table_rows*/ 256 && t0_value !== (t0_value = /*item*/ ctx[23].heading.title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (/*item*/ ctx[23].heading.tooltip) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_1(ctx);
					if_block.c();
					if_block.m(div1, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(th);
			if (if_block) if_block.d();
		}
	};
}

// (121:24) {:else}
function create_else_block(ctx) {
	let td;
	let t_value = /*cells*/ ctx[26] + "";
	let t;

	return {
		c() {
			td = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("td");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
			this.h();
		},
		l(nodes) {
			td = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "TD", { class: true, style: true });
			var td_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(td);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(td_nodes, t_value);
			td_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(td, "class", "cc-helper__p c-pricing-desktop-table__td");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(td, "width", /*tableWidth*/ ctx[10] + "%");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, td, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(td, t);
		},
		p(ctx, dirty) {
			if (dirty[0] & /*table_rows*/ 256 && t_value !== (t_value = /*cells*/ ctx[26] + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);

			if (dirty[0] & /*tableWidth*/ 1024) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(td, "width", /*tableWidth*/ ctx[10] + "%");
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(td);
		}
	};
}

// (116:41) 
function create_if_block_4(ctx) {
	let td;
	let div;
	let t0;
	let p;
	let t1;

	return {
		c() {
			td = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("td");
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("p");
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Not included");
			this.h();
		},
		l(nodes) {
			td = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "TD", { class: true, style: true });
			var td_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(td);
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(td_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(td_nodes);
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(td_nodes, "P", { class: true });
			var p_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(p);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(p_nodes, "Not included");
			p_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			td_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-pricing-table__cross");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[7] + "/assets/pricing/remove.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[7] + "/assets/pricing/remove.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "class", "cc-helper-hidden");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(td, "class", "c-pricing-desktop-table__td");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(td, "width", /*tableWidth*/ ctx[10] + "%");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, td, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(td, div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(td, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(td, p);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(p, t1);
		},
		p(ctx, dirty) {
			if (dirty[0] & /*baseurl*/ 128) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[7] + "/assets/pricing/remove.svg')");
			}

			if (dirty[0] & /*baseurl*/ 128) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[7] + "/assets/pricing/remove.svg')");
			}

			if (dirty[0] & /*tableWidth*/ 1024) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(td, "width", /*tableWidth*/ ctx[10] + "%");
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(td);
		}
	};
}

// (111:24) {#if cells === true}
function create_if_block_3(ctx) {
	let td;
	let div;
	let t0;
	let p;
	let t1;

	return {
		c() {
			td = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("td");
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("p");
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Included");
			this.h();
		},
		l(nodes) {
			td = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "TD", { class: true, style: true });
			var td_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(td);
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(td_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(td_nodes);
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(td_nodes, "P", { class: true });
			var p_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(p);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(p_nodes, "Included");
			p_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			td_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-pricing-table__tick");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[7] + "/assets/pricing/check.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[7] + "/assets/pricing/check.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "class", "cc-helper-hidden");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(td, "class", "c-pricing-desktop-table__td");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(td, "width", /*tableWidth*/ ctx[10] + "%");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, td, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(td, div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(td, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(td, p);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(p, t1);
		},
		p(ctx, dirty) {
			if (dirty[0] & /*baseurl*/ 128) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[7] + "/assets/pricing/check.svg')");
			}

			if (dirty[0] & /*baseurl*/ 128) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[7] + "/assets/pricing/check.svg')");
			}

			if (dirty[0] & /*tableWidth*/ 1024) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(td, "width", /*tableWidth*/ ctx[10] + "%");
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(td);
		}
	};
}

// (110:20) {#each item.body as cells}
function create_each_block_2(ctx) {
	let if_block_anchor;

	function select_block_type_1(ctx, dirty) {
		if (/*cells*/ ctx[26] === true) return create_if_block_3;
		if (!/*cells*/ ctx[26]) return create_if_block_4;
		return create_else_block;
	}

	let current_block_type = select_block_type_1(ctx, [-1]);
	let if_block = current_block_type(ctx);

	return {
		c() {
			if_block.c();
			if_block_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		l(nodes) {
			if_block.l(nodes);
			if_block_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		m(target, anchor) {
			if_block.m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, if_block_anchor, anchor);
		},
		p(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type_1(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			}
		},
		d(detaching) {
			if_block.d(detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(if_block_anchor);
		}
	};
}

// (102:32) {#if item.heading.tooltip}
function create_if_block_1(ctx) {
	let t_value = /*item*/ ctx[23].heading.tooltip + "";
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, t_value);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		p(ctx, dirty) {
			if (dirty[0] & /*table_rows*/ 256 && t_value !== (t_value = /*item*/ ctx[23].heading.tooltip + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (94:16) {#each row as item}
function create_each_block_1(ctx) {
	let if_block_anchor;

	function select_block_type(ctx, dirty) {
		if (/*item*/ ctx[23].heading) return create_if_block;
		if (/*item*/ ctx[23].body) return create_if_block_2;
	}

	let current_block_type = select_block_type(ctx, [-1]);
	let if_block = current_block_type && current_block_type(ctx);

	return {
		c() {
			if (if_block) if_block.c();
			if_block_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		l(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		m(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, if_block_anchor, anchor);
		},
		p(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if (if_block) if_block.d(1);
				if_block = current_block_type && current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			}
		},
		d(detaching) {
			if (if_block) {
				if_block.d(detaching);
			}

			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(if_block_anchor);
		}
	};
}

// (92:8) {#each table_rows as row}
function create_each_block(ctx) {
	let tr;
	let t;
	let each_value_1 = /*row*/ ctx[20];
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	return {
		c() {
			tr = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("tr");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			tr = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "TR", { class: true });
			var tr_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(tr);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(tr_nodes);
			}

			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(tr_nodes);
			tr_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(tr, "class", "c-pricing-desktop-table__tr");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, tr, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(tr, null);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(tr, t);
		},
		p(ctx, dirty) {
			if (dirty[0] & /*table_rows, tableWidth, baseurl*/ 1408) {
				each_value_1 = /*row*/ ctx[20];
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(tr, t);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value_1.length;
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(tr);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
		}
	};
}

function create_fragment(ctx) {
	let div;
	let table0;
	let tr;
	let th;
	let toggle;
	let t0;
	let t1;
	let table1;
	let caption_1;
	let t2;
	let t3;
	let current;

	toggle = new _toggle_toggle_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				label: /*toggle_label*/ ctx[1],
				left_text: /*toggle_left_text*/ ctx[2],
				left_subtext: /*toggle_left_subtext*/ ctx[3],
				right_text: /*toggle_right_text*/ ctx[4],
				right_subtext: /*toggle_right_subtext*/ ctx[5],
				id: /*toggle_id*/ ctx[6]
			}
		});

	let each_value_3 = /*table_headings*/ ctx[9];
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_3.length; i += 1) {
		each_blocks_1[i] = create_each_block_3(get_each_context_3(ctx, each_value_3, i));
	}

	const out = i => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(each_blocks_1[i], 1, 1, () => {
		each_blocks_1[i] = null;
	});

	let each_value = /*table_rows*/ ctx[8];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			table0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("table");
			tr = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("tr");
			th = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("th");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(toggle.$$.fragment);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			table1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("table");
			caption_1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("caption");
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*caption*/ ctx[0]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			table0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div_nodes, "TABLE", { bind: true, class: true });
			var table0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(table0);
			tr = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(table0_nodes, "TR", { class: true });
			var tr_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(tr);
			th = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(tr_nodes, "TH", { class: true, scope: true });
			var th_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(th);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(toggle.$$.fragment, th_nodes);
			th_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(tr_nodes);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(tr_nodes);
			}

			tr_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			table0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div_nodes);
			table1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div_nodes, "TABLE", { class: true });
			var table1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(table1);
			caption_1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(table1_nodes, "CAPTION", { class: true });
			var caption_1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(caption_1);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(caption_1_nodes, /*caption*/ ctx[0]);
			caption_1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(table1_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(table1_nodes);
			}

			table1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(th, "class", "c-pricing-desktop-table__heading c-pricing-desktop-table__th c-pricing-desktop-table__th--cta");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(th, "scope", "col");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(tr, "class", "c-pricing-desktop-table__tr");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(table0, "bind", /*showPriceArray*/ ctx[11]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(table0, "class", "c-pricing-desktop-table__table--cta");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(caption_1, "class", "cc-helper-hidden");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(table1, "class", "c-pricing-desktop-table__table");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-pricing-desktop-table");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, table0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(table0, tr);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(tr, th);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(toggle, th, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(tr, t0);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(tr, null);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, table1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(table1, caption_1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(caption_1, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(table1, t3);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(table1, null);
			}

			current = true;
		},
		p(ctx, dirty) {
			const toggle_changes = {};
			if (dirty[0] & /*toggle_label*/ 2) toggle_changes.label = /*toggle_label*/ ctx[1];
			if (dirty[0] & /*toggle_left_text*/ 4) toggle_changes.left_text = /*toggle_left_text*/ ctx[2];
			if (dirty[0] & /*toggle_left_subtext*/ 8) toggle_changes.left_subtext = /*toggle_left_subtext*/ ctx[3];
			if (dirty[0] & /*toggle_right_text*/ 16) toggle_changes.right_text = /*toggle_right_text*/ ctx[4];
			if (dirty[0] & /*toggle_right_subtext*/ 32) toggle_changes.right_subtext = /*toggle_right_subtext*/ ctx[5];
			if (dirty[0] & /*toggle_id*/ 64) toggle_changes.id = /*toggle_id*/ ctx[6];
			toggle.$set(toggle_changes);

			if (dirty[0] & /*tableWidth, table_headings, showPriceArray*/ 3584) {
				each_value_3 = /*table_headings*/ ctx[9];
				let i;

				for (i = 0; i < each_value_3.length; i += 1) {
					const child_ctx = get_each_context_3(ctx, each_value_3, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks_1[i], 1);
					} else {
						each_blocks_1[i] = create_each_block_3(child_ctx);
						each_blocks_1[i].c();
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks_1[i], 1);
						each_blocks_1[i].m(tr, null);
					}
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				for (i = each_value_3.length; i < each_blocks_1.length; i += 1) {
					out(i);
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
			}

			if (!current || dirty[0] & /*showPriceArray*/ 2048) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(table0, "bind", /*showPriceArray*/ ctx[11]);
			}

			if (!current || dirty[0] & /*caption*/ 1) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t2, /*caption*/ ctx[0]);

			if (dirty[0] & /*table_rows, tableWidth, baseurl*/ 1408) {
				each_value = /*table_rows*/ ctx[8];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(table1, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(toggle.$$.fragment, local);

			for (let i = 0; i < each_value_3.length; i += 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks_1[i]);
			}

			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(toggle.$$.fragment, local);
			each_blocks_1 = each_blocks_1.filter(Boolean);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(each_blocks_1[i]);
			}

			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(toggle);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks_1, detaching);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { caption } = $$props;
	let { toggle_label } = $$props;
	let { toggle_left_text } = $$props;
	let { toggle_left_subtext } = $$props;
	let { toggle_right_text } = $$props;
	let { toggle_right_subtext } = $$props;
	let { toggle_id } = $$props;
	let { baseurl } = $$props;
	let { table_rows } = $$props;
	let { table_headings } = $$props;
	let { store } = $$props;
	let toggleChecked;
	let tableWidth;
	let monthlyFee;
	let yearlyFee;
	let showPriceArray;
	let supportingText;

	const unsubscribe = store.subscribe(value => {
		toggleChecked = value;
		$$invalidate(11, showPriceArray = toggleChecked ? yearlyFee : monthlyFee);
		let toggle = document.getElementById(toggle_id);

		if (toggle) {
			toggle.checked = toggleChecked;
		}
	});

	function splitFeeArray() {
		monthlyFee = table_headings.map(item => item.price_monthly);
		yearlyFee = table_headings.map(item => item.price_annually);
	}

	function setBaseVariables() {
		$$invalidate(10, tableWidth = 100 / table_headings.length);
		$$invalidate(11, showPriceArray = monthlyFee);
	}

	Object(svelte__WEBPACK_IMPORTED_MODULE_1__["onMount"])(() => {
		console.log(baseurl);
		splitFeeArray();
		setBaseVariables();

		document.getElementById(toggle_id).addEventListener("click", e => {
			if (!!store) {
				store.update(_ => e.target.checked);
			}
		});
	});

	Object(svelte__WEBPACK_IMPORTED_MODULE_1__["onDestroy"])(unsubscribe);

	$$self.$$set = $$props => {
		if ("caption" in $$props) $$invalidate(0, caption = $$props.caption);
		if ("toggle_label" in $$props) $$invalidate(1, toggle_label = $$props.toggle_label);
		if ("toggle_left_text" in $$props) $$invalidate(2, toggle_left_text = $$props.toggle_left_text);
		if ("toggle_left_subtext" in $$props) $$invalidate(3, toggle_left_subtext = $$props.toggle_left_subtext);
		if ("toggle_right_text" in $$props) $$invalidate(4, toggle_right_text = $$props.toggle_right_text);
		if ("toggle_right_subtext" in $$props) $$invalidate(5, toggle_right_subtext = $$props.toggle_right_subtext);
		if ("toggle_id" in $$props) $$invalidate(6, toggle_id = $$props.toggle_id);
		if ("baseurl" in $$props) $$invalidate(7, baseurl = $$props.baseurl);
		if ("table_rows" in $$props) $$invalidate(8, table_rows = $$props.table_rows);
		if ("table_headings" in $$props) $$invalidate(9, table_headings = $$props.table_headings);
		if ("store" in $$props) $$invalidate(12, store = $$props.store);
	};

	return [
		caption,
		toggle_label,
		toggle_left_text,
		toggle_left_subtext,
		toggle_right_text,
		toggle_right_subtext,
		toggle_id,
		baseurl,
		table_rows,
		table_headings,
		tableWidth,
		showPriceArray,
		store
	];
}

class Desktop_table extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(
			this,
			options,
			instance,
			create_fragment,
			svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"],
			{
				caption: 0,
				toggle_label: 1,
				toggle_left_text: 2,
				toggle_left_subtext: 3,
				toggle_right_text: 4,
				toggle_right_subtext: 5,
				toggle_id: 6,
				baseurl: 7,
				table_rows: 8,
				table_headings: 9,
				store: 12
			},
			[-1, -1]
		);
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Desktop_table);

/***/ }),

/***/ "./_bookshop/components/pricing-table/mobile-table/mobile-table.svelte":
/*!*****************************************************************************!*\
  !*** ./_bookshop/components/pricing-table/mobile-table/mobile-table.svelte ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* _bookshop/components/pricing-table/mobile-table/mobile-table.svelte generated by Svelte v3.29.0 */




function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[11] = list[i];
	return child_ctx;
}

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[8] = list[i];
	return child_ctx;
}

function get_each_context_2(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[14] = list[i];
	return child_ctx;
}

// (32:8) {#each table_headings as header}
function create_each_block_2(ctx) {
	let button;
	let t0_value = /*header*/ ctx[14].title + "";
	let t0;
	let t1;
	let mounted;
	let dispose;

	return {
		c() {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "BUTTON", { class: true });
			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(button_nodes, t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "c-pricing-mobile-table__toggle-item");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-pricing-mobile-table__toggle-item--selected", /*header*/ ctx[14].title === /*table_headings*/ ctx[1][/*index*/ ctx[4]].title);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, button, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t1);

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(button, "click", function () {
					if (Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["is_function"])(/*updateIndex*/ ctx[5](/*header*/ ctx[14]))) /*updateIndex*/ ctx[5](/*header*/ ctx[14]).apply(this, arguments);
				});

				mounted = true;
			}
		},
		p(new_ctx, dirty) {
			ctx = new_ctx;
			if (dirty & /*table_headings*/ 2 && t0_value !== (t0_value = /*header*/ ctx[14].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (dirty & /*table_headings, index*/ 18) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "c-pricing-mobile-table__toggle-item--selected", /*header*/ ctx[14].title === /*table_headings*/ ctx[1][/*index*/ ctx[4]].title);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(button);
			mounted = false;
			dispose();
		}
	};
}

// (44:16) {:else}
function create_else_block_2(ctx) {
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Price Monthly");
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, "Price Monthly");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (42:16) {#if toggleChecked}
function create_if_block_6(ctx) {
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Price Annually");
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, "Price Annually");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (51:16) {:else}
function create_else_block_1(ctx) {
	let t_value = /*table_headings*/ ctx[1][/*index*/ ctx[4]].price_monthly + "";
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, t_value);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*table_headings, index*/ 18 && t_value !== (t_value = /*table_headings*/ ctx[1][/*index*/ ctx[4]].price_monthly + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (49:16) {#if toggleChecked}
function create_if_block_5(ctx) {
	let t_value = /*table_headings*/ ctx[1][/*index*/ ctx[4]].price_annually + "";
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, t_value);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*table_headings, index*/ 18 && t_value !== (t_value = /*table_headings*/ ctx[1][/*index*/ ctx[4]].price_annually + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (69:40) 
function create_if_block_2(ctx) {
	let div;

	function select_block_type_3(ctx, dirty) {
		if (/*item*/ ctx[11].body[/*index*/ ctx[4]] == true) return create_if_block_3;
		if (/*item*/ ctx[11].body[/*index*/ ctx[4]] == false) return create_if_block_4;
		return create_else_block;
	}

	let current_block_type = select_block_type_3(ctx, -1);
	let if_block = current_block_type(ctx);

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if_block.c();
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			if_block.l(div_nodes);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-pricing-mobile-table__row-body");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			if_block.m(div, null);
		},
		p(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type_3(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div, null);
				}
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			if_block.d();
		}
	};
}

// (59:20) {#if item.heading}
function create_if_block(ctx) {
	let div;
	let t0_value = /*item*/ ctx[11].heading.title + "";
	let t0;
	let t1;
	let if_block = /*item*/ ctx[11].heading.tooltip && create_if_block_1(ctx);

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block) if_block.c();
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div_nodes, t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div_nodes);
			if (if_block) if_block.l(div_nodes);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-pricing-mobile-table__row-heading");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t1);
			if (if_block) if_block.m(div, null);
		},
		p(ctx, dirty) {
			if (dirty & /*table_rows*/ 1 && t0_value !== (t0_value = /*item*/ ctx[11].heading.title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (/*item*/ ctx[11].heading.tooltip) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_1(ctx);
					if_block.c();
					if_block.m(div, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			if (if_block) if_block.d();
		}
	};
}

// (75:28) {:else}
function create_else_block(ctx) {
	let t_value = /*item*/ ctx[11].body[/*index*/ ctx[4]] + "";
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, t_value);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*table_rows, index*/ 17 && t_value !== (t_value = /*item*/ ctx[11].body[/*index*/ ctx[4]] + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (73:64) 
function create_if_block_4(ctx) {
	let div;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-pricing-table__cross");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/pricing/remove.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/pricing/remove.svg')");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*baseurl*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/pricing/remove.svg')");
			}

			if (dirty & /*baseurl*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/pricing/remove.svg')");
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

// (71:28) {#if item.body[index] == true}
function create_if_block_3(ctx) {
	let div;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-pricing-table__tick");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/pricing/check.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/pricing/check.svg')");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*baseurl*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/pricing/check.svg')");
			}

			if (dirty & /*baseurl*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/pricing/check.svg')");
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

// (62:28) {#if item.heading.tooltip}
function create_if_block_1(ctx) {
	let div;
	let t_value = /*item*/ ctx[11].heading.tooltip + "";
	let t;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div_nodes, t_value);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-pricing-mobile-table__row-tooltip");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t);
		},
		p(ctx, dirty) {
			if (dirty & /*table_rows*/ 1 && t_value !== (t_value = /*item*/ ctx[11].heading.tooltip + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

// (58:16) {#each row as item}
function create_each_block_1(ctx) {
	let if_block_anchor;

	function select_block_type_2(ctx, dirty) {
		if (/*item*/ ctx[11].heading) return create_if_block;
		if (/*item*/ ctx[11].body) return create_if_block_2;
	}

	let current_block_type = select_block_type_2(ctx, -1);
	let if_block = current_block_type && current_block_type(ctx);

	return {
		c() {
			if (if_block) if_block.c();
			if_block_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		l(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		m(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, if_block_anchor, anchor);
		},
		p(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type_2(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if (if_block) if_block.d(1);
				if_block = current_block_type && current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			}
		},
		d(detaching) {
			if (if_block) {
				if_block.d(detaching);
			}

			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(if_block_anchor);
		}
	};
}

// (56:8) {#each table_rows as row}
function create_each_block(ctx) {
	let li;
	let t;
	let each_value_1 = /*row*/ ctx[8];
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LI", { class: true });
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(li_nodes);
			}

			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "c-pricing-mobile-table__row");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(li, null);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t);
		},
		p(ctx, dirty) {
			if (dirty & /*table_rows, baseurl, index*/ 21) {
				each_value_1 = /*row*/ ctx[8];
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(li, t);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value_1.length;
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
		}
	};
}

function create_fragment(ctx) {
	let div3;
	let div0;
	let t0;
	let ul;
	let li;
	let div1;
	let t1;
	let div2;
	let t2;
	let each_value_2 = /*table_headings*/ ctx[1];
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_2.length; i += 1) {
		each_blocks_1[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
	}

	function select_block_type(ctx, dirty) {
		if (/*toggleChecked*/ ctx[3]) return create_if_block_6;
		return create_else_block_2;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block0 = current_block_type(ctx);

	function select_block_type_1(ctx, dirty) {
		if (/*toggleChecked*/ ctx[3]) return create_if_block_5;
		return create_else_block_1;
	}

	let current_block_type_1 = select_block_type_1(ctx, -1);
	let if_block1 = current_block_type_1(ctx);
	let each_value = /*table_rows*/ ctx[0];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("ul");
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if_block0.c();
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if_block1.c();
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div3_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div3);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "DIV", { class: true });
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(div0_nodes);
			}

			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div3_nodes);
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "UL", { bind: true, class: true });
			var ul_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(ul);
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(ul_nodes, "LI", { class: true });
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			if_block0.l(div1_nodes);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li_nodes, "DIV", { class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);
			if_block1.l(div2_nodes);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(ul_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div3_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "c-pricing-mobile-table__toggle-group");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "c-pricing-mobile-table__row-heading");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "c-pricing-mobile-table__row-body");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "c-pricing-mobile-table__row");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "bind", /*index*/ ctx[4]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "class", "c-pricing-mobile-table__body-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div3, "class", "c-pricing-mobile-table");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div3, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, div0);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(div0, null);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, ul);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(ul, li);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, div1);
			if_block0.m(div1, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, div2);
			if_block1.m(div2, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(ul, t2);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*table_headings, index, updateIndex*/ 50) {
				each_value_2 = /*table_headings*/ ctx[1];
				let i;

				for (i = 0; i < each_value_2.length; i += 1) {
					const child_ctx = get_each_context_2(ctx, each_value_2, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_2(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(div0, null);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_2.length;
			}

			if (current_block_type !== (current_block_type = select_block_type(ctx, dirty))) {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					if_block0.m(div1, null);
				}
			}

			if (current_block_type_1 === (current_block_type_1 = select_block_type_1(ctx, dirty)) && if_block1) {
				if_block1.p(ctx, dirty);
			} else {
				if_block1.d(1);
				if_block1 = current_block_type_1(ctx);

				if (if_block1) {
					if_block1.c();
					if_block1.m(div2, null);
				}
			}

			if (dirty & /*table_rows, baseurl, index*/ 21) {
				each_value = /*table_rows*/ ctx[0];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (dirty & /*index*/ 16) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "bind", /*index*/ ctx[4]);
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks_1, detaching);
			if_block0.d();
			if_block1.d();
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { table_rows } = $$props;
	let { table_headings } = $$props;
	let { baseurl } = $$props;
	let { store } = $$props;
	let toggleChecked;
	let unsubscribe;
	let index = 0;

	if (store) {
		unsubscribe = store.subscribe(value => {
			if (typeof value == "boolean") {
				$$invalidate(3, toggleChecked = value);
			}
		});
	}

	function updateIndex(header) {
		$$invalidate(4, index = table_headings.indexOf(header));
	}

	Object(svelte__WEBPACK_IMPORTED_MODULE_1__["onDestroy"])(unsubscribe);

	$$self.$$set = $$props => {
		if ("table_rows" in $$props) $$invalidate(0, table_rows = $$props.table_rows);
		if ("table_headings" in $$props) $$invalidate(1, table_headings = $$props.table_headings);
		if ("baseurl" in $$props) $$invalidate(2, baseurl = $$props.baseurl);
		if ("store" in $$props) $$invalidate(6, store = $$props.store);
	};

	return [table_rows, table_headings, baseurl, toggleChecked, index, updateIndex, store];
}

class Mobile_table extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			table_rows: 0,
			table_headings: 1,
			baseurl: 2,
			store: 6
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Mobile_table);

/***/ }),

/***/ "./_bookshop/components/pricing-table/table/table.svelte":
/*!***************************************************************!*\
  !*** ./_bookshop/components/pricing-table/table/table.svelte ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _mobile_table_mobile_table_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../mobile-table/mobile-table.svelte */ "./_bookshop/components/pricing-table/mobile-table/mobile-table.svelte");
/* harmony import */ var _desktop_table_desktop_table_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../desktop-table/desktop-table.svelte */ "./_bookshop/components/pricing-table/desktop-table/desktop-table.svelte");
/* _bookshop/components/pricing-table/table/table.svelte generated by Svelte v3.29.0 */





function create_if_block_1(ctx) {
	let h3;
	let t;

	return {
		c() {
			h3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("h3");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*heading*/ ctx[1]);
			this.h();
		},
		l(nodes) {
			h3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "H3", { class: true });
			var h3_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(h3);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(h3_nodes, /*heading*/ ctx[1]);
			h3_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(h3, "class", "c-pricing-table__heading cc-helper__h4");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, h3, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(h3, t);
		},
		p(ctx, dirty) {
			if (dirty & /*heading*/ 2) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*heading*/ ctx[1]);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(h3);
		}
	};
}

// (28:4) {#if heading_type === headingType.H2}
function create_if_block(ctx) {
	let h2;
	let t;

	return {
		c() {
			h2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("h2");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*heading*/ ctx[1]);
			this.h();
		},
		l(nodes) {
			h2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "H2", { class: true });
			var h2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(h2);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(h2_nodes, /*heading*/ ctx[1]);
			h2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(h2, "class", "c-pricing-table__heading cc-helper__h4");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, h2, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(h2, t);
		},
		p(ctx, dirty) {
			if (dirty & /*heading*/ 2) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*heading*/ ctx[1]);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(h2);
		}
	};
}

function create_fragment(ctx) {
	let div2;
	let t0;
	let div0;
	let desktoptable;
	let t1;
	let div1;
	let mobiletable;
	let current;

	function select_block_type(ctx, dirty) {
		if (/*heading_type*/ ctx[11] === /*headingType*/ ctx[13].H2) return create_if_block;
		if (/*heading_type*/ ctx[11] === /*headingType*/ ctx[13].H3) return create_if_block_1;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block = current_block_type && current_block_type(ctx);

	desktoptable = new _desktop_table_desktop_table_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				caption: /*caption*/ ctx[2],
				toggle_id: /*toggle_id*/ ctx[8],
				toggle_label: /*toggle_label*/ ctx[3],
				toggle_left_text: /*toggle_left_text*/ ctx[4],
				toggle_left_subtext: /*toggle_left_subtext*/ ctx[5],
				toggle_right_text: /*toggle_right_text*/ ctx[6],
				toggle_right_subtext: /*toggle_right_subtext*/ ctx[7],
				table_rows: /*table_rows*/ ctx[9],
				table_headings: /*table_headings*/ ctx[10],
				store: /*store*/ ctx[0],
				baseurl: /*baseurl*/ ctx[12]
			}
		});

	mobiletable = new _mobile_table_mobile_table_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: {
				table_rows: /*table_rows*/ ctx[9],
				table_headings: /*table_headings*/ ctx[10],
				store: /*store*/ ctx[0],
				baseurl: /*baseurl*/ ctx[12]
			}
		});

	return {
		c() {
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if (if_block) if_block.c();
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(desktoptable.$$.fragment);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(mobiletable.$$.fragment);
			this.h();
		},
		l(nodes) {
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);
			if (if_block) if_block.l(div2_nodes);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "DIV", { class: true });
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(desktoptable.$$.fragment, div0_nodes);
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(mobiletable.$$.fragment, div1_nodes);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "c-pricing-table__desktop");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "c-pricing-table__mobile");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "c-pricing-table");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div2, anchor);
			if (if_block) if_block.m(div2, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(desktoptable, div0, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, div1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(mobiletable, div1, null);
			current = true;
		},
		p(ctx, [dirty]) {
			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if (if_block) if_block.d(1);
				if_block = current_block_type && current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div2, t0);
				}
			}

			const desktoptable_changes = {};
			if (dirty & /*caption*/ 4) desktoptable_changes.caption = /*caption*/ ctx[2];
			if (dirty & /*toggle_id*/ 256) desktoptable_changes.toggle_id = /*toggle_id*/ ctx[8];
			if (dirty & /*toggle_label*/ 8) desktoptable_changes.toggle_label = /*toggle_label*/ ctx[3];
			if (dirty & /*toggle_left_text*/ 16) desktoptable_changes.toggle_left_text = /*toggle_left_text*/ ctx[4];
			if (dirty & /*toggle_left_subtext*/ 32) desktoptable_changes.toggle_left_subtext = /*toggle_left_subtext*/ ctx[5];
			if (dirty & /*toggle_right_text*/ 64) desktoptable_changes.toggle_right_text = /*toggle_right_text*/ ctx[6];
			if (dirty & /*toggle_right_subtext*/ 128) desktoptable_changes.toggle_right_subtext = /*toggle_right_subtext*/ ctx[7];
			if (dirty & /*table_rows*/ 512) desktoptable_changes.table_rows = /*table_rows*/ ctx[9];
			if (dirty & /*table_headings*/ 1024) desktoptable_changes.table_headings = /*table_headings*/ ctx[10];
			if (dirty & /*store*/ 1) desktoptable_changes.store = /*store*/ ctx[0];
			if (dirty & /*baseurl*/ 4096) desktoptable_changes.baseurl = /*baseurl*/ ctx[12];
			desktoptable.$set(desktoptable_changes);
			const mobiletable_changes = {};
			if (dirty & /*table_rows*/ 512) mobiletable_changes.table_rows = /*table_rows*/ ctx[9];
			if (dirty & /*table_headings*/ 1024) mobiletable_changes.table_headings = /*table_headings*/ ctx[10];
			if (dirty & /*store*/ 1) mobiletable_changes.store = /*store*/ ctx[0];
			if (dirty & /*baseurl*/ 4096) mobiletable_changes.baseurl = /*baseurl*/ ctx[12];
			mobiletable.$set(mobiletable_changes);
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(desktoptable.$$.fragment, local);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(mobiletable.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(desktoptable.$$.fragment, local);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(mobiletable.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div2);

			if (if_block) {
				if_block.d();
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(desktoptable);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(mobiletable);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { store } = $$props;
	const headingType = { H2: "h2", H3: "h3" };
	let { heading } = $$props;
	let { caption } = $$props;
	let { toggle_label } = $$props;
	let { toggle_left_text } = $$props;
	let { toggle_left_subtext } = $$props;
	let { toggle_right_text } = $$props;
	let { toggle_right_subtext } = $$props;
	let { toggle_id } = $$props;
	let { table_rows } = $$props;
	let { table_headings } = $$props;
	let { heading_type } = $$props;
	let { baseurl } = $$props;

	$$self.$$set = $$props => {
		if ("store" in $$props) $$invalidate(0, store = $$props.store);
		if ("heading" in $$props) $$invalidate(1, heading = $$props.heading);
		if ("caption" in $$props) $$invalidate(2, caption = $$props.caption);
		if ("toggle_label" in $$props) $$invalidate(3, toggle_label = $$props.toggle_label);
		if ("toggle_left_text" in $$props) $$invalidate(4, toggle_left_text = $$props.toggle_left_text);
		if ("toggle_left_subtext" in $$props) $$invalidate(5, toggle_left_subtext = $$props.toggle_left_subtext);
		if ("toggle_right_text" in $$props) $$invalidate(6, toggle_right_text = $$props.toggle_right_text);
		if ("toggle_right_subtext" in $$props) $$invalidate(7, toggle_right_subtext = $$props.toggle_right_subtext);
		if ("toggle_id" in $$props) $$invalidate(8, toggle_id = $$props.toggle_id);
		if ("table_rows" in $$props) $$invalidate(9, table_rows = $$props.table_rows);
		if ("table_headings" in $$props) $$invalidate(10, table_headings = $$props.table_headings);
		if ("heading_type" in $$props) $$invalidate(11, heading_type = $$props.heading_type);
		if ("baseurl" in $$props) $$invalidate(12, baseurl = $$props.baseurl);
	};

	return [
		store,
		heading,
		caption,
		toggle_label,
		toggle_left_text,
		toggle_left_subtext,
		toggle_right_text,
		toggle_right_subtext,
		toggle_id,
		table_rows,
		table_headings,
		heading_type,
		baseurl,
		headingType
	];
}

class Table extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			store: 0,
			heading: 1,
			caption: 2,
			toggle_label: 3,
			toggle_left_text: 4,
			toggle_left_subtext: 5,
			toggle_right_text: 6,
			toggle_right_subtext: 7,
			toggle_id: 8,
			table_rows: 9,
			table_headings: 10,
			heading_type: 11,
			baseurl: 12
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Table);

/***/ }),

/***/ "./_bookshop/components/pricing/block/block.svelte":
/*!*********************************************************!*\
  !*** ./_bookshop/components/pricing/block/block.svelte ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _link_link_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../link/link.svelte */ "./_bookshop/components/link/link.svelte");
/* _bookshop/components/pricing/block/block.svelte generated by Svelte v3.29.0 */





function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[16] = list[i];
	return child_ctx;
}

// (38:8) {#if featured}
function create_if_block_4(ctx) {
	let div;
	let t;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*featured_tag_text*/ ctx[9]);
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div_nodes, /*featured_tag_text*/ ctx[9]);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-pricing-block__tag");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t);
		},
		p(ctx, dirty) {
			if (dirty & /*featured_tag_text*/ 512) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*featured_tag_text*/ ctx[9]);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

// (48:12) {#if subheading}
function create_if_block_3(ctx) {
	let div;
	let t;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*subheading*/ ctx[2]);
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", {});
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div_nodes, /*subheading*/ ctx[2]);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t);
		},
		p(ctx, dirty) {
			if (dirty & /*subheading*/ 4) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*subheading*/ ctx[2]);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

// (57:20) {:else}
function create_else_block(ctx) {
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*price_monthly*/ ctx[4]);
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, /*price_monthly*/ ctx[4]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*price_monthly*/ 16) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*price_monthly*/ ctx[4]);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (55:20) {#if toggleChecked}
function create_if_block_2(ctx) {
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*price_annually*/ ctx[5]);
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, /*price_annually*/ ctx[5]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*price_annually*/ 32) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*price_annually*/ ctx[5]);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (61:16) {#if price_secondary_text}
function create_if_block_1(ctx) {
	let span;
	let t;

	return {
		c() {
			span = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*price_secondary_text*/ ctx[6]);
			this.h();
		},
		l(nodes) {
			span = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "SPAN", { class: true });
			var span_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(span_nodes, /*price_secondary_text*/ ctx[6]);
			span_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span, "class", "c-pricing-block__price-secondary");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, span, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(span, t);
		},
		p(ctx, dirty) {
			if (dirty & /*price_secondary_text*/ 64) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*price_secondary_text*/ ctx[6]);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(span);
		}
	};
}

// (71:16) {#if description}
function create_if_block(ctx) {
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*description*/ ctx[7]);
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, /*description*/ ctx[7]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*description*/ 128) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*description*/ ctx[7]);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (75:20) {#each list as item}
function create_each_block(ctx) {
	let li;
	let img;
	let img_src_value;
	let t0_value = /*item*/ ctx[16].list_item + "";
	let t0;
	let t1;

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			img = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LI", { class: true });
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);

			img = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li_nodes, "IMG", {
				class: true,
				src: true,
				"aria-hidden": true,
				alt: true
			});

			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(li_nodes, t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "class", "c-pricing-block__list-icon");
			if (img.src !== (img_src_value = "/assets/tick.svg")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "src", img_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "aria-hidden", "true");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "alt", "");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "c-pricing-block__list-item");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, img);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t1);
		},
		p(ctx, dirty) {
			if (dirty & /*list*/ 256 && t0_value !== (t0_value = /*item*/ ctx[16].list_item + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
		}
	};
}

function create_fragment(ctx) {
	let div7;
	let div6;
	let t0;
	let div2;
	let img;
	let img_src_value;
	let t1;
	let div0;
	let t2;
	let t3;
	let t4;
	let div1;
	let span;
	let t5;
	let t6;
	let div5;
	let div3;
	let t7;
	let ul;
	let t8;
	let div4;
	let link;
	let current;
	let if_block0 = /*featured*/ ctx[0] && create_if_block_4(ctx);
	let if_block1 = /*subheading*/ ctx[2] && create_if_block_3(ctx);

	function select_block_type(ctx, dirty) {
		if (/*toggleChecked*/ ctx[13]) return create_if_block_2;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block2 = current_block_type(ctx);
	let if_block3 = /*price_secondary_text*/ ctx[6] && create_if_block_1(ctx);
	let if_block4 = /*description*/ ctx[7] && create_if_block(ctx);
	let each_value = /*list*/ ctx[8];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	link = new _link_link_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				url: /*link_url*/ ctx[10],
				content: /*link_content*/ ctx[11],
				button: "true",
				open_in_new_tab: /*open_in_new_tab*/ ctx[12],
				style: "light"
			}
		});

	return {
		c() {
			div7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if (if_block0) if_block0.c();
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			img = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*heading*/ ctx[1]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block1) if_block1.c();
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			span = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			if_block2.c();
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block3) if_block3.c();
			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if (if_block4) if_block4.c();
			t7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t8 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(link.$$.fragment);
			this.h();
		},
		l(nodes) {
			div7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div7_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div7);
			div6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div7_nodes, "DIV", { class: true });
			var div6_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div6);
			if (if_block0) if_block0.l(div6_nodes);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div6_nodes);
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div6_nodes, "DIV", { class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);
			img = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "IMG", { class: true, src: true, alt: true });
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "DIV", { class: true });
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div0_nodes, /*heading*/ ctx[1]);
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);
			if (if_block1) if_block1.l(div2_nodes);
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			span = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "SPAN", { class: true });
			var span_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span);
			if_block2.l(span_nodes);
			span_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			if (if_block3) if_block3.l(div1_nodes);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div6_nodes);
			div5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div6_nodes, "DIV", { class: true });
			var div5_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div5);
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div5_nodes, "DIV", { class: true });
			var div3_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div3);
			if (if_block4) if_block4.l(div3_nodes);
			t7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div3_nodes);
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "UL", { class: true });
			var ul_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div3_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t8 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div5_nodes);
			div4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div5_nodes, "DIV", { class: true });
			var div4_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(link.$$.fragment, div4_nodes);
			div4_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div5_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div6_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div7_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "class", "c-pricing-block__image");
			if (img.src !== (img_src_value = /*image_path*/ ctx[3])) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "src", img_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "alt", "");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "cc-helper__h4 c-pricing-block__heading");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span, "class", "cc-helper__h2 c-pricing-block__price-main");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "c-pricing-block__block-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "c-pricing-block__header-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "class", "c-pricing-block__list");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div3, "class", "c-pricing-block__optional-description");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div4, "class", "c-pricing-block__button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div5, "class", "c-pricing-block__info-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div6, "class", "c-pricing-block__container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div6, "is-featured", /*featured*/ ctx[0]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div7, "class", "c-pricing-block");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div7, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div7, div6);
			if (if_block0) if_block0.m(div6, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div6, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div6, div2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, img);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t3);
			if (if_block1) if_block1.m(div2, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, div1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, span);
			if_block2.m(span, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t5);
			if (if_block3) if_block3.m(div1, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div6, t6);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div6, div5);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div5, div3);
			if (if_block4) if_block4.m(div3, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, t7);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div5, t8);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div5, div4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(link, div4, null);
			current = true;
		},
		p(ctx, [dirty]) {
			if (/*featured*/ ctx[0]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_4(ctx);
					if_block0.c();
					if_block0.m(div6, t0);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (!current || dirty & /*image_path*/ 8 && img.src !== (img_src_value = /*image_path*/ ctx[3])) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "src", img_src_value);
			}

			if (!current || dirty & /*heading*/ 2) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t2, /*heading*/ ctx[1]);

			if (/*subheading*/ ctx[2]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_3(ctx);
					if_block1.c();
					if_block1.m(div2, t4);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block2) {
				if_block2.p(ctx, dirty);
			} else {
				if_block2.d(1);
				if_block2 = current_block_type(ctx);

				if (if_block2) {
					if_block2.c();
					if_block2.m(span, null);
				}
			}

			if (/*price_secondary_text*/ ctx[6]) {
				if (if_block3) {
					if_block3.p(ctx, dirty);
				} else {
					if_block3 = create_if_block_1(ctx);
					if_block3.c();
					if_block3.m(div1, null);
				}
			} else if (if_block3) {
				if_block3.d(1);
				if_block3 = null;
			}

			if (/*description*/ ctx[7]) {
				if (if_block4) {
					if_block4.p(ctx, dirty);
				} else {
					if_block4 = create_if_block(ctx);
					if_block4.c();
					if_block4.m(div3, t7);
				}
			} else if (if_block4) {
				if_block4.d(1);
				if_block4 = null;
			}

			if (dirty & /*list*/ 256) {
				each_value = /*list*/ ctx[8];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			const link_changes = {};
			if (dirty & /*link_url*/ 1024) link_changes.url = /*link_url*/ ctx[10];
			if (dirty & /*link_content*/ 2048) link_changes.content = /*link_content*/ ctx[11];
			if (dirty & /*open_in_new_tab*/ 4096) link_changes.open_in_new_tab = /*open_in_new_tab*/ ctx[12];
			link.$set(link_changes);

			if (dirty & /*featured*/ 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div6, "is-featured", /*featured*/ ctx[0]);
			}
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(link.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(link.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div7);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if_block2.d();
			if (if_block3) if_block3.d();
			if (if_block4) if_block4.d();
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(link);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { featured } = $$props;
	let { heading } = $$props;
	let { subheading } = $$props;
	let { image_path } = $$props;
	let { price_monthly } = $$props;
	let { price_annually } = $$props;
	let { price_secondary_text } = $$props;
	let { description } = $$props;
	let { list } = $$props;
	let { featured_tag_text } = $$props;
	let { link_url } = $$props;
	let { link_content } = $$props;
	let { open_in_new_tab } = $$props;
	let { store } = $$props;
	let toggleChecked;
	let unsubscribe;

	if (store) {
		unsubscribe = store.subscribe(value => {
			if (typeof value == "boolean") {
				$$invalidate(13, toggleChecked = value);
			}
		});
	}

	Object(svelte__WEBPACK_IMPORTED_MODULE_1__["onDestroy"])(unsubscribe);

	$$self.$$set = $$props => {
		if ("featured" in $$props) $$invalidate(0, featured = $$props.featured);
		if ("heading" in $$props) $$invalidate(1, heading = $$props.heading);
		if ("subheading" in $$props) $$invalidate(2, subheading = $$props.subheading);
		if ("image_path" in $$props) $$invalidate(3, image_path = $$props.image_path);
		if ("price_monthly" in $$props) $$invalidate(4, price_monthly = $$props.price_monthly);
		if ("price_annually" in $$props) $$invalidate(5, price_annually = $$props.price_annually);
		if ("price_secondary_text" in $$props) $$invalidate(6, price_secondary_text = $$props.price_secondary_text);
		if ("description" in $$props) $$invalidate(7, description = $$props.description);
		if ("list" in $$props) $$invalidate(8, list = $$props.list);
		if ("featured_tag_text" in $$props) $$invalidate(9, featured_tag_text = $$props.featured_tag_text);
		if ("link_url" in $$props) $$invalidate(10, link_url = $$props.link_url);
		if ("link_content" in $$props) $$invalidate(11, link_content = $$props.link_content);
		if ("open_in_new_tab" in $$props) $$invalidate(12, open_in_new_tab = $$props.open_in_new_tab);
		if ("store" in $$props) $$invalidate(14, store = $$props.store);
	};

	return [
		featured,
		heading,
		subheading,
		image_path,
		price_monthly,
		price_annually,
		price_secondary_text,
		description,
		list,
		featured_tag_text,
		link_url,
		link_content,
		open_in_new_tab,
		toggleChecked,
		store
	];
}

class Block extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			featured: 0,
			heading: 1,
			subheading: 2,
			image_path: 3,
			price_monthly: 4,
			price_annually: 5,
			price_secondary_text: 6,
			description: 7,
			list: 8,
			featured_tag_text: 9,
			link_url: 10,
			link_content: 11,
			open_in_new_tab: 12,
			store: 14
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Block);

/***/ }),

/***/ "./_bookshop/components/toggle/toggle.svelte":
/*!***************************************************!*\
  !*** ./_bookshop/components/toggle/toggle.svelte ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* _bookshop/components/toggle/toggle.svelte generated by Svelte v3.29.0 */




function create_if_block_1(ctx) {
	let div;
	let t;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*left_subtext*/ ctx[1]);
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div_nodes, /*left_subtext*/ ctx[1]);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-toggle__sub-text");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t);
		},
		p(ctx, dirty) {
			if (dirty & /*left_subtext*/ 2) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*left_subtext*/ ctx[1]);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

// (58:8) {#if right_subtext}
function create_if_block(ctx) {
	let div;
	let t;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*right_subtext*/ ctx[4]);
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div_nodes, /*right_subtext*/ ctx[4]);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "c-toggle__sub-text");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t);
		},
		p(ctx, dirty) {
			if (dirty & /*right_subtext*/ 16) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, /*right_subtext*/ ctx[4]);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

function create_fragment(ctx) {
	let div3;
	let div0;
	let t0;
	let t1;
	let t2;
	let label_1;
	let div1;
	let t3;
	let t4;
	let input;
	let t5;
	let span1;
	let span0;
	let t6;
	let div2;
	let t7;
	let t8;
	let if_block0 = /*left_subtext*/ ctx[1] && create_if_block_1(ctx);
	let if_block1 = /*right_subtext*/ ctx[4] && create_if_block(ctx);

	return {
		c() {
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*left_text*/ ctx[0]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block0) if_block0.c();
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			label_1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("label");
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*label*/ ctx[2]);
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			input = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("input");
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			span1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			span0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*right_text*/ ctx[3]);
			t8 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block1) if_block1.c();
			this.h();
		},
		l(nodes) {
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div3_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div3);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "DIV", { class: true });
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div0_nodes, /*left_text*/ ctx[0]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div0_nodes);
			if (if_block0) if_block0.l(div0_nodes);
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div3_nodes);
			label_1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "LABEL", { class: true });
			var label_1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(label_1);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(label_1_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div1_nodes, /*label*/ ctx[2]);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(label_1_nodes);
			input = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(label_1_nodes, "INPUT", { id: true, class: true, type: true });
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(label_1_nodes);
			span1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(label_1_nodes, "SPAN", { class: true });
			var span1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span1);
			span0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(span1_nodes, "SPAN", { class: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span0).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			span1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			label_1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div3_nodes);
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "DIV", { class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);
			t7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div2_nodes, /*right_text*/ ctx[3]);
			t8 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);
			if (if_block1) if_block1.l(div2_nodes);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div3_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "c-toggle__labels c-toggle__labels--left");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "cc-helper-hidden");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "id", /*id*/ ctx[5]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "class", "cc-helper-hidden");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "type", "checkbox");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span0, "class", "c-toggle__slider-active");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span1, "class", "c-toggle__slider");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(label_1, "class", "c-toggle__switch");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "c-toggle__labels");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div3, "class", "c-toggle");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div3, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t1);
			if (if_block0) if_block0.m(div0, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, label_1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(label_1, div1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(label_1, t4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(label_1, input);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(label_1, t5);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(label_1, span1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(span1, span0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, t6);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, div2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t7);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t8);
			if (if_block1) if_block1.m(div2, null);
		},
		p(ctx, [dirty]) {
			if (dirty & /*left_text*/ 1) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, /*left_text*/ ctx[0]);

			if (/*left_subtext*/ ctx[1]) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					if_block0.m(div0, null);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (dirty & /*label*/ 4) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t3, /*label*/ ctx[2]);

			if (dirty & /*id*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(input, "id", /*id*/ ctx[5]);
			}

			if (dirty & /*right_text*/ 8) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t7, /*right_text*/ ctx[3]);

			if (/*right_subtext*/ ctx[4]) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					if_block1.m(div2, null);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div3);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { left_text } = $$props;
	let { left_subtext } = $$props;
	let { label } = $$props;
	let { right_text } = $$props;
	let { right_subtext } = $$props;
	let { id } = $$props;
	let { store } = $$props;
	let toggleChecked;
	let unsubscribe;

	if (store) {
		unsubscribe = store.subscribe(value => {
			toggleChecked = value;
			let toggle = document.getElementById(id);

			if (toggle && typeof value == "boolean") {
				toggle.checked = toggleChecked;
			}
		});
	}

	Object(svelte__WEBPACK_IMPORTED_MODULE_1__["onMount"])(() => {
		if (id) {
			document.getElementById(id).addEventListener("click", e => {
				if (!!store) {
					store.update(_ => e.target.checked);
				}
			});
		}
	});

	Object(svelte__WEBPACK_IMPORTED_MODULE_1__["onDestroy"])(unsubscribe);

	$$self.$$set = $$props => {
		if ("left_text" in $$props) $$invalidate(0, left_text = $$props.left_text);
		if ("left_subtext" in $$props) $$invalidate(1, left_subtext = $$props.left_subtext);
		if ("label" in $$props) $$invalidate(2, label = $$props.label);
		if ("right_text" in $$props) $$invalidate(3, right_text = $$props.right_text);
		if ("right_subtext" in $$props) $$invalidate(4, right_subtext = $$props.right_subtext);
		if ("id" in $$props) $$invalidate(5, id = $$props.id);
		if ("store" in $$props) $$invalidate(6, store = $$props.store);
	};

	return [left_text, left_subtext, label, right_text, right_subtext, id, store];
}

class Toggle extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			left_text: 0,
			left_subtext: 1,
			label: 2,
			right_text: 3,
			right_subtext: 4,
			id: 5,
			store: 6
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Toggle);

/***/ }),

/***/ "./_scripts/includes/archive-filter/archive-filter.svelte":
/*!****************************************************************!*\
  !*** ./_scripts/includes/archive-filter/archive-filter.svelte ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* _scripts/includes/archive-filter/archive-filter.svelte generated by Svelte v3.29.0 */


function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[5] = list[i];
	return child_ctx;
}

// (37:24) {:else}
function create_else_block(ctx) {
	let t_value = /*title*/ ctx[1].split(" ")[0] + "";
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, t_value);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*title*/ 2 && t_value !== (t_value = /*title*/ ctx[1].split(" ")[0] + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (35:24) {#if title == 'Archived'}
function create_if_block(ctx) {
	let t;

	return {
		c() {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Category");
		},
		l(nodes) {
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(nodes, "Category");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
		},
		p: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
		}
	};
}

// (49:20) {#each site_categories as categories}
function create_each_block(ctx) {
	let li;
	let a;
	let t0_value = /*categories*/ ctx[5] + "";
	let t0;
	let a_href_value;
	let t1;

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LI", { class: true });
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li_nodes, "A", { class: true, href: true });
			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a_nodes, t0_value);
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "t-archive-filter__link-items");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value = "" + (/*baseurl*/ ctx[2] + "/archived/" + /*categories*/ ctx[5].toLowerCase() + "/"));
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(a, "t-archive-filter__link-item-selected", /*title*/ ctx[1].split(" ")[0] === /*categories*/ ctx[5]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "t-archive-filter__list-items");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, a);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t1);
		},
		p(ctx, dirty) {
			if (dirty & /*site_categories*/ 1 && t0_value !== (t0_value = /*categories*/ ctx[5] + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (dirty & /*baseurl, site_categories*/ 5 && a_href_value !== (a_href_value = "" + (/*baseurl*/ ctx[2] + "/archived/" + /*categories*/ ctx[5].toLowerCase() + "/"))) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value);
			}

			if (dirty & /*title, site_categories*/ 3) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(a, "t-archive-filter__link-item-selected", /*title*/ ctx[1].split(" ")[0] === /*categories*/ ctx[5]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
		}
	};
}

function create_fragment(ctx) {
	let div3;
	let div0;
	let t0;
	let t1;
	let nav;
	let ul1;
	let li1;
	let button;
	let div1;
	let t2;
	let div2;
	let t3;
	let ul0;
	let li0;
	let a;
	let t4;
	let a_href_value;
	let t5;

	function select_block_type(ctx, dirty) {
		if (/*title*/ ctx[1] == "Archived") return create_if_block;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block = current_block_type(ctx);
	let each_value = /*site_categories*/ ctx[0];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Filter by:");
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			nav = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("nav");
			ul1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("ul");
			li1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if_block.c();
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			ul0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("ul");
			li0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("All");
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div3_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div3);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "DIV", { class: true });
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div0_nodes, "Filter by:");
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div3_nodes);
			nav = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "NAV", { class: true, id: true, role: true });
			var nav_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(nav);
			ul1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nav_nodes, "UL", { class: true });
			var ul1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(ul1);
			li1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(ul1_nodes, "LI", { class: true });
			var li1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li1);
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li1_nodes, "BUTTON", { class: true });
			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(button_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			if_block.l(div1_nodes);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(button_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li1_nodes);
			ul0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li1_nodes, "UL", { class: true });
			var ul0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(ul0);
			li0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(ul0_nodes, "LI", { class: true });
			var li0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li0);
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li0_nodes, "A", { href: true, class: true });
			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a_nodes, "All");
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			li0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(ul0_nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul0_nodes);
			}

			ul0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			li1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			ul1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			nav_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div3_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", " t-archive-filter__filter-by cc-helper__h5");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "t-archive-filter__heading-button-heading");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "t-archive-filter__icon");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div2, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/chevron-down.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div2, "mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/chevron-down.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "t-archive-filter__icon--open", /*isOpen*/ ctx[3]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "t-archive-filter__heading-button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value = "" + (/*baseurl*/ ctx[2] + "/archived/"));
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "t-archive-filter__heading-link t-archive-filter__link-items");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li0, "class", "t-archive-filter__list-items");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul0, "class", "t-archive-filter__dropdown");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(ul0, "t-archive-filter__dropdown--open", /*isOpen*/ ctx[3]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li1, "class", "t-archive-filter__list-items t-archive-filter__list-items--first");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul1, "class", "t-archive-filter__ul");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(nav, "class", "t-archive-filter__nav");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(nav, "id", "nav");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(nav, "role", "navigation");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div3, "class", "t-archive-filter");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div3, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, nav);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(nav, ul1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(ul1, li1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li1, button);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, div1);
			if_block.m(div1, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, div2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li1, t3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li1, ul0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(ul0, li0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li0, a);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(ul0, t5);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul0, null);
			}
		},
		p(ctx, [dirty]) {
			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(div1, null);
				}
			}

			if (dirty & /*baseurl*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div2, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/chevron-down.svg')");
			}

			if (dirty & /*baseurl*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div2, "mask-image", "url('" + /*baseurl*/ ctx[2] + "/assets/chevron-down.svg')");
			}

			if (dirty & /*isOpen*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "t-archive-filter__icon--open", /*isOpen*/ ctx[3]);
			}

			if (dirty & /*baseurl*/ 4 && a_href_value !== (a_href_value = "" + (/*baseurl*/ ctx[2] + "/archived/"))) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value);
			}

			if (dirty & /*baseurl, site_categories, title*/ 7) {
				each_value = /*site_categories*/ ctx[0];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul0, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (dirty & /*isOpen*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(ul0, "t-archive-filter__dropdown--open", /*isOpen*/ ctx[3]);
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div3);
			if_block.d();
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { site_categories } = $$props;
	let { title } = $$props;
	let { baseurl } = $$props;
	let isOpen = false;

	function clickOnArchivePage(e) {
		const navBody = document.getElementById("nav");

		if (navBody.contains(e.target)) {
			$$invalidate(3, isOpen = !isOpen);
			return;
		}

		if (isOpen) {
			$$invalidate(3, isOpen = !isOpen);
			return;
		}
	}

	addEventListener("click", clickOnArchivePage);

	$$self.$$set = $$props => {
		if ("site_categories" in $$props) $$invalidate(0, site_categories = $$props.site_categories);
		if ("title" in $$props) $$invalidate(1, title = $$props.title);
		if ("baseurl" in $$props) $$invalidate(2, baseurl = $$props.baseurl);
	};

	return [site_categories, title, baseurl, isOpen];
}

class Archive_filter extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();
		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], { site_categories: 0, title: 1, baseurl: 2 });
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Archive_filter);

/***/ }),

/***/ "./_scripts/includes/docs-nav/docs-nav.svelte":
/*!****************************************************!*\
  !*** ./_scripts/includes/docs-nav/docs-nav.svelte ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _nav_nav_desktop_dropdown_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../nav/nav-desktop-dropdown.svelte */ "./_scripts/includes/nav/nav-desktop-dropdown.svelte");
/* _scripts/includes/docs-nav/docs-nav.svelte generated by Svelte v3.29.0 */





function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[14] = list[i];
	return child_ctx;
}

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[11] = list[i];
	return child_ctx;
}

// (99:20) {#if group.name !== "Root"}
function create_if_block(ctx) {
	let a;
	let t_value = /*group*/ ctx[11].name + "";
	let t;
	let a_href_value;

	return {
		c() {
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
			this.h();
		},
		l(nodes) {
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "A", { class: true, href: true });
			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a_nodes, t_value);
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "t-docs-nav__link");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value = "" + (/*baseurl*/ ctx[2] + /*group*/ ctx[11].url));
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(a, "current", /*group*/ ctx[11].name == /*page_category*/ ctx[3]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, a, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t);
		},
		p(ctx, dirty) {
			if (dirty & /*orderedGroup*/ 32 && t_value !== (t_value = /*group*/ ctx[11].name + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);

			if (dirty & /*baseurl, orderedGroup*/ 36 && a_href_value !== (a_href_value = "" + (/*baseurl*/ ctx[2] + /*group*/ ctx[11].url))) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value);
			}

			if (dirty & /*orderedGroup, page_category*/ 40) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(a, "current", /*group*/ ctx[11].name == /*page_category*/ ctx[3]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(a);
		}
	};
}

// (105:24) {#each group.items as item}
function create_each_block_1(ctx) {
	let li;
	let a;
	let t0_value = /*item*/ ctx[14].name + "";
	let t0;
	let a_href_value;
	let t1;

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LI", {});
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li_nodes, "A", { class: true, href: true });
			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a_nodes, t0_value);
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "t-docs-nav__link");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value = "" + (/*baseurl*/ ctx[2] + /*item*/ ctx[14].url));
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(li, "current-sub", /*item*/ ctx[14].url === /*page_url*/ ctx[1]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, a);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t1);
		},
		p(ctx, dirty) {
			if (dirty & /*orderedGroup*/ 32 && t0_value !== (t0_value = /*item*/ ctx[14].name + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (dirty & /*baseurl, orderedGroup*/ 36 && a_href_value !== (a_href_value = "" + (/*baseurl*/ ctx[2] + /*item*/ ctx[14].url))) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value);
			}

			if (dirty & /*orderedGroup, page_url*/ 34) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(li, "current-sub", /*item*/ ctx[14].url === /*page_url*/ ctx[1]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
		}
	};
}

// (97:12) {#each orderedGroup as group}
function create_each_block(ctx) {
	let li;
	let t0;
	let ul;
	let t1;
	let if_block = /*group*/ ctx[11].name !== "Root" && create_if_block(ctx);
	let each_value_1 = /*group*/ ctx[11].items;
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			if (if_block) if_block.c();
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LI", { class: true });
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);
			if (if_block) if_block.l(li_nodes);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li_nodes, "UL", { class: true });
			var ul_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "class", "t-docs-nav__sub-link");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "t-docs-nav__li");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);
			if (if_block) if_block.m(li, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t1);
		},
		p(ctx, dirty) {
			if (/*group*/ ctx[11].name !== "Root") {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					if_block.m(li, t0);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}

			if (dirty & /*orderedGroup, page_url, baseurl*/ 38) {
				each_value_1 = /*group*/ ctx[11].items;
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value_1.length;
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
			if (if_block) if_block.d();
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
		}
	};
}

function create_fragment(ctx) {
	let nav;
	let div2;
	let button;
	let t0;
	let t1;
	let div1;
	let div0;
	let t2;
	let t3;
	let img0;
	let img0_src_value;
	let t4;
	let img1;
	let img1_src_value;
	let t5;
	let div3;
	let t6;
	let t7;
	let div4;
	let ul;
	let mounted;
	let dispose;
	let each_value = /*orderedGroup*/ ctx[5];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			nav = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("nav");
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*collection_title*/ ctx[0]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Select Page");
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			img0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			img1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*collection_title*/ ctx[0]);
			t7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			nav = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "NAV", { id: true });
			var nav_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(nav);
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nav_nodes, "DIV", { class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "BUTTON", { class: true });
			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(button_nodes, /*collection_title*/ ctx[0]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(button_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "DIV", { class: true });
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div0_nodes, "Select Page");
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			img0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "IMG", { class: true, src: true, alt: true });
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			img1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "IMG", { class: true, src: true, alt: true });
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nav_nodes);
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nav_nodes, "DIV", { class: true });
			var div3_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div3);
			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div3_nodes, /*collection_title*/ ctx[0]);
			div3_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nav_nodes);
			div4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nav_nodes, "DIV", { class: true });
			var div4_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div4);
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div4_nodes, "UL", { class: true });
			var ul_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div4_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			nav_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "t-docs-nav__button-select-page-text");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "class", "t-docs-nav__icon");
			if (img0.src !== (img0_src_value = "/assets/unfold_more.svg")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "src", img0_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "alt", "open menu");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(img0, "t-docs-nav--icon-is-open", !/*isOpen*/ ctx[4]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "class", "t-docs-nav__icon");
			if (img1.src !== (img1_src_value = "/assets/unfold_less.svg")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "src", img1_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "alt", "close menu");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(img1, "t-docs-nav--icon-is-open", /*isOpen*/ ctx[4]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "t-docs-nav__button-select-page-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "cc-helper__h4 t-docs-nav__mobile-button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "t-docs-nav__mobile");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div3, "class", "cc-helper__h4 t-docs-nav__desktop");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "class", "t-docs-nav__collapsible t-docs-nav__list");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div4, "class", "t-docs-nav__collapsible-wrapper");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div4, "t-docs-nav__list--is-closed", !/*isOpen*/ ctx[4]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(nav, "id", "documentationNav t-docs-nav");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, nav, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(nav, div2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, button);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, div1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, img0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, img1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(nav, t5);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(nav, div3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, t6);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(nav, t7);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(nav, div4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div4, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(button, "click", /*clickMenuButton*/ ctx[6]);
				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*collection_title*/ 1) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, /*collection_title*/ ctx[0]);

			if (dirty & /*isOpen*/ 16) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(img0, "t-docs-nav--icon-is-open", !/*isOpen*/ ctx[4]);
			}

			if (dirty & /*isOpen*/ 16) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(img1, "t-docs-nav--icon-is-open", /*isOpen*/ ctx[4]);
			}

			if (dirty & /*collection_title*/ 1) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t6, /*collection_title*/ ctx[0]);

			if (dirty & /*orderedGroup, page_url, baseurl, page_category*/ 46) {
				each_value = /*orderedGroup*/ ctx[5];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (dirty & /*isOpen*/ 16) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div4, "t-docs-nav__list--is-closed", !/*isOpen*/ ctx[4]);
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(nav);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
			mounted = false;
			dispose();
		}
	};
}

function formatGroupData(group, dictionary) {
	return group.map(item => {
		let title = item.name.toLowerCase();

		if (dictionary[title]) {
			item.name = dictionary[title].replace;
		}

		item.items.sort((a, b) => a.order - b.order);
		return item;
	});
}

function instance($$self, $$props, $$invalidate) {
	let { collection_title } = $$props;
	let { grouped } = $$props;
	let { page_url } = $$props;
	let { baseurl } = $$props;
	let { page_category } = $$props;
	let { dictionary } = $$props;
	const query = window.matchMedia("screen and (min-width: 769px)");
	let isOpen = false;
	let orderedGroup = grouped;

	function clickMenuButton() {
		$$invalidate(4, isOpen = !isOpen);
	}

	function updateScrollLockFromMediaQuery(query) {
		$$invalidate(4, isOpen = query.matches ? true : false);
	}

	document.addEventListener("keydown", e => {
		const documentationNav = document.getElementById("documentationNav");
		const KEYCODE_TAB = 9;
		const isTabPressed = e.key === "Tab" || e.keyCode === KEYCODE_TAB;

		if (!documentationNav) {
			return;
		}

		if (_nav_nav_desktop_dropdown_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]) {
			const focusableEls = documentationNav.querySelectorAll("a[href]:not([disabled]), button:not([disabled])");
			const firstFocusableEl = focusableEls[0];
			const lastFocusableEl = focusableEls[focusableEls.length - 1];

			if (!isTabPressed && !e.shiftKey) {
				return;
			}

			if (!e.shiftKey && document.activeElement === lastFocusableEl) {
				$$invalidate(4, isOpen = false);
				return;
			}

			if (e.shiftKey && e.keyCode == 9 && document.activeElement === firstFocusableEl) {
				$$invalidate(4, isOpen = false);
				return;
			}
		}
	});

	Object(svelte__WEBPACK_IMPORTED_MODULE_1__["onMount"])(() => {
		updateScrollLockFromMediaQuery(query);

		if (query) {
			// Need to use 'addListener' instead of 'addEventListener' due to safari backwards compatibility
			query.addListener(updateScrollLockFromMediaQuery);
		}

		$$invalidate(5, orderedGroup = formatGroupData(grouped, dictionary));
	});

	$$self.$$set = $$props => {
		if ("collection_title" in $$props) $$invalidate(0, collection_title = $$props.collection_title);
		if ("grouped" in $$props) $$invalidate(7, grouped = $$props.grouped);
		if ("page_url" in $$props) $$invalidate(1, page_url = $$props.page_url);
		if ("baseurl" in $$props) $$invalidate(2, baseurl = $$props.baseurl);
		if ("page_category" in $$props) $$invalidate(3, page_category = $$props.page_category);
		if ("dictionary" in $$props) $$invalidate(8, dictionary = $$props.dictionary);
	};

	return [
		collection_title,
		page_url,
		baseurl,
		page_category,
		isOpen,
		orderedGroup,
		clickMenuButton,
		grouped,
		dictionary
	];
}

class Docs_nav extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			collection_title: 0,
			grouped: 7,
			page_url: 1,
			baseurl: 2,
			page_category: 3,
			dictionary: 8
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Docs_nav);

/***/ }),

/***/ "./_scripts/includes/helpers/store.js":
/*!********************************************!*\
  !*** ./_scripts/includes/helpers/store.js ***!
  \********************************************/
/*! exports provided: pricing */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pricing", function() { return pricing; });
/* harmony import */ var svelte_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/store */ "./node_modules/svelte/store/index.mjs");


const pricing = Object(svelte_store__WEBPACK_IMPORTED_MODULE_0__["writable"])({
    toggle_checked: true
});


/***/ }),

/***/ "./_scripts/includes/helpers/tabtrap.js":
/*!**********************************************!*\
  !*** ./_scripts/includes/helpers/tabtrap.js ***!
  \**********************************************/
/*! exports provided: trapFocus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "trapFocus", function() { return trapFocus; });
function trapFocus(element) {
    const focusableEls = element.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type="text"]:not([disabled]), input[type="radio"]:not([disabled]), input[type="checkbox"]:not([disabled]), select:not([disabled])');
    const firstFocusableEl = focusableEls[0];  
    const lastFocusableEl = focusableEls[focusableEls.length - 1];
    const KEYCODE_TAB = 9;

    element.addEventListener('keydown', e => {
        const isTabPressed = (e.key === 'Tab' || e.keyCode === KEYCODE_TAB);

        if (!isTabPressed) { 
            return; 
        }
        if (e.shiftKey && (document.activeElement === firstFocusableEl)) /* shift + tab */ {
            lastFocusableEl.focus();
            e.preventDefault();
        } else if (document.activeElement === lastFocusableEl)/* tab */ {
            firstFocusableEl.focus();
            e.preventDefault();
        }
    });
}


/***/ }),

/***/ "./_scripts/includes/homepage-hero/homepage-hero.svelte":
/*!**************************************************************!*\
  !*** ./_scripts/includes/homepage-hero/homepage-hero.svelte ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_bookshop/components/link/link.svelte */ "./_bookshop/components/link/link.svelte");
/* harmony import */ var _bookshop_components_button_button_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../_bookshop/components/button/button.svelte */ "./_bookshop/components/button/button.svelte");
/* _scripts/includes/homepage-hero/homepage-hero.svelte generated by Svelte v3.29.0 */






function create_fragment(ctx) {
	let div19;
	let div15;
	let div1;
	let div0;
	let button;
	let t0;
	let h1;
	let t1_value = /*hero*/ ctx[0].heading + "";
	let t1;
	let t2;
	let p;
	let t3_value = /*hero*/ ctx[0].text + "";
	let t3;
	let t4;
	let span0;
	let link_1;
	let t5;
	let div14;
	let div13;
	let div5;
	let div2;
	let t6;
	let div3;
	let t7;
	let div4;
	let t8;
	let div6;
	let t9;
	let div12;
	let div7;
	let t10;
	let t11;
	let span1;
	let t12;
	let t13;
	let span2;
	let t14;
	let span3;
	let t15;
	let span4;
	let t16;
	let t17;
	let div8;
	let t18;
	let t19;
	let span5;
	let t20;
	let t21;
	let div10;
	let span6;
	let t22;
	let t23;
	let div9;
	let t24_value = /*hero*/ ctx[0].text + "";
	let t24;
	let t25;
	let span7;
	let t26;
	let t27;
	let div11;
	let t28;
	let t29;
	let img0;
	let img0_src_value;
	let t30;
	let img1;
	let img1_src_value;
	let t31;
	let img2;
	let img2_src_value;
	let t32;
	let div18;
	let img3;
	let img3_src_value;
	let t33;
	let img4;
	let img4_src_value;
	let t34;
	let img5;
	let img5_src_value;
	let t35;
	let div16;
	let t36;
	let div17;
	let current;

	button = new _bookshop_components_button_button_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				onclick: /*reset*/ ctx[4],
				right_icon: "true",
				content: "Reset",
				icon_path: "/assets/icons/reset.svg",
				icon_size_height_number: "14px",
				icon_size_width_number: "12px"
			}
		});

	link_1 = new _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				content: /*link*/ ctx[3].link_content,
				url: /*link*/ ctx[3].link_url,
				style: "light"
			}
		});

	return {
		c() {
			div19 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div15 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(button.$$.fragment);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			h1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("h1");
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t1_value);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("p");
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t3_value);
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			span0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(link_1.$$.fragment);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div14 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div13 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t8 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t9 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div12 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t10 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("...");
			t11 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			span1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			t12 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("<h1");
			t13 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			span2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			t14 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("class=");
			span3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			t15 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("\"editable\"");
			span4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			t16 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(">");
			t17 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div8 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t18 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*HTMLCode*/ ctx[1]);
			t19 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			span5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			t20 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("<h1>");
			t21 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div10 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			span6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			t22 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("<p>");
			t23 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div9 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t24 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t24_value);
			t25 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			span7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			t26 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("<p>");
			t27 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div11 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t28 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("...");
			t29 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			img0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t30 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			img1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t31 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			img2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t32 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div18 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			img3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t33 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			img4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t34 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			img5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t35 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div16 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t36 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div17 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			this.h();
		},
		l(nodes) {
			div19 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { id: true, class: true });
			var div19_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div19);
			div15 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div19_nodes, "DIV", { class: true });
			var div15_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div15);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div15_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "DIV", { class: true });
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(button.$$.fragment, div0_nodes);
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);

			h1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "H1", {
				contenteditable: true,
				maxlength: true,
				spellcheck: true,
				id: true,
				class: true
			});

			var h1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(h1);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(h1_nodes, t1_value);
			h1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "P", { class: true });
			var p_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(p);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(p_nodes, t3_value);
			p_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			span0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "SPAN", { class: true });
			var span0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(link_1.$$.fragment, span0_nodes);
			span0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div15_nodes);
			div14 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div15_nodes, "DIV", { class: true });
			var div14_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div14);
			div13 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div14_nodes, "DIV", { class: true });
			var div13_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div13);
			div5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div13_nodes, "DIV", { class: true });
			var div5_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div5);
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div5_nodes, "DIV", { class: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div5_nodes);
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div5_nodes, "DIV", { class: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div3).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div5_nodes);
			div4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div5_nodes, "DIV", { class: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div4).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div5_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t8 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div13_nodes);
			div6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div13_nodes, "DIV", { class: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div6).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t9 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div13_nodes);
			div12 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div13_nodes, "DIV", { class: true });
			var div12_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div12);
			div7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div12_nodes, "DIV", {});
			var div7_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div7);
			t10 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div7_nodes, "...");
			div7_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t11 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div12_nodes);
			span1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div12_nodes, "SPAN", { class: true });
			var span1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span1);
			t12 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(span1_nodes, "<h1");
			span1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t13 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div12_nodes);
			span2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div12_nodes, "SPAN", { class: true });
			var span2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span2);
			t14 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(span2_nodes, "class=");
			span2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			span3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div12_nodes, "SPAN", { class: true });
			var span3_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span3);
			t15 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(span3_nodes, "\"editable\"");
			span3_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			span4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div12_nodes, "SPAN", { class: true });
			var span4_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span4);
			t16 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(span4_nodes, ">");
			span4_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t17 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div12_nodes);
			div8 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div12_nodes, "DIV", { class: true });
			var div8_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div8);
			t18 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div8_nodes, /*HTMLCode*/ ctx[1]);
			div8_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t19 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div12_nodes);
			span5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div12_nodes, "SPAN", { class: true });
			var span5_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span5);
			t20 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(span5_nodes, "<h1>");
			span5_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t21 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div12_nodes);
			div10 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div12_nodes, "DIV", {});
			var div10_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div10);
			span6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div10_nodes, "SPAN", { class: true });
			var span6_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span6);
			t22 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(span6_nodes, "<p>");
			span6_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t23 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div10_nodes);
			div9 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div10_nodes, "DIV", { class: true });
			var div9_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div9);
			t24 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div9_nodes, t24_value);
			div9_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t25 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div10_nodes);
			span7 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div10_nodes, "SPAN", { class: true });
			var span7_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span7);
			t26 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(span7_nodes, "<p>");
			span7_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div10_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t27 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div12_nodes);
			div11 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div12_nodes, "DIV", {});
			var div11_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div11);
			t28 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div11_nodes, "...");
			div11_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div12_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div13_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t29 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div14_nodes);
			img0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div14_nodes, "IMG", { class: true, src: true, alt: true });
			t30 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div14_nodes);
			img1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div14_nodes, "IMG", { class: true, src: true, alt: true });
			t31 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div14_nodes);
			img2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div14_nodes, "IMG", { class: true, src: true, alt: true });
			div14_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div15_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t32 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div19_nodes);
			div18 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div19_nodes, "DIV", { class: true });
			var div18_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div18);
			img3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div18_nodes, "IMG", { class: true, src: true, alt: true });
			t33 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div18_nodes);
			img4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div18_nodes, "IMG", { class: true, src: true, alt: true });
			t34 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div18_nodes);
			img5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div18_nodes, "IMG", { class: true, src: true, alt: true });
			t35 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div18_nodes);
			div16 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div18_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div16).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t36 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div18_nodes);
			div17 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div18_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div17).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div18_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div19_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "t-homepage-hero__reset-button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(h1, "contenteditable", "");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(h1, "maxlength", "50");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(h1, "spellcheck", "false");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(h1, "id", "content-heading");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(h1, "class", "t-homepage-hero__heading");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "class", "t-homepage-hero__content");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span0, "class", "t-homepage-hero__link");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "t-homepage-hero__heading-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "t-homepage-hero__circle t-homepage-hero__circle--red");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div3, "class", "t-homepage-hero__circle t-homepage-hero__circle--yellow");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div4, "class", "t-homepage-hero__circle t-homepage-hero__circle--green");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div5, "class", "t-homepage-hero__circle-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div6, "class", "t-homepage-hero__top");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span1, "class", "t-homepage-hero__html");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span2, "class", "t-homepage-hero__class");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span3, "class", "t-homepage-hero__class-name");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span4, "class", "t-homepage-hero__html");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div8, "class", "t-homepage-hero__html-code");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span5, "class", "t-homepage-hero__html");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span6, "class", "t-homepage-hero__html");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div9, "class", "t-homepage-hero__html-code");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span7, "class", "t-homepage-hero__html");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div12, "class", "t-homepage-hero__code-block-content");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div13, "class", "t-homepage-hero__code-block");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "class", "t-homepage-hero__face-image t-homepage-hero__face-image--person-2");
			if (img0.src !== (img0_src_value = "/uploads/homepage-hero/person-2.png")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "src", img0_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "alt", "Illustration of a face");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "class", "t-homepage-hero__face-image t-homepage-hero__face-image--person-1");
			if (img1.src !== (img1_src_value = "/uploads/homepage-hero/person-1.png")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "src", img1_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "alt", "Illustration of a face");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img2, "class", "t-homepage-hero__face-image t-homepage-hero__face-image--person-3");
			if (img2.src !== (img2_src_value = "/uploads/homepage-hero/person-3.png")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img2, "src", img2_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img2, "alt", "Illustration of a face");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div14, "class", "t-homepage-hero__code-block-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div15, "class", "t-homepage-hero__top-layer l-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img3, "class", "t-homepage-hero__cloud t-homepage-hero__cloud--cloud-1");
			if (img3.src !== (img3_src_value = "/uploads/homepage-hero/cloud-1.png")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img3, "src", img3_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img3, "alt", "Illustration of cloud");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img4, "class", "t-homepage-hero__cloud t-homepage-hero__cloud--cloud-2");
			if (img4.src !== (img4_src_value = "/uploads/homepage-hero/cloud-2.png")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img4, "src", img4_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img4, "alt", "Illustration of cloud");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img5, "class", "t-homepage-hero__cloud t-homepage-hero__cloud--cloud-3");
			if (img5.src !== (img5_src_value = "/uploads/homepage-hero/cloud-3.png")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img5, "src", img5_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img5, "alt", "Illustration of cloud");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div16, "class", "t-homepage-hero__image t-homepage-hero__image--front-hill");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div16, "height", /*homepageHeight*/ ctx[2] + "px");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div17, "class", "t-homepage-hero__image t-homepage-hero__image--back-hill");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div17, "height", /*homepageHeight*/ ctx[2] + "px");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div18, "class", "t-homepage-hero__bottom-layer");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div19, "id", "homepageHero");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div19, "class", "t-homepage-hero");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div19, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div19, div15);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div15, div1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(button, div0, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, h1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(h1, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, p);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(p, t3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, span0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(link_1, span0, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div15, t5);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div15, div14);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div14, div13);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div13, div5);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div5, div2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div5, t6);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div5, div3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div5, t7);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div5, div4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div13, t8);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div13, div6);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div13, t9);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div13, div12);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, div7);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div7, t10);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, t11);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, span1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(span1, t12);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, t13);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, span2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(span2, t14);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, span3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(span3, t15);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, span4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(span4, t16);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, t17);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, div8);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div8, t18);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, t19);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, span5);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(span5, t20);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, t21);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, div10);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div10, span6);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(span6, t22);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div10, t23);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div10, div9);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div9, t24);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div10, t25);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div10, span7);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(span7, t26);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, t27);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div12, div11);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div11, t28);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div14, t29);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div14, img0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div14, t30);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div14, img1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div14, t31);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div14, img2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div19, t32);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div19, div18);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div18, img3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div18, t33);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div18, img4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div18, t34);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div18, img5);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div18, t35);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div18, div16);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div18, t36);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div18, div17);
			current = true;
		},
		p(ctx, [dirty]) {
			if ((!current || dirty & /*hero*/ 1) && t1_value !== (t1_value = /*hero*/ ctx[0].heading + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t1, t1_value);
			if ((!current || dirty & /*hero*/ 1) && t3_value !== (t3_value = /*hero*/ ctx[0].text + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t3, t3_value);
			if (!current || dirty & /*HTMLCode*/ 2) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t18, /*HTMLCode*/ ctx[1]);
			if ((!current || dirty & /*hero*/ 1) && t24_value !== (t24_value = /*hero*/ ctx[0].text + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t24, t24_value);

			if (!current || dirty & /*homepageHeight*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div16, "height", /*homepageHeight*/ ctx[2] + "px");
			}

			if (!current || dirty & /*homepageHeight*/ 4) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div17, "height", /*homepageHeight*/ ctx[2] + "px");
			}
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(button.$$.fragment, local);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(link_1.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(button.$$.fragment, local);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(link_1.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div19);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(button);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(link_1);
		}
	};
}

function escapeHtml(html) {
	html += "";
	html = html.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;").replace(/`/g, "&#96;");
	return html;
}

function instance($$self, $$props, $$invalidate) {
	let { hero } = $$props;
	let link = hero.links[0];
	let HTMLCode;
	let homepageHeight;

	function reset() {
		document.getElementById("content-heading").innerText = hero.heading;
		$$invalidate(1, HTMLCode = hero.heading);
	}

	setTimeout(
		() => {
			const headingContainer = document.getElementById("homepageHero");
			$$invalidate(2, homepageHeight = headingContainer.offsetHeight);

			window.addEventListener("resize", e => {
				$$invalidate(2, homepageHeight = headingContainer.offsetHeight);
			});
		},
		10
	);

	Object(svelte__WEBPACK_IMPORTED_MODULE_1__["onMount"])(() => {
		$$invalidate(1, HTMLCode = document.getElementById("content-heading").innerText);

		document.getElementById("content-heading").addEventListener(
			"input",
			function (e) {
				$$invalidate(1, HTMLCode = escapeHtml(document.getElementById("content-heading").innerText));
			},
			false
		);

		document.getElementById("content-heading").addEventListener("paste", e => e.preventDefault());
	});

	$$self.$$set = $$props => {
		if ("hero" in $$props) $$invalidate(0, hero = $$props.hero);
	};

	return [hero, HTMLCode, homepageHeight, link, reset];
}

class Homepage_hero extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();
		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], { hero: 0 });
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Homepage_hero);

/***/ }),

/***/ "./_scripts/includes/nav/nav-desktop-dropdown.svelte":
/*!***********************************************************!*\
  !*** ./_scripts/includes/nav/nav-desktop-dropdown.svelte ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* _scripts/includes/nav/nav-desktop-dropdown.svelte generated by Svelte v3.29.0 */


function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[6] = list[i];
	return child_ctx;
}

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[3] = list[i];
	return child_ctx;
}

function get_each_context_2(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[3] = list[i];
	return child_ctx;
}

// (8:4) {#if menuItem.left.length}
function create_if_block_7(ctx) {
	let div;
	let each_value_2 = /*menuItem*/ ctx[0].left;
	let each_blocks = [];

	for (let i = 0; i < each_value_2.length; i += 1) {
		each_blocks[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
	}

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__desktop-open-menu-left-link-container l-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav--flex-2", !/*flexClass*/ ctx[1]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav--flex-1", /*flexClass*/ ctx[1]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1) {
				each_value_2 = /*menuItem*/ ctx[0].left;
				let i;

				for (i = 0; i < each_value_2.length; i += 1) {
					const child_ctx = get_each_context_2(ctx, each_value_2, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block_2(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value_2.length;
			}

			if (dirty & /*flexClass*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav--flex-2", !/*flexClass*/ ctx[1]);
			}

			if (dirty & /*flexClass*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav--flex-1", /*flexClass*/ ctx[1]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
		}
	};
}

// (15:20) {#if item.content}
function create_if_block_8(ctx) {
	let p;
	let t_value = /*item*/ ctx[3].content + "";
	let t;

	return {
		c() {
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("p");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
			this.h();
		},
		l(nodes) {
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "P", { class: true });
			var p_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(p);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(p_nodes, t_value);
			p_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "class", "t-nav__desktop-open-menu-p");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, p, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(p, t);
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1 && t_value !== (t_value = /*item*/ ctx[3].content + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(p);
		}
	};
}

// (10:12) {#each menuItem.left as item}
function create_each_block_2(ctx) {
	let li;
	let a;
	let t0_value = /*item*/ ctx[3].title + "";
	let t0;
	let a_href_value;
	let t1;
	let t2;
	let if_block = /*item*/ ctx[3].content && create_if_block_8(ctx);

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block) if_block.c();
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LI", { class: true });
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li_nodes, "A", { class: true, href: true });
			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a_nodes, t0_value);
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			if (if_block) if_block.l(li_nodes);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "t-nav__desktop-open-menu-link-heading");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value = /*item*/ ctx[3].url);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "t-nav__desktop-open-menu-left-item");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, a);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t1);
			if (if_block) if_block.m(li, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t2);
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1 && t0_value !== (t0_value = /*item*/ ctx[3].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (dirty & /*menuItem*/ 1 && a_href_value !== (a_href_value = /*item*/ ctx[3].url)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value);
			}

			if (/*item*/ ctx[3].content) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_8(ctx);
					if_block.c();
					if_block.m(li, t2);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
			if (if_block) if_block.d();
		}
	};
}

// (24:4) {#if menuItem.right.length && menuItem.left.length}
function create_if_block_6(ctx) {
	let span;

	return {
		c() {
			span = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("span");
			this.h();
		},
		l(nodes) {
			span = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "SPAN", { class: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(span).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(span, "class", "t-nav__vertical-line");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, span, anchor);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(span);
		}
	};
}

// (27:4) {#if menuItem.right.length}
function create_if_block(ctx) {
	let div;
	let each_value = /*menuItem*/ ctx[0].right;
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__desktop-open-menu-right-link-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav--flex-1", !/*flexClass*/ ctx[1]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav--flex-2", /*flexClass*/ ctx[1]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem, baseurl*/ 5) {
				each_value = /*menuItem*/ ctx[0].right;
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}

			if (dirty & /*flexClass*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav--flex-1", !/*flexClass*/ ctx[1]);
			}

			if (dirty & /*flexClass*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav--flex-2", /*flexClass*/ ctx[1]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
		}
	};
}

// (31:20) {#if item.icon_url}
function create_if_block_5(ctx) {
	let img;
	let img_src_value;

	return {
		c() {
			img = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			this.h();
		},
		l(nodes) {
			img = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "IMG", {
				class: true,
				src: true,
				"aria-hidden": true,
				alt: true
			});

			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "class", "t-nav__desktop-list-icon");
			if (img.src !== (img_src_value = "" + (/*baseurl*/ ctx[2] + /*item*/ ctx[3].icon_url))) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "src", img_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "aria-hidden", "true");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "alt", "icon");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, img, anchor);
		},
		p(ctx, dirty) {
			if (dirty & /*baseurl, menuItem*/ 5 && img.src !== (img_src_value = "" + (/*baseurl*/ ctx[2] + /*item*/ ctx[3].icon_url))) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "src", img_src_value);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(img);
		}
	};
}

// (53:24) {:else}
function create_else_block(ctx) {
	let li;
	let a;
	let t0_value = /*item*/ ctx[3].title + "";
	let t0;
	let a_href_value;
	let t1;
	let if_block = /*item*/ ctx[3].content && create_if_block_4(ctx);

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block) if_block.c();
			this.h();
		},
		l(nodes) {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LI", { class: true });
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li_nodes, "A", { class: true, href: true });
			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a_nodes, t0_value);
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			if (if_block) if_block.l(li_nodes);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "t-nav__desktop-open-menu-link-heading");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value = /*item*/ ctx[3].url);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "t-nav__desktop-open-menu-link-li");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, a);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t1);
			if (if_block) if_block.m(li, null);
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1 && t0_value !== (t0_value = /*item*/ ctx[3].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (dirty & /*menuItem*/ 1 && a_href_value !== (a_href_value = /*item*/ ctx[3].url)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value);
			}

			if (/*item*/ ctx[3].content) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_4(ctx);
					if_block.c();
					if_block.m(li, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
			if (if_block) if_block.d();
		}
	};
}

// (35:24) {#if item.sub_children}
function create_if_block_1(ctx) {
	let t0;
	let t1;
	let each_1_anchor;
	let if_block0 = /*item*/ ctx[3].title && /*item*/ ctx[3].show_title && create_if_block_3(ctx);
	let if_block1 = /*item*/ ctx[3].content && create_if_block_2(ctx);
	let each_value_1 = /*item*/ ctx[3].sub_children;
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	return {
		c() {
			if (if_block0) if_block0.c();
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block1) if_block1.c();
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		l(nodes) {
			if (if_block0) if_block0.l(nodes);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);
			if (if_block1) if_block1.l(nodes);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_1_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
		},
		m(target, anchor) {
			if (if_block0) if_block0.m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t0, anchor);
			if (if_block1) if_block1.m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t1, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, each_1_anchor, anchor);
		},
		p(ctx, dirty) {
			if (/*item*/ ctx[3].title && /*item*/ ctx[3].show_title) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_3(ctx);
					if_block0.c();
					if_block0.m(t0.parentNode, t0);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (/*item*/ ctx[3].content) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_2(ctx);
					if_block1.c();
					if_block1.m(t1.parentNode, t1);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (dirty & /*menuItem*/ 1) {
				each_value_1 = /*item*/ ctx[3].sub_children;
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value_1.length;
			}
		},
		d(detaching) {
			if (if_block0) if_block0.d(detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t0);
			if (if_block1) if_block1.d(detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(each_1_anchor);
		}
	};
}

// (58:32) {#if item.content}
function create_if_block_4(ctx) {
	let p;
	let t_value = /*item*/ ctx[3].content + "";
	let t;

	return {
		c() {
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("p");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
			this.h();
		},
		l(nodes) {
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "P", { class: true });
			var p_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(p);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(p_nodes, t_value);
			p_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "class", "t-nav__desktop-open-menu-p");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, p, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(p, t);
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1 && t_value !== (t_value = /*item*/ ctx[3].content + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(p);
		}
	};
}

// (36:28) {#if item.title && item.show_title}
function create_if_block_3(ctx) {
	let div;
	let t_value = /*item*/ ctx[3].title + "";
	let t;

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div_nodes, t_value);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__desktop-open-menu-subchildren-heading");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t);
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1 && t_value !== (t_value = /*item*/ ctx[3].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
		}
	};
}

// (41:28) {#if item.content}
function create_if_block_2(ctx) {
	let p;
	let t_value = /*item*/ ctx[3].content + "";
	let t;

	return {
		c() {
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("p");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
			this.h();
		},
		l(nodes) {
			p = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "P", { class: true });
			var p_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(p);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(p_nodes, t_value);
			p_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(p, "class", "t-nav__desktop-open-menu-p");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, p, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(p, t);
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1 && t_value !== (t_value = /*item*/ ctx[3].content + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(p);
		}
	};
}

// (46:28) {#each item.sub_children as child}
function create_each_block_1(ctx) {
	let li;
	let a;
	let t0_value = /*child*/ ctx[6].title + "";
	let t0;
	let a_href_value;
	let t1;

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LI", { class: true });
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li_nodes, "A", { class: true, href: true });
			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a_nodes, t0_value);
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "t-nav__desktop-open-menu-subchildren-links");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value = /*child*/ ctx[6].url);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "t-nav__desktop-open-menu-subchildren-li");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, a);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t1);
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1 && t0_value !== (t0_value = /*child*/ ctx[6].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (dirty & /*menuItem*/ 1 && a_href_value !== (a_href_value = /*child*/ ctx[6].url)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
		}
	};
}

// (29:12) {#each menuItem.right as item}
function create_each_block(ctx) {
	let div1;
	let t0;
	let div0;
	let t1;
	let if_block0 = /*item*/ ctx[3].icon_url && create_if_block_5(ctx);

	function select_block_type(ctx, dirty) {
		if (/*item*/ ctx[3].sub_children) return create_if_block_1;
		return create_else_block;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block1 = current_block_type(ctx);

	return {
		c() {
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if (if_block0) if_block0.c();
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if_block1.c();
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			if (if_block0) if_block0.l(div1_nodes);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "DIV", {});
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			if_block1.l(div0_nodes);
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "t-nav__desktop-open-menu-right-item");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div1, anchor);
			if (if_block0) if_block0.m(div1, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, div0);
			if_block1.m(div0, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t1);
		},
		p(ctx, dirty) {
			if (/*item*/ ctx[3].icon_url) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_5(ctx);
					if_block0.c();
					if_block0.m(div1, t0);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block1) {
				if_block1.p(ctx, dirty);
			} else {
				if_block1.d(1);
				if_block1 = current_block_type(ctx);

				if (if_block1) {
					if_block1.c();
					if_block1.m(div0, null);
				}
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div1);
			if (if_block0) if_block0.d();
			if_block1.d();
		}
	};
}

function create_fragment(ctx) {
	let ul;
	let t0;
	let t1;
	let if_block0 = /*menuItem*/ ctx[0].left.length && create_if_block_7(ctx);
	let if_block1 = /*menuItem*/ ctx[0].right.length && /*menuItem*/ ctx[0].left.length && create_if_block_6(ctx);
	let if_block2 = /*menuItem*/ ctx[0].right.length && create_if_block(ctx);

	return {
		c() {
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("ul");
			if (if_block0) if_block0.c();
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block1) if_block1.c();
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block2) if_block2.c();
			this.h();
		},
		l(nodes) {
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "UL", { id: true, class: true });
			var ul_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(ul);
			if (if_block0) if_block0.l(ul_nodes);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(ul_nodes);
			if (if_block1) if_block1.l(ul_nodes);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(ul_nodes);
			if (if_block2) if_block2.l(ul_nodes);
			ul_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "id", "openDesktopContainer");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "class", "t-nav__desktop-open-menu");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, ul, anchor);
			if (if_block0) if_block0.m(ul, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(ul, t0);
			if (if_block1) if_block1.m(ul, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(ul, t1);
			if (if_block2) if_block2.m(ul, null);
		},
		p(ctx, [dirty]) {
			if (/*menuItem*/ ctx[0].left.length) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_7(ctx);
					if_block0.c();
					if_block0.m(ul, t0);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (/*menuItem*/ ctx[0].right.length && /*menuItem*/ ctx[0].left.length) {
				if (if_block1) {
					
				} else {
					if_block1 = create_if_block_6(ctx);
					if_block1.c();
					if_block1.m(ul, t1);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (/*menuItem*/ ctx[0].right.length) {
				if (if_block2) {
					if_block2.p(ctx, dirty);
				} else {
					if_block2 = create_if_block(ctx);
					if_block2.c();
					if_block2.m(ul, null);
				}
			} else if (if_block2) {
				if_block2.d(1);
				if_block2 = null;
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(ul);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { menuItem } = $$props;
	let { flexClass } = $$props;
	let { baseurl } = $$props;

	$$self.$$set = $$props => {
		if ("menuItem" in $$props) $$invalidate(0, menuItem = $$props.menuItem);
		if ("flexClass" in $$props) $$invalidate(1, flexClass = $$props.flexClass);
		if ("baseurl" in $$props) $$invalidate(2, baseurl = $$props.baseurl);
	};

	return [menuItem, flexClass, baseurl];
}

class Nav_desktop_dropdown extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();
		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], { menuItem: 0, flexClass: 1, baseurl: 2 });
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Nav_desktop_dropdown);

/***/ }),

/***/ "./_scripts/includes/nav/nav-desktop.svelte":
/*!**************************************************!*\
  !*** ./_scripts/includes/nav/nav-desktop.svelte ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../_bookshop/components/link/link.svelte */ "./_bookshop/components/link/link.svelte");
/* harmony import */ var _nav_desktop_dropdown_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./nav-desktop-dropdown.svelte */ "./_scripts/includes/nav/nav-desktop-dropdown.svelte");
/* _scripts/includes/nav/nav-desktop.svelte generated by Svelte v3.29.0 */






function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[13] = list[i];
	return child_ctx;
}

// (144:20) {:else}
function create_else_block_1(ctx) {
	let a;
	let t_value = /*item*/ ctx[13].title + "";
	let t;
	let a_href_value;

	return {
		c() {
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
			this.h();
		},
		l(nodes) {
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "A", { class: true, href: true });
			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a_nodes, t_value);
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "t-nav__desktop-top-menu-link");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value = /*item*/ ctx[13].url);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, a, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t);
		},
		p(ctx, dirty) {
			if (dirty & /*data*/ 16 && t_value !== (t_value = /*item*/ ctx[13].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);

			if (dirty & /*data*/ 16 && a_href_value !== (a_href_value = /*item*/ ctx[13].url)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value);
			}
		},
		i: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		o: svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"],
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(a);
		}
	};
}

// (131:20) {#if item.children}
function create_if_block_1(ctx) {
	let button;
	let t0_value = /*item*/ ctx[13].title + "";
	let t0;
	let t1;
	let div;
	let button_id_value;
	let t2;
	let if_block_anchor;
	let current;
	let mounted;
	let dispose;
	let if_block = /*item*/ ctx[13].title === /*title*/ ctx[6] & /*isDesktopMenuOpen*/ ctx[1] && create_if_block_2(ctx);

	return {
		c() {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block) if_block.c();
			if_block_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
			this.h();
		},
		l(nodes) {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "BUTTON", { id: true, class: true });
			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(button_nodes, t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(button_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);
			if (if_block) if_block.l(nodes);
			if_block_anchor = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["empty"])();
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__chevron");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron-down.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron-down.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav__chevron--is-open", /*isDesktopMenuOpen*/ ctx[1] && /*item*/ ctx[13].title === /*title*/ ctx[6]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav__chevron--is-closed", !/*isDesktopMenuOpen*/ ctx[1] && /*item*/ ctx[13].title === /*title*/ ctx[6]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "id", button_id_value = /*item*/ ctx[13].title);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "t-nav__desktop-top-menu-button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "t-nav__desktop-top-menu-button--selected", /*isDesktopMenuOpen*/ ctx[1] && /*item*/ ctx[13].title === /*title*/ ctx[6]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, button, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t2, anchor);
			if (if_block) if_block.m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, if_block_anchor, anchor);
			current = true;

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(button, "click", /*menuButtonClick*/ ctx[9]);
				mounted = true;
			}
		},
		p(ctx, dirty) {
			if ((!current || dirty & /*data*/ 16) && t0_value !== (t0_value = /*item*/ ctx[13].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (!current || dirty & /*baseurl*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron-down.svg')");
			}

			if (!current || dirty & /*baseurl*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron-down.svg')");
			}

			if (dirty & /*isDesktopMenuOpen, data, title*/ 82) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav__chevron--is-open", /*isDesktopMenuOpen*/ ctx[1] && /*item*/ ctx[13].title === /*title*/ ctx[6]);
			}

			if (dirty & /*isDesktopMenuOpen, data, title*/ 82) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div, "t-nav__chevron--is-closed", !/*isDesktopMenuOpen*/ ctx[1] && /*item*/ ctx[13].title === /*title*/ ctx[6]);
			}

			if (!current || dirty & /*data*/ 16 && button_id_value !== (button_id_value = /*item*/ ctx[13].title)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "id", button_id_value);
			}

			if (dirty & /*isDesktopMenuOpen, data, title*/ 82) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(button, "t-nav__desktop-top-menu-button--selected", /*isDesktopMenuOpen*/ ctx[1] && /*item*/ ctx[13].title === /*title*/ ctx[6]);
			}

			if (/*item*/ ctx[13].title === /*title*/ ctx[6] & /*isDesktopMenuOpen*/ ctx[1]) {
				if (if_block) {
					if_block.p(ctx, dirty);

					if (dirty & /*data, title, isDesktopMenuOpen*/ 82) {
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block, 1);
					}
				} else {
					if_block = create_if_block_2(ctx);
					if_block.c();
					Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block, 1, 1, () => {
					if_block = null;
				});

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
			}
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block);
			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(button);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t2);
			if (if_block) if_block.d(detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(if_block_anchor);
			mounted = false;
			dispose();
		}
	};
}

// (141:24) {#if item.title === title & isDesktopMenuOpen}
function create_if_block_2(ctx) {
	let dropdown;
	let current;

	dropdown = new _nav_desktop_dropdown_svelte__WEBPACK_IMPORTED_MODULE_3__["default"]({
			props: {
				baseurl: /*baseurl*/ ctx[5],
				menuItem: /*menuItem*/ ctx[0],
				flexClass: /*flexClass*/ ctx[7],
				buttonId: /*buttonId*/ ctx[8],
				isDesktopMenuOpen: /*isDesktopMenuOpen*/ ctx[1]
			}
		});

	return {
		c() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(dropdown.$$.fragment);
		},
		l(nodes) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(dropdown.$$.fragment, nodes);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(dropdown, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const dropdown_changes = {};
			if (dirty & /*baseurl*/ 32) dropdown_changes.baseurl = /*baseurl*/ ctx[5];
			if (dirty & /*menuItem*/ 1) dropdown_changes.menuItem = /*menuItem*/ ctx[0];
			if (dirty & /*flexClass*/ 128) dropdown_changes.flexClass = /*flexClass*/ ctx[7];
			if (dirty & /*buttonId*/ 256) dropdown_changes.buttonId = /*buttonId*/ ctx[8];
			if (dirty & /*isDesktopMenuOpen*/ 2) dropdown_changes.isDesktopMenuOpen = /*isDesktopMenuOpen*/ ctx[1];
			dropdown.$set(dropdown_changes);
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(dropdown.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(dropdown.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(dropdown, detaching);
		}
	};
}

// (129:12) {#each data.children as item}
function create_each_block(ctx) {
	let li;
	let current_block_type_index;
	let if_block;
	let t;
	let current;
	const if_block_creators = [create_if_block_1, create_else_block_1];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*item*/ ctx[13].children) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			if_block.c();
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LI", { class: true });
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);
			if_block.l(li_nodes);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "t-nav__desktop-top-menu-items");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);
			if_blocks[current_block_type_index].m(li, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t);
			current = true;
		},
		p(ctx, dirty) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block, 1);
				if_block.m(li, t);
			}
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block);
			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
			if_blocks[current_block_type_index].d();
		}
	};
}

// (156:8) {:else}
function create_else_block(ctx) {
	let link0;
	let t;
	let div;
	let link1;
	let current;

	link0 = new _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				content: /*navButtonData*/ ctx[2].login_button.content,
				url: /*navButtonData*/ ctx[2].login_button.url,
				style: /*navButtonData*/ ctx[2].login_button.style
			}
		});

	link1 = new _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				content: /*navButtonData*/ ctx[2].signup_button.content,
				url: /*navButtonData*/ ctx[2].signup_button.url,
				style: /*navButtonData*/ ctx[2].signup_button.style
			}
		});

	return {
		c() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(link0.$$.fragment);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(link1.$$.fragment);
			this.h();
		},
		l(nodes) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(link0.$$.fragment, nodes);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(link1.$$.fragment, div_nodes);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__signup-button");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(link0, target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(link1, div, null);
			current = true;
		},
		p(ctx, dirty) {
			const link0_changes = {};
			if (dirty & /*navButtonData*/ 4) link0_changes.content = /*navButtonData*/ ctx[2].login_button.content;
			if (dirty & /*navButtonData*/ 4) link0_changes.url = /*navButtonData*/ ctx[2].login_button.url;
			if (dirty & /*navButtonData*/ 4) link0_changes.style = /*navButtonData*/ ctx[2].login_button.style;
			link0.$set(link0_changes);
			const link1_changes = {};
			if (dirty & /*navButtonData*/ 4) link1_changes.content = /*navButtonData*/ ctx[2].signup_button.content;
			if (dirty & /*navButtonData*/ 4) link1_changes.url = /*navButtonData*/ ctx[2].signup_button.url;
			if (dirty & /*navButtonData*/ 4) link1_changes.style = /*navButtonData*/ ctx[2].signup_button.style;
			link1.$set(link1_changes);
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(link0.$$.fragment, local);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(link1.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(link0.$$.fragment, local);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(link1.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(link0, detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(link1);
		}
	};
}

// (154:8) {#if signedIn}
function create_if_block(ctx) {
	let link;
	let current;

	link = new _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({
			props: {
				content: /*navButtonData*/ ctx[2].go_to_app.content,
				url: /*navButtonData*/ ctx[2].go_to_app.url,
				style: /*navButtonData*/ ctx[2].go_to_app.style
			}
		});

	return {
		c() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(link.$$.fragment);
		},
		l(nodes) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(link.$$.fragment, nodes);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(link, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const link_changes = {};
			if (dirty & /*navButtonData*/ 4) link_changes.content = /*navButtonData*/ ctx[2].go_to_app.content;
			if (dirty & /*navButtonData*/ 4) link_changes.url = /*navButtonData*/ ctx[2].go_to_app.url;
			if (dirty & /*navButtonData*/ 4) link_changes.style = /*navButtonData*/ ctx[2].go_to_app.style;
			link.$set(link_changes);
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(link.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(link.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(link, detaching);
		}
	};
}

function create_fragment(ctx) {
	let div3;
	let div1;
	let a0;
	let t0;
	let t1;
	let a1;
	let img0;
	let img0_src_value;
	let t2;
	let img1;
	let img1_src_value;
	let t3;
	let div0;
	let t4;
	let a1_href_value;
	let t5;
	let ul;
	let t6;
	let div2;
	let current_block_type_index;
	let if_block;
	let current;
	let each_value = /*data*/ ctx[4].children;
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type_1(ctx, dirty) {
		if (/*signedIn*/ ctx[3]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type_1(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	return {
		c() {
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			a0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Skip to content");
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			a1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			img0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			img1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Home button");
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if_block.c();
			this.h();
		},
		l(nodes) {
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div3_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div3);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			a0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "A", { class: true, href: true });
			var a0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a0);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a0_nodes, "Skip to content");
			a0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			a1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "A", { class: true, href: true });
			var a1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a1);

			img0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(a1_nodes, "IMG", {
				class: true,
				src: true,
				alt: true,
				"aria-hidden": true
			});

			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(a1_nodes);

			img1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(a1_nodes, "IMG", {
				class: true,
				src: true,
				alt: true,
				"aria-hidden": true
			});

			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(a1_nodes);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(a1_nodes, "DIV", { class: true });
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			t4 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div0_nodes, "Home button");
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			a1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t5 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "UL", { id: true, class: true });
			var ul_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t6 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div3_nodes);
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "DIV", { class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);
			if_block.l(div2_nodes);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div3_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a0, "class", "cc-helper__skip-to-content-link");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a0, "href", "#documentBody");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "class", "t-nav__desktop-logo t-nav__desktop-logo--small");
			if (img0.src !== (img0_src_value = "" + (/*baseurl*/ ctx[5] + /*data*/ ctx[4].icon_small))) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "src", img0_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "alt", "");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "aria-hidden", "true");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "class", "t-nav__desktop-logo t-nav__desktop-logo--large");
			if (img1.src !== (img1_src_value = "" + (/*baseurl*/ ctx[5] + /*data*/ ctx[4].icon_big))) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "src", img1_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "alt", "");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "aria-hidden", "true");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "cc-helper-hidden");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a1, "class", "t-nav__desktop-home-link");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a1, "href", a1_href_value = /*data*/ ctx[4].url);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "id", "buttonGroup");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "class", "t-nav__desktop-top-menu-group");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "t-nav__desktop-menu-left-group");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "t-nav__login-button-group");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div3, "class", "t-nav__desktop-menu-top-group");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div3, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, div1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, a0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a0, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, a1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a1, img0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a1, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a1, img1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a1, t3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a1, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t4);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t5);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, t6);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, div2);
			if_blocks[current_block_type_index].m(div2, null);
			current = true;
		},
		p(ctx, [dirty]) {
			if (!current || dirty & /*baseurl, data*/ 48 && img0.src !== (img0_src_value = "" + (/*baseurl*/ ctx[5] + /*data*/ ctx[4].icon_small))) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img0, "src", img0_src_value);
			}

			if (!current || dirty & /*baseurl, data*/ 48 && img1.src !== (img1_src_value = "" + (/*baseurl*/ ctx[5] + /*data*/ ctx[4].icon_big))) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img1, "src", img1_src_value);
			}

			if (!current || dirty & /*data*/ 16 && a1_href_value !== (a1_href_value = /*data*/ ctx[4].url)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a1, "href", a1_href_value);
			}

			if (dirty & /*baseurl, menuItem, flexClass, buttonId, isDesktopMenuOpen, data, title, menuButtonClick*/ 1011) {
				each_value = /*data*/ ctx[4].children;
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks[i], 1);
						each_blocks[i].m(ul, null);
					}
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
			}

			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type_1(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block, 1);
				if_block.m(div2, null);
			}
		},
		i(local) {
			if (current) return;

			for (let i = 0; i < each_value.length; i += 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(each_blocks[i]);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block);
			current = true;
		},
		o(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(each_blocks[i]);
			}

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block);
			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
			if_blocks[current_block_type_index].d();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { menuItem } = $$props;
	let { navButtonData } = $$props;
	let { signedIn } = $$props;
	let { data } = $$props;
	let { enableBodyScrollonDesktop } = $$props;
	let { isDesktopMenuOpen = false } = $$props;
	let { desktopMenuOpenHeight } = $$props;
	let { baseurl } = $$props;
	let newMenuData = [];
	let title;
	let flexClass;
	let buttonId;

	function menuButtonClick(e) {
		$$invalidate(8, buttonId = e.target.id);

		if (title === buttonId) {
			$$invalidate(1, isDesktopMenuOpen = !isDesktopMenuOpen);
			return;
		}

		$$invalidate(1, isDesktopMenuOpen = true);

		newMenuData.map(item => {
			if (item.title === buttonId) {
				$$invalidate(6, title = item.title);
				$$invalidate(0, menuItem = { left: item.left, right: item.right });
			}

			if (menuItem.left) {
				$$invalidate(7, flexClass = menuItem.left.length <= 1 ? true : false);
			}
		});

		setTimeout(
			() => {
				const desktopContainer = document.getElementById("openDesktopContainer");
				$$invalidate(10, desktopMenuOpenHeight = desktopContainer.offsetHeight);

				window.addEventListener("resize", function (event) {
					if (isDesktopMenuOpen) {
						$$invalidate(10, desktopMenuOpenHeight = desktopContainer.offsetHeight);
					}
				});
			},
			10
		);
	}

	Object(svelte__WEBPACK_IMPORTED_MODULE_1__["onMount"])(() => {
		enableBodyScrollonDesktop();

		data.children.map(item => {
			let left = [];
			let right = [];

			if (item.children) {
				item.children.map(child => {
					child.align_left ? left.push(child) : right.push(child);
				});
			}

			newMenuData.push({
				title: item.title,
				content: item.content,
				url: item.url,
				left,
				right
			});
		});

		document.addEventListener("keydown", e => {
			const desktopContainer = document.getElementById("openDesktopContainer");
			const buttonContainer = document.getElementById("globalNav");
			const button = document.getElementById(buttonId);
			const KEYCODE_TAB = 9;
			const isTabPressed = e.key === "Tab" || e.keyCode === KEYCODE_TAB;

			if (!buttonContainer && !desktopContainer) {
				return;
			}

			if (buttonContainer) {
				if (e.shiftKey && document.activeElement === button) {
					$$invalidate(1, isDesktopMenuOpen = false);
				}
			}

			if (desktopContainer) {
				const focusableEls = desktopContainer.querySelectorAll("a[href]:not([disabled]), button:not([disabled])");
				const firstFocusableEl = focusableEls[0];
				const lastFocusableEl = focusableEls[focusableEls.length - 1];

				if (!isTabPressed && !e.shiftKey) {
					return;
				}

				if (!e.shiftKey && document.activeElement === lastFocusableEl) {
					$$invalidate(1, isDesktopMenuOpen = false);
					return;
				}

				if (e.shiftKey && e.keyCode == 9 && document.activeElement === firstFocusableEl) {
					$$invalidate(1, isDesktopMenuOpen = false);
					return;
				}
			}
		});
	});

	$$self.$$set = $$props => {
		if ("menuItem" in $$props) $$invalidate(0, menuItem = $$props.menuItem);
		if ("navButtonData" in $$props) $$invalidate(2, navButtonData = $$props.navButtonData);
		if ("signedIn" in $$props) $$invalidate(3, signedIn = $$props.signedIn);
		if ("data" in $$props) $$invalidate(4, data = $$props.data);
		if ("enableBodyScrollonDesktop" in $$props) $$invalidate(11, enableBodyScrollonDesktop = $$props.enableBodyScrollonDesktop);
		if ("isDesktopMenuOpen" in $$props) $$invalidate(1, isDesktopMenuOpen = $$props.isDesktopMenuOpen);
		if ("desktopMenuOpenHeight" in $$props) $$invalidate(10, desktopMenuOpenHeight = $$props.desktopMenuOpenHeight);
		if ("baseurl" in $$props) $$invalidate(5, baseurl = $$props.baseurl);
	};

	return [
		menuItem,
		isDesktopMenuOpen,
		navButtonData,
		signedIn,
		data,
		baseurl,
		title,
		flexClass,
		buttonId,
		menuButtonClick,
		desktopMenuOpenHeight,
		enableBodyScrollonDesktop
	];
}

class Nav_desktop extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			menuItem: 0,
			navButtonData: 2,
			signedIn: 3,
			data: 4,
			enableBodyScrollonDesktop: 11,
			isDesktopMenuOpen: 1,
			desktopMenuOpenHeight: 10,
			baseurl: 5
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Nav_desktop);

/***/ }),

/***/ "./_scripts/includes/nav/nav-mobile.svelte":
/*!*************************************************!*\
  !*** ./_scripts/includes/nav/nav-mobile.svelte ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../_bookshop/components/link/link.svelte */ "./_bookshop/components/link/link.svelte");
/* harmony import */ var _helpers_tabtrap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/tabtrap.js */ "./_scripts/includes/helpers/tabtrap.js");
/* harmony import */ var svelte_transition__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! svelte/transition */ "./node_modules/svelte/transition/index.mjs");
/* _scripts/includes/nav/nav-mobile.svelte generated by Svelte v3.29.0 */






function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[15] = list[i];
	return child_ctx;
}

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[12] = list[i];
	return child_ctx;
}

// (85:20) {:else}
function create_else_block_1(ctx) {
	let a;
	let t_value = /*item*/ ctx[12].title + "";
	let t;
	let a_href_value;

	return {
		c() {
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t_value);
			this.h();
		},
		l(nodes) {
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "A", { class: true, href: true });
			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a_nodes, t_value);
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "t-nav__mobile-open-hamburger-link");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value = /*item*/ ctx[12].url);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, a, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t);
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1 && t_value !== (t_value = /*item*/ ctx[12].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t, t_value);

			if (dirty & /*menuItem*/ 1 && a_href_value !== (a_href_value = /*item*/ ctx[12].url)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(a);
		}
	};
}

// (64:48) 
function create_if_block_2(ctx) {
	let div3;
	let details;
	let summary;
	let div2;
	let t0_value = /*item*/ ctx[12].title + "";
	let t0;
	let t1;
	let div0;
	let t2;
	let div1;
	let t3;
	let ul;
	let each_value_1 = /*item*/ ctx[12].sub_children;
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	return {
		c() {
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			details = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("details");
			summary = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("summary");
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div3_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div3);
			details = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div3_nodes, "DETAILS", { class: true });
			var details_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(details);
			summary = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(details_nodes, "SUMMARY", {});
			var summary_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(summary);
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(summary_nodes, "DIV", { class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div2_nodes, t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div2_nodes);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			summary_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(details_nodes);
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(details_nodes, "UL", { class: true });
			var ul_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			details_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div3_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "t-nav__mobile-accordion-icon t-nav__mobile-accordion-icon--open");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/plus.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/plus.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "t-nav__mobile-accordion-icon t-nav__mobile-accordion-icon--close");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div1, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/minus.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div1, "mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/minus.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "t-nav__mobile-sub-child-summary");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "class", "t-nav__mobile-sub-child-ul");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(details, "class", "t-nav__mobile-sub-child-details");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div3, "class", "t-nav__mobile-sub-child-accordion");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div3, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div3, details);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(details, summary);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(summary, div2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, div0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, t2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, div1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(details, t3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(details, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1 && t0_value !== (t0_value = /*item*/ ctx[12].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (dirty & /*baseurl*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/plus.svg')");
			}

			if (dirty & /*baseurl*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/plus.svg')");
			}

			if (dirty & /*baseurl*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div1, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/minus.svg')");
			}

			if (dirty & /*baseurl*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div1, "mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/minus.svg')");
			}

			if (dirty & /*menuItem*/ 1) {
				each_value_1 = /*item*/ ctx[12].sub_children;
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value_1.length;
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div3);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
		}
	};
}

// (58:20) {#if item.children}
function create_if_block_1(ctx) {
	let button;
	let t0_value = /*item*/ ctx[12].title + "";
	let t0;
	let t1;
	let div;
	let button_id_value;
	let mounted;
	let dispose;

	return {
		c() {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			this.h();
		},
		l(nodes) {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "BUTTON", { id: true, class: true });
			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(button_nodes, t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(button_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__mobile-right-icon");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron_right-18px.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron_right-18px.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "id", button_id_value = /*item*/ ctx[12].title);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "t-nav__mobile-open-hamburger-button");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, button, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, div);

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(button, "click", /*hamburgerButtonClick*/ ctx[6]);
				mounted = true;
			}
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1 && t0_value !== (t0_value = /*item*/ ctx[12].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (dirty & /*baseurl*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron_right-18px.svg')");
			}

			if (dirty & /*baseurl*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[5] + "/assets/chevron_right-18px.svg')");
			}

			if (dirty & /*menuItem*/ 1 && button_id_value !== (button_id_value = /*item*/ ctx[12].title)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "id", button_id_value);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(button);
			mounted = false;
			dispose();
		}
	};
}

// (75:36) {#each item.sub_children as link}
function create_each_block_1(ctx) {
	let li;
	let a;
	let t0_value = /*link*/ ctx[15].title + "";
	let t0;
	let a_href_value;
	let t1;

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(t0_value);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LI", { class: true });
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(li_nodes, "A", { class: true, href: true });
			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(a_nodes, t0_value);
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "t-nav__mobile-sub-children-link");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value = /*link*/ ctx[15].url);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "t-nav__mobile-sub-child-li");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, a);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t1);
		},
		p(ctx, dirty) {
			if (dirty & /*menuItem*/ 1 && t0_value !== (t0_value = /*link*/ ctx[15].title + "")) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t0, t0_value);

			if (dirty & /*menuItem*/ 1 && a_href_value !== (a_href_value = /*link*/ ctx[15].url)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
		}
	};
}

// (55:12) {#each menuItem as item}
function create_each_block(ctx) {
	let li;
	let t;

	function select_block_type(ctx, dirty) {
		if (/*item*/ ctx[12].children) return create_if_block_1;
		if (/*item*/ ctx[12].sub_children) return create_if_block_2;
		return create_else_block_1;
	}

	let current_block_type = select_block_type(ctx, -1);
	let if_block = current_block_type(ctx);

	return {
		c() {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("li");
			if_block.c();
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			this.h();
		},
		l(nodes) {
			li = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "LI", { class: true });
			var li_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(li);
			if_block.l(li_nodes);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(li_nodes);
			li_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(li, "class", "t-nav__mobile-open-hamburger-li");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, li, anchor);
			if_block.m(li, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(li, t);
		},
		p(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block) {
				if_block.p(ctx, dirty);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);

				if (if_block) {
					if_block.c();
					if_block.m(li, t);
				}
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(li);
			if_block.d();
		}
	};
}

// (52:0) {#key menuItem}
function create_key_block(ctx) {
	let div;
	let ul;
	let div_intro;
	let div_outro;
	let current;
	let each_value = /*menuItem*/ ctx[0];
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { id: true, class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			ul = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div_nodes, "UL", { class: true });
			var ul_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(ul, "class", "t-nav__mobile-open-hamburger-ul");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "id", "mobileMenuList");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__mobile-open-hamburger-container l-container");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}

			current = true;
		},
		p(new_ctx, dirty) {
			ctx = new_ctx;

			if (dirty & /*menuItem, hamburgerButtonClick, baseurl*/ 97) {
				each_value = /*menuItem*/ ctx[0];
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i(local) {
			if (current) return;

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_render_callback"])(() => {
				if (div_outro) div_outro.end(1);

				if (!div_intro) div_intro = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_in_transition"])(div, svelte_transition__WEBPACK_IMPORTED_MODULE_3__["fly"], {
					x: /*xIn*/ ctx[1],
					duration: 500,
					opacity: 1
				});

				div_intro.start();
			});

			current = true;
		},
		o(local) {
			if (div_intro) div_intro.invalidate();

			div_outro = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_out_transition"])(div, svelte_transition__WEBPACK_IMPORTED_MODULE_3__["fly"], {
				x: /*xOut*/ ctx[2],
				duration: 500,
				opacity: 1
			});

			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_each"])(each_blocks, detaching);
			if (detaching && div_outro) div_outro.end();
		}
	};
}

// (100:8) {:else}
function create_else_block(ctx) {
	let link0;
	let t;
	let div;
	let link1;
	let current;

	link0 = new _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: {
				content: /*navButtonData*/ ctx[3].login_button.content,
				url: /*navButtonData*/ ctx[3].login_button.url,
				style: /*navButtonData*/ ctx[3].login_button.style
			}
		});

	link1 = new _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: {
				content: /*navButtonData*/ ctx[3].signup_button.content,
				url: /*navButtonData*/ ctx[3].signup_button.url,
				style: /*navButtonData*/ ctx[3].signup_button.style
			}
		});

	return {
		c() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(link0.$$.fragment);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(link1.$$.fragment);
			this.h();
		},
		l(nodes) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(link0.$$.fragment, nodes);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(link1.$$.fragment, div_nodes);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__signup-button");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(link0, target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(link1, div, null);
			current = true;
		},
		p(ctx, dirty) {
			const link0_changes = {};
			if (dirty & /*navButtonData*/ 8) link0_changes.content = /*navButtonData*/ ctx[3].login_button.content;
			if (dirty & /*navButtonData*/ 8) link0_changes.url = /*navButtonData*/ ctx[3].login_button.url;
			if (dirty & /*navButtonData*/ 8) link0_changes.style = /*navButtonData*/ ctx[3].login_button.style;
			link0.$set(link0_changes);
			const link1_changes = {};
			if (dirty & /*navButtonData*/ 8) link1_changes.content = /*navButtonData*/ ctx[3].signup_button.content;
			if (dirty & /*navButtonData*/ 8) link1_changes.url = /*navButtonData*/ ctx[3].signup_button.url;
			if (dirty & /*navButtonData*/ 8) link1_changes.style = /*navButtonData*/ ctx[3].signup_button.style;
			link1.$set(link1_changes);
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(link0.$$.fragment, local);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(link1.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(link0.$$.fragment, local);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(link1.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(link0, detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(link1);
		}
	};
}

// (98:8) {#if signedIn}
function create_if_block(ctx) {
	let link;
	let current;

	link = new _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({
			props: {
				content: /*navButtonData*/ ctx[3].go_to_app.content,
				url: /*navButtonData*/ ctx[3].go_to_app.url,
				style: /*navButtonData*/ ctx[3].go_to_app.style
			}
		});

	return {
		c() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(link.$$.fragment);
		},
		l(nodes) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(link.$$.fragment, nodes);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(link, target, anchor);
			current = true;
		},
		p(ctx, dirty) {
			const link_changes = {};
			if (dirty & /*navButtonData*/ 8) link_changes.content = /*navButtonData*/ ctx[3].go_to_app.content;
			if (dirty & /*navButtonData*/ 8) link_changes.url = /*navButtonData*/ ctx[3].go_to_app.url;
			if (dirty & /*navButtonData*/ 8) link_changes.style = /*navButtonData*/ ctx[3].go_to_app.style;
			link.$set(link_changes);
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(link.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(link.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(link, detaching);
		}
	};
}

function create_fragment(ctx) {
	let previous_key = /*menuItem*/ ctx[0];
	let t;
	let div;
	let current_block_type_index;
	let if_block;
	let div_intro;
	let div_outro;
	let current;
	let key_block = create_key_block(ctx);
	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type_1(ctx, dirty) {
		if (/*signedIn*/ ctx[4]) return 0;
		return 1;
	}

	current_block_type_index = select_block_type_1(ctx, -1);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	return {
		c() {
			key_block.c();
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if_block.c();
			this.h();
		},
		l(nodes) {
			key_block.l(nodes);
			t = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			if_block.l(div_nodes);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__login-button-group");
		},
		m(target, anchor) {
			key_block.m(target, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			if_blocks[current_block_type_index].m(div, null);
			current = true;
		},
		p(new_ctx, [dirty]) {
			ctx = new_ctx;

			if (dirty & /*menuItem*/ 1 && Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"])(previous_key, previous_key = /*menuItem*/ ctx[0])) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(key_block, 1, 1, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["noop"]);
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
				key_block = create_key_block(ctx);
				key_block.c();
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(key_block);
				key_block.m(t.parentNode, t);
			} else {
				key_block.p(ctx, dirty);
			}

			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type_1(ctx, dirty);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				}

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block, 1);
				if_block.m(div, null);
			}
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(key_block);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block);

			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_render_callback"])(() => {
				if (div_outro) div_outro.end(1);

				if (!div_intro) div_intro = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_in_transition"])(div, svelte_transition__WEBPACK_IMPORTED_MODULE_3__["fly"], {
					x: /*xIn*/ ctx[1],
					duration: 500,
					opacity: 1
				});

				div_intro.start();
			});

			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(key_block);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block);
			if (div_intro) div_intro.invalidate();

			div_outro = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_out_transition"])(div, svelte_transition__WEBPACK_IMPORTED_MODULE_3__["fly"], {
				x: /*xOut*/ ctx[2],
				duration: 500,
				opacity: 1
			});

			current = false;
		},
		d(detaching) {
			key_block.d(detaching);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			if_blocks[current_block_type_index].d();
			if (detaching && div_outro) div_outro.end();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { menuItem } = $$props;
	let { previousMenuItem } = $$props;
	let { nextMenuItem } = $$props;
	let { title } = $$props;
	let { navButtonData } = $$props;
	let { signedIn } = $$props;
	let { width } = $$props;
	let { baseurl } = $$props;
	let { xIn } = $$props;
	let { xOut } = $$props;

	function hamburgerButtonClick(e) {
		clickForward(width);

		menuItem.filter(item => {
			if (item.title === e.target.id) {
				$$invalidate(9, title = item.title);
				$$invalidate(8, nextMenuItem = item.children);
			}
		});

		if (nextMenuItem) {
			$$invalidate(7, previousMenuItem = menuItem);
			$$invalidate(0, menuItem = nextMenuItem);
			$$invalidate(8, nextMenuItem = null);
		}

		setTimeout(
			() => {
				let mobileContainer = document.getElementById("globalNav");
				Object(_helpers_tabtrap_js__WEBPACK_IMPORTED_MODULE_2__["trapFocus"])(mobileContainer);

				document.getElementById(title).addEventListener("keypress", e => {
					setTimeout(() => Object(_helpers_tabtrap_js__WEBPACK_IMPORTED_MODULE_2__["trapFocus"])(mobileContainer), 0);
				});
			},
			0
		);
	}

	function clickForward() {
		const openNavContainer = document.getElementById("mobileMenuList");
		$$invalidate(1, xIn = -openNavContainer.offsetWidth);
		$$invalidate(2, xOut = openNavContainer.offsetWidth);
	}

	$$self.$$set = $$props => {
		if ("menuItem" in $$props) $$invalidate(0, menuItem = $$props.menuItem);
		if ("previousMenuItem" in $$props) $$invalidate(7, previousMenuItem = $$props.previousMenuItem);
		if ("nextMenuItem" in $$props) $$invalidate(8, nextMenuItem = $$props.nextMenuItem);
		if ("title" in $$props) $$invalidate(9, title = $$props.title);
		if ("navButtonData" in $$props) $$invalidate(3, navButtonData = $$props.navButtonData);
		if ("signedIn" in $$props) $$invalidate(4, signedIn = $$props.signedIn);
		if ("width" in $$props) $$invalidate(10, width = $$props.width);
		if ("baseurl" in $$props) $$invalidate(5, baseurl = $$props.baseurl);
		if ("xIn" in $$props) $$invalidate(1, xIn = $$props.xIn);
		if ("xOut" in $$props) $$invalidate(2, xOut = $$props.xOut);
	};

	return [
		menuItem,
		xIn,
		xOut,
		navButtonData,
		signedIn,
		baseurl,
		hamburgerButtonClick,
		previousMenuItem,
		nextMenuItem,
		title,
		width
	];
}

class Nav_mobile extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(this, options, instance, create_fragment, svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"], {
			menuItem: 0,
			previousMenuItem: 7,
			nextMenuItem: 8,
			title: 9,
			navButtonData: 3,
			signedIn: 4,
			width: 10,
			baseurl: 5,
			xIn: 1,
			xOut: 2
		});
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Nav_mobile);

/***/ }),

/***/ "./_scripts/includes/nav/nav.svelte":
/*!******************************************!*\
  !*** ./_scripts/includes/nav/nav.svelte ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte/internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony import */ var _nav_mobile_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./nav-mobile.svelte */ "./_scripts/includes/nav/nav-mobile.svelte");
/* harmony import */ var _nav_desktop_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./nav-desktop.svelte */ "./_scripts/includes/nav/nav-desktop.svelte");
/* harmony import */ var svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! svelte */ "./node_modules/svelte/index.mjs");
/* harmony import */ var body_scroll_lock__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! body-scroll-lock */ "./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js");
/* harmony import */ var _helpers_tabtrap_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/tabtrap.js */ "./_scripts/includes/helpers/tabtrap.js");
/* _scripts/includes/nav/nav.svelte generated by Svelte v3.29.0 */










function create_else_block_1(ctx) {
	let a;
	let img;
	let img_src_value;
	let t0;
	let div;
	let t1;
	let a_href_value;

	return {
		c() {
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("a");
			img = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("img");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Home button");
			this.h();
		},
		l(nodes) {
			a = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "A", { class: true, href: true });
			var a_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(a);

			img = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(a_nodes, "IMG", {
				class: true,
				src: true,
				alt: true,
				"aria-hidden": true
			});

			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(a_nodes);
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(a_nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div_nodes, "Home button");
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			a_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "class", "t-nav__logo");
			if (img.src !== (img_src_value = "" + (/*baseurl*/ ctx[1] + /*data*/ ctx[0].icon_big))) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "src", img_src_value);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "alt", "");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "aria-hidden", "true");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "cc-helper-hidden");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "class", "t-nav__mobile-home-link");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value = /*data*/ ctx[0].url);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, a, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, img);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(a, div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div, t1);
		},
		p(ctx, dirty) {
			if (dirty[0] & /*baseurl, data*/ 3 && img.src !== (img_src_value = "" + (/*baseurl*/ ctx[1] + /*data*/ ctx[0].icon_big))) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(img, "src", img_src_value);
			}

			if (dirty[0] & /*data*/ 1 && a_href_value !== (a_href_value = /*data*/ ctx[0].url)) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(a, "href", a_href_value);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(a);
		}
	};
}

// (126:12) {#if title}
function create_if_block_3(ctx) {
	let button;
	let div;
	let t0;
	let t1;
	let mounted;
	let dispose;

	return {
		c() {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])(/*title*/ ctx[9]);
			this.h();
		},
		l(nodes) {
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "BUTTON", { class: true, id: true });
			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(button_nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(button_nodes);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(button_nodes, /*title*/ ctx[9]);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__mobile-left-chevron-icon");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/left-chevron.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/left-chevron.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "t-nav__mobile-back-button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "id", /*title*/ ctx[9]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, button, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(button, t1);

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(button, "click", /*backToPreviousMenuItem*/ ctx[16]);
				mounted = true;
			}
		},
		p(ctx, dirty) {
			if (dirty[0] & /*baseurl*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/left-chevron.svg')");
			}

			if (dirty[0] & /*baseurl*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div, "mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/left-chevron.svg')");
			}

			if (dirty[0] & /*title*/ 512) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_data"])(t1, /*title*/ ctx[9]);

			if (dirty[0] & /*title*/ 512) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "id", /*title*/ ctx[9]);
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(button);
			mounted = false;
			dispose();
		}
	};
}

// (143:16) {:else}
function create_else_block(ctx) {
	let div0;
	let t0;
	let div1;
	let t1;

	return {
		c() {
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Open menu");
			this.h();
		},
		l(nodes) {
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div1_nodes, "Open menu");
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "t-nav__mobile-hamburger-icon");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/hamburger.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/hamburger.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "cc-helper-hidden");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div0, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t0, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div1, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t1);
		},
		p(ctx, dirty) {
			if (dirty[0] & /*baseurl*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/hamburger.svg')");
			}

			if (dirty[0] & /*baseurl*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/hamburger.svg')");
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div0);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t0);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div1);
		}
	};
}

// (139:16) {#if isHamburgerOpen}
function create_if_block_2(ctx) {
	let div0;
	let t0;
	let div1;
	let t1;

	return {
		c() {
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["text"])("Close menu");
			this.h();
		},
		l(nodes) {
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true, style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_text"])(div1_nodes, "Close menu");
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "t-nav__mobile-close-icon");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/close.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/close.svg')");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "cc-helper-hidden");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div0, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t0, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div1, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t1);
		},
		p(ctx, dirty) {
			if (dirty[0] & /*baseurl*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "-webkit-mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/close.svg')");
			}

			if (dirty[0] & /*baseurl*/ 2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div0, "mask-image", "url('" + /*baseurl*/ ctx[1] + "/assets/close.svg')");
			}
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div0);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t0);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div1);
		}
	};
}

// (150:8) {#if isHamburgerOpen}
function create_if_block_1(ctx) {
	let div;
	let mobilenav;
	let updating_previousMenuItem;
	let updating_title;
	let updating_xIn;
	let updating_xOut;
	let current;

	function mobilenav_previousMenuItem_binding(value) {
		/*mobilenav_previousMenuItem_binding*/ ctx[19].call(null, value);
	}

	function mobilenav_title_binding(value) {
		/*mobilenav_title_binding*/ ctx[20].call(null, value);
	}

	function mobilenav_xIn_binding(value) {
		/*mobilenav_xIn_binding*/ ctx[21].call(null, value);
	}

	function mobilenav_xOut_binding(value) {
		/*mobilenav_xOut_binding*/ ctx[22].call(null, value);
	}

	let mobilenav_props = {
		navButtonData: /*navButtonData*/ ctx[2],
		baseurl: /*baseurl*/ ctx[1],
		menuItem: /*menuItem*/ ctx[7],
		nextMenuItem: /*nextMenuItem*/ ctx[14],
		signedIn: /*signedIn*/ ctx[13]
	};

	if (/*previousMenuItem*/ ctx[8] !== void 0) {
		mobilenav_props.previousMenuItem = /*previousMenuItem*/ ctx[8];
	}

	if (/*title*/ ctx[9] !== void 0) {
		mobilenav_props.title = /*title*/ ctx[9];
	}

	if (/*xIn*/ ctx[10] !== void 0) {
		mobilenav_props.xIn = /*xIn*/ ctx[10];
	}

	if (/*xOut*/ ctx[11] !== void 0) {
		mobilenav_props.xOut = /*xOut*/ ctx[11];
	}

	mobilenav = new _nav_mobile_svelte__WEBPACK_IMPORTED_MODULE_1__["default"]({ props: mobilenav_props });
	svelte_internal__WEBPACK_IMPORTED_MODULE_0__["binding_callbacks"].push(() => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["bind"])(mobilenav, "previousMenuItem", mobilenav_previousMenuItem_binding));
	svelte_internal__WEBPACK_IMPORTED_MODULE_0__["binding_callbacks"].push(() => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["bind"])(mobilenav, "title", mobilenav_title_binding));
	svelte_internal__WEBPACK_IMPORTED_MODULE_0__["binding_callbacks"].push(() => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["bind"])(mobilenav, "xIn", mobilenav_xIn_binding));
	svelte_internal__WEBPACK_IMPORTED_MODULE_0__["binding_callbacks"].push(() => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["bind"])(mobilenav, "xOut", mobilenav_xOut_binding));

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(mobilenav.$$.fragment);
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { id: true, class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(mobilenav.$$.fragment, div_nodes);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "id", "openMobileMenu");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__mobile-hamburger");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(mobilenav, div, null);
			current = true;
		},
		p(ctx, dirty) {
			const mobilenav_changes = {};
			if (dirty[0] & /*navButtonData*/ 4) mobilenav_changes.navButtonData = /*navButtonData*/ ctx[2];
			if (dirty[0] & /*baseurl*/ 2) mobilenav_changes.baseurl = /*baseurl*/ ctx[1];
			if (dirty[0] & /*menuItem*/ 128) mobilenav_changes.menuItem = /*menuItem*/ ctx[7];

			if (!updating_previousMenuItem && dirty[0] & /*previousMenuItem*/ 256) {
				updating_previousMenuItem = true;
				mobilenav_changes.previousMenuItem = /*previousMenuItem*/ ctx[8];
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_flush_callback"])(() => updating_previousMenuItem = false);
			}

			if (!updating_title && dirty[0] & /*title*/ 512) {
				updating_title = true;
				mobilenav_changes.title = /*title*/ ctx[9];
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_flush_callback"])(() => updating_title = false);
			}

			if (!updating_xIn && dirty[0] & /*xIn*/ 1024) {
				updating_xIn = true;
				mobilenav_changes.xIn = /*xIn*/ ctx[10];
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_flush_callback"])(() => updating_xIn = false);
			}

			if (!updating_xOut && dirty[0] & /*xOut*/ 2048) {
				updating_xOut = true;
				mobilenav_changes.xOut = /*xOut*/ ctx[11];
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_flush_callback"])(() => updating_xOut = false);
			}

			mobilenav.$set(mobilenav_changes);
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(mobilenav.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(mobilenav.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(mobilenav);
		}
	};
}

// (155:8) {#if isDesktop}
function create_if_block(ctx) {
	let div;
	let desktopnav;
	let updating_enableBodyScrollonDesktop;
	let updating_isDesktopMenuOpen;
	let updating_previousMenuItem;
	let updating_desktopMenuOpenHeight;
	let current;

	function desktopnav_enableBodyScrollonDesktop_binding(value) {
		/*desktopnav_enableBodyScrollonDesktop_binding*/ ctx[23].call(null, value);
	}

	function desktopnav_isDesktopMenuOpen_binding(value) {
		/*desktopnav_isDesktopMenuOpen_binding*/ ctx[24].call(null, value);
	}

	function desktopnav_previousMenuItem_binding(value) {
		/*desktopnav_previousMenuItem_binding*/ ctx[25].call(null, value);
	}

	function desktopnav_desktopMenuOpenHeight_binding(value) {
		/*desktopnav_desktopMenuOpenHeight_binding*/ ctx[26].call(null, value);
	}

	let desktopnav_props = {
		baseurl: /*baseurl*/ ctx[1],
		navButtonData: /*navButtonData*/ ctx[2],
		data: /*data*/ ctx[0],
		menuItem: /*menuItem*/ ctx[7],
		nextMenuItem: /*nextMenuItem*/ ctx[14],
		signedIn: /*signedIn*/ ctx[13]
	};

	if (/*enableBodyScrollonDesktop*/ ctx[12] !== void 0) {
		desktopnav_props.enableBodyScrollonDesktop = /*enableBodyScrollonDesktop*/ ctx[12];
	}

	if (/*isDesktopMenuOpen*/ ctx[4] !== void 0) {
		desktopnav_props.isDesktopMenuOpen = /*isDesktopMenuOpen*/ ctx[4];
	}

	if (/*previousMenuItem*/ ctx[8] !== void 0) {
		desktopnav_props.previousMenuItem = /*previousMenuItem*/ ctx[8];
	}

	if (/*desktopMenuOpenHeight*/ ctx[5] !== void 0) {
		desktopnav_props.desktopMenuOpenHeight = /*desktopMenuOpenHeight*/ ctx[5];
	}

	desktopnav = new _nav_desktop_svelte__WEBPACK_IMPORTED_MODULE_2__["default"]({ props: desktopnav_props });
	svelte_internal__WEBPACK_IMPORTED_MODULE_0__["binding_callbacks"].push(() => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["bind"])(desktopnav, "enableBodyScrollonDesktop", desktopnav_enableBodyScrollonDesktop_binding));
	svelte_internal__WEBPACK_IMPORTED_MODULE_0__["binding_callbacks"].push(() => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["bind"])(desktopnav, "isDesktopMenuOpen", desktopnav_isDesktopMenuOpen_binding));
	svelte_internal__WEBPACK_IMPORTED_MODULE_0__["binding_callbacks"].push(() => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["bind"])(desktopnav, "previousMenuItem", desktopnav_previousMenuItem_binding));
	svelte_internal__WEBPACK_IMPORTED_MODULE_0__["binding_callbacks"].push(() => Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["bind"])(desktopnav, "desktopMenuOpenHeight", desktopnav_desktopMenuOpenHeight_binding));

	return {
		c() {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["create_component"])(desktopnav.$$.fragment);
			this.h();
		},
		l(nodes) {
			div = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { class: true });
			var div_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_component"])(desktopnav.$$.fragment, div_nodes);
			div_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div, "class", "t-nav__desktop");
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["mount_component"])(desktopnav, div, null);
			current = true;
		},
		p(ctx, dirty) {
			const desktopnav_changes = {};
			if (dirty[0] & /*baseurl*/ 2) desktopnav_changes.baseurl = /*baseurl*/ ctx[1];
			if (dirty[0] & /*navButtonData*/ 4) desktopnav_changes.navButtonData = /*navButtonData*/ ctx[2];
			if (dirty[0] & /*data*/ 1) desktopnav_changes.data = /*data*/ ctx[0];
			if (dirty[0] & /*menuItem*/ 128) desktopnav_changes.menuItem = /*menuItem*/ ctx[7];

			if (!updating_enableBodyScrollonDesktop && dirty[0] & /*enableBodyScrollonDesktop*/ 4096) {
				updating_enableBodyScrollonDesktop = true;
				desktopnav_changes.enableBodyScrollonDesktop = /*enableBodyScrollonDesktop*/ ctx[12];
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_flush_callback"])(() => updating_enableBodyScrollonDesktop = false);
			}

			if (!updating_isDesktopMenuOpen && dirty[0] & /*isDesktopMenuOpen*/ 16) {
				updating_isDesktopMenuOpen = true;
				desktopnav_changes.isDesktopMenuOpen = /*isDesktopMenuOpen*/ ctx[4];
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_flush_callback"])(() => updating_isDesktopMenuOpen = false);
			}

			if (!updating_previousMenuItem && dirty[0] & /*previousMenuItem*/ 256) {
				updating_previousMenuItem = true;
				desktopnav_changes.previousMenuItem = /*previousMenuItem*/ ctx[8];
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_flush_callback"])(() => updating_previousMenuItem = false);
			}

			if (!updating_desktopMenuOpenHeight && dirty[0] & /*desktopMenuOpenHeight*/ 32) {
				updating_desktopMenuOpenHeight = true;
				desktopnav_changes.desktopMenuOpenHeight = /*desktopMenuOpenHeight*/ ctx[5];
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["add_flush_callback"])(() => updating_desktopMenuOpenHeight = false);
			}

			desktopnav.$set(desktopnav_changes);
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(desktopnav.$$.fragment, local);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(desktopnav.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["destroy_component"])(desktopnav);
		}
	};
}

function create_fragment(ctx) {
	let div2;
	let div1;
	let div0;
	let t0;
	let button;
	let t1;
	let t2;
	let t3;
	let div3;
	let current;
	let mounted;
	let dispose;

	function select_block_type(ctx, dirty) {
		if (/*title*/ ctx[9]) return create_if_block_3;
		return create_else_block_1;
	}

	let current_block_type = select_block_type(ctx, [-1]);
	let if_block0 = current_block_type(ctx);

	function select_block_type_1(ctx, dirty) {
		if (/*isHamburgerOpen*/ ctx[3]) return create_if_block_2;
		return create_else_block;
	}

	let current_block_type_1 = select_block_type_1(ctx, [-1]);
	let if_block1 = current_block_type_1(ctx);
	let if_block2 = /*isHamburgerOpen*/ ctx[3] && create_if_block_1(ctx);
	let if_block3 = /*isDesktop*/ ctx[6] && create_if_block(ctx);

	return {
		c() {
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			if_block0.c();
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("button");
			if_block1.c();
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block2) if_block2.c();
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			if (if_block3) if_block3.c();
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["space"])();
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["element"])("div");
			this.h();
		},
		l(nodes) {
			div2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { id: true, class: true });
			var div2_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div2);
			div1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div2_nodes, "DIV", { class: true });
			var div1_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div1);
			div0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div1_nodes, "DIV", { class: true });
			var div0_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div0);
			if_block0.l(div0_nodes);
			t0 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div0_nodes);
			button = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(div0_nodes, "BUTTON", { "aria-label": true, class: true });
			var button_nodes = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(button);
			if_block1.l(button_nodes);
			button_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div0_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t1 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			if (if_block2) if_block2.l(div1_nodes);
			t2 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(div1_nodes);
			if (if_block3) if_block3.l(div1_nodes);
			div1_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			div2_nodes.forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			t3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_space"])(nodes);
			div3 = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["claim_element"])(nodes, "DIV", { style: true });
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["children"])(div3).forEach(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"]);
			this.h();
		},
		h() {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "aria-label", "Toggle menu");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(button, "class", "t-nav__mobile-right-menu-button");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div0, "class", "t-nav__mobile");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div1, "class", "l-container");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "id", "globalNav");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["attr"])(div2, "class", "t-nav");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "t-nav--hamburger-open", /*isHamburgerOpen*/ ctx[3]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div3, "height", /*desktopMenuOpenHeight*/ ctx[5] + 8 + "px");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div3, "transition", "height 0.15s ease-out");
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div3, "t-nav__desktop-open-background-div", /*isDesktopMenuOpen*/ ctx[4]);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div3, "t-nav__desktop-closed-background-div", !/*isDesktopMenuOpen*/ ctx[4]);
		},
		m(target, anchor) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div2, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div2, div1);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, div0);
			if_block0.m(div0, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, t0);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div0, button);
			if_block1.m(button, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t1);
			if (if_block2) if_block2.m(div1, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["append"])(div1, t2);
			if (if_block3) if_block3.m(div1, null);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, t3, anchor);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["insert"])(target, div3, anchor);
			current = true;

			if (!mounted) {
				dispose = Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["listen"])(button, "click", /*onHamburgerClick*/ ctx[15]);
				mounted = true;
			}
		},
		p(ctx, dirty) {
			if (current_block_type === (current_block_type = select_block_type(ctx, dirty)) && if_block0) {
				if_block0.p(ctx, dirty);
			} else {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					if_block0.m(div0, t0);
				}
			}

			if (current_block_type_1 === (current_block_type_1 = select_block_type_1(ctx, dirty)) && if_block1) {
				if_block1.p(ctx, dirty);
			} else {
				if_block1.d(1);
				if_block1 = current_block_type_1(ctx);

				if (if_block1) {
					if_block1.c();
					if_block1.m(button, null);
				}
			}

			if (/*isHamburgerOpen*/ ctx[3]) {
				if (if_block2) {
					if_block2.p(ctx, dirty);

					if (dirty[0] & /*isHamburgerOpen*/ 8) {
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block_1(ctx);
					if_block2.c();
					Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block2, 1);
					if_block2.m(div1, t2);
				}
			} else if (if_block2) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
			}

			if (/*isDesktop*/ ctx[6]) {
				if (if_block3) {
					if_block3.p(ctx, dirty);

					if (dirty[0] & /*isDesktop*/ 64) {
						Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block3, 1);
					}
				} else {
					if_block3 = create_if_block(ctx);
					if_block3.c();
					Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block3, 1);
					if_block3.m(div1, null);
				}
			} else if (if_block3) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["group_outros"])();

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block3, 1, 1, () => {
					if_block3 = null;
				});

				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["check_outros"])();
			}

			if (dirty[0] & /*isHamburgerOpen*/ 8) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div2, "t-nav--hamburger-open", /*isHamburgerOpen*/ ctx[3]);
			}

			if (!current || dirty[0] & /*desktopMenuOpenHeight*/ 32) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["set_style"])(div3, "height", /*desktopMenuOpenHeight*/ ctx[5] + 8 + "px");
			}

			if (dirty[0] & /*isDesktopMenuOpen*/ 16) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div3, "t-nav__desktop-open-background-div", /*isDesktopMenuOpen*/ ctx[4]);
			}

			if (dirty[0] & /*isDesktopMenuOpen*/ 16) {
				Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["toggle_class"])(div3, "t-nav__desktop-closed-background-div", !/*isDesktopMenuOpen*/ ctx[4]);
			}
		},
		i(local) {
			if (current) return;
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_in"])(if_block3);
			current = true;
		},
		o(local) {
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block2);
			Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["transition_out"])(if_block3);
			current = false;
		},
		d(detaching) {
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div2);
			if_block0.d();
			if_block1.d();
			if (if_block2) if_block2.d();
			if (if_block3) if_block3.d();
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(t3);
			if (detaching) Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["detach"])(div3);
			mounted = false;
			dispose();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { data } = $$props;
	let { logged_in } = $$props;
	let { logged_out } = $$props;
	let { baseurl } = $$props;
	const targetElement = document.querySelector("#documentBody");
	const query = window.matchMedia("screen and (min-width: 769px)");
	let signedIn = (/^(.*;)?\s*signed_in\s*=\s*[^;]+(.*)?$/).test(document.cookie);
	let navButtonData;
	let isHamburgerOpen = false;
	let isDesktopMenuOpen = false;
	let desktopMenuOpenHeight;
	let isDesktop;
	let menuItem = data.children;
	let previousMenuItem;
	let nextMenuItem;
	let title;
	let xIn;
	let xOut;
	let mobileContainerWidth;
	let navContainer;

	let enableBodyScrollonDesktop = () => {
		Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_4__["enableBodyScroll"])(targetElement);
	};

	function updateScrollLockFromMediaQuery(query) {
		if (query.matches) {
			Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_4__["enableBodyScroll"])(targetElement);
			$$invalidate(6, isDesktop = true);
		} else {
			$$invalidate(3, isHamburgerOpen = false);
			$$invalidate(4, isDesktopMenuOpen = false);
			Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_4__["clearAllBodyScrollLocks"])();
		}
	}

	function onHamburgerClick() {
		clickForward();

		setTimeout(
			() => {
				$$invalidate(3, isHamburgerOpen = !isHamburgerOpen);
			},
			0
		);

		if (!isHamburgerOpen) {
			setTimeout(
				() => {
					const mobileContainer = document.getElementById("globalNav");
					Object(_helpers_tabtrap_js__WEBPACK_IMPORTED_MODULE_5__["trapFocus"])(mobileContainer);
				},
				0
			);

			Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_4__["disableBodyScroll"])(targetElement);
			return;
		}

		if (isHamburgerOpen) {
			$$invalidate(9, title = null);
			Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_4__["enableBodyScroll"])(targetElement);
			return;
		}
	}

	function backToPreviousMenuItem() {
		if (previousMenuItem) {
			$$invalidate(7, menuItem = previousMenuItem);
			$$invalidate(8, previousMenuItem = null);
			$$invalidate(9, title = null);
			clickBackward(mobileContainerWidth);
		}
	}

	function checkLoginStatus() {
		$$invalidate(2, navButtonData = signedIn ? logged_in : logged_out);
	}

	function clickBackward() {
		$$invalidate(10, xIn = navContainer.offsetWidth);
		$$invalidate(11, xOut = -navContainer.offsetWidth);
	}

	function clickForward() {
		$$invalidate(10, xIn = -navContainer.offsetWidth);
		$$invalidate(11, xOut = navContainer.offsetWidth);
	}

	Object(svelte__WEBPACK_IMPORTED_MODULE_3__["onMount"])(() => {
		navContainer = document.getElementById("globalNav");
		checkLoginStatus();
		updateScrollLockFromMediaQuery(query);

		if (query) {
			// Need to use 'addListener' instead of 'addEventListener' due to safari backwards compatibility
			query.addListener(updateScrollLockFromMediaQuery);
		}

		document.addEventListener("click", event => {
			const isClickInside = navContainer.contains(event.target);

			if (!isClickInside) {
				$$invalidate(4, isDesktopMenuOpen = false);
			}
		});

		mobileContainerWidth = navContainer.offsetWidth;
	});

	Object(svelte__WEBPACK_IMPORTED_MODULE_3__["onDestroy"])(() => {
		Object(body_scroll_lock__WEBPACK_IMPORTED_MODULE_4__["clearAllBodyScrollLocks"])();
	});

	function mobilenav_previousMenuItem_binding(value) {
		previousMenuItem = value;
		$$invalidate(8, previousMenuItem);
	}

	function mobilenav_title_binding(value) {
		title = value;
		$$invalidate(9, title);
	}

	function mobilenav_xIn_binding(value) {
		xIn = value;
		$$invalidate(10, xIn);
	}

	function mobilenav_xOut_binding(value) {
		xOut = value;
		$$invalidate(11, xOut);
	}

	function desktopnav_enableBodyScrollonDesktop_binding(value) {
		enableBodyScrollonDesktop = value;
		$$invalidate(12, enableBodyScrollonDesktop);
	}

	function desktopnav_isDesktopMenuOpen_binding(value) {
		isDesktopMenuOpen = value;
		$$invalidate(4, isDesktopMenuOpen);
	}

	function desktopnav_previousMenuItem_binding(value) {
		previousMenuItem = value;
		$$invalidate(8, previousMenuItem);
	}

	function desktopnav_desktopMenuOpenHeight_binding(value) {
		desktopMenuOpenHeight = value;
		$$invalidate(5, desktopMenuOpenHeight);
	}

	$$self.$$set = $$props => {
		if ("data" in $$props) $$invalidate(0, data = $$props.data);
		if ("logged_in" in $$props) $$invalidate(17, logged_in = $$props.logged_in);
		if ("logged_out" in $$props) $$invalidate(18, logged_out = $$props.logged_out);
		if ("baseurl" in $$props) $$invalidate(1, baseurl = $$props.baseurl);
	};

	return [
		data,
		baseurl,
		navButtonData,
		isHamburgerOpen,
		isDesktopMenuOpen,
		desktopMenuOpenHeight,
		isDesktop,
		menuItem,
		previousMenuItem,
		title,
		xIn,
		xOut,
		enableBodyScrollonDesktop,
		signedIn,
		nextMenuItem,
		onHamburgerClick,
		backToPreviousMenuItem,
		logged_in,
		logged_out,
		mobilenav_previousMenuItem_binding,
		mobilenav_title_binding,
		mobilenav_xIn_binding,
		mobilenav_xOut_binding,
		desktopnav_enableBodyScrollonDesktop_binding,
		desktopnav_isDesktopMenuOpen_binding,
		desktopnav_previousMenuItem_binding,
		desktopnav_desktopMenuOpenHeight_binding
	];
}

class Nav extends svelte_internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponent"] {
	constructor(options) {
		super();

		Object(svelte_internal__WEBPACK_IMPORTED_MODULE_0__["init"])(
			this,
			options,
			instance,
			create_fragment,
			svelte_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"],
			{
				data: 0,
				logged_in: 17,
				logged_out: 18,
				baseurl: 1
			},
			[-1, -1]
		);
	}
}

/* harmony default export */ __webpack_exports__["default"] = (Nav);

/***/ }),

/***/ "./_scripts/index.js":
/*!***************************!*\
  !*** ./_scripts/index.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var svelte_slabs_renderer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! svelte-slabs-renderer */ "./node_modules/svelte-slabs-renderer/index.js");
/* harmony import */ var _bookshop_components_accordion_accordion_svelte__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_bookshop/components/accordion/accordion.svelte */ "./_bookshop/components/accordion/accordion.svelte");
/* harmony import */ var _bookshop_components_button_button_svelte__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_bookshop/components/button/button.svelte */ "./_bookshop/components/button/button.svelte");
/* harmony import */ var _bookshop_components_contact_form_contact_form_svelte__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../_bookshop/components/contact-form/contact-form.svelte */ "./_bookshop/components/contact-form/contact-form.svelte");
/* harmony import */ var _bookshop_components_input_input_svelte__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_bookshop/components/input/input.svelte */ "./_bookshop/components/input/input.svelte");
/* harmony import */ var _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../_bookshop/components/link/link.svelte */ "./_bookshop/components/link/link.svelte");
/* harmony import */ var _bookshop_components_pricing_table_desktop_table_desktop_table_svelte__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../_bookshop/components/pricing-table/desktop-table/desktop-table.svelte */ "./_bookshop/components/pricing-table/desktop-table/desktop-table.svelte");
/* harmony import */ var _bookshop_components_pricing_table_mobile_table_mobile_table_svelte__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../_bookshop/components/pricing-table/mobile-table/mobile-table.svelte */ "./_bookshop/components/pricing-table/mobile-table/mobile-table.svelte");
/* harmony import */ var _bookshop_components_pricing_table_table_table_svelte__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../_bookshop/components/pricing-table/table/table.svelte */ "./_bookshop/components/pricing-table/table/table.svelte");
/* harmony import */ var _bookshop_components_pricing_block_block_svelte__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../_bookshop/components/pricing/block/block.svelte */ "./_bookshop/components/pricing/block/block.svelte");
/* harmony import */ var _bookshop_components_toggle_toggle_svelte__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../_bookshop/components/toggle/toggle.svelte */ "./_bookshop/components/toggle/toggle.svelte");
/* harmony import */ var _includes_archive_filter_archive_filter_svelte__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./includes/archive-filter/archive-filter.svelte */ "./_scripts/includes/archive-filter/archive-filter.svelte");
/* harmony import */ var _includes_docs_nav_docs_nav_svelte__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./includes/docs-nav/docs-nav.svelte */ "./_scripts/includes/docs-nav/docs-nav.svelte");
/* harmony import */ var _includes_homepage_hero_homepage_hero_svelte__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./includes/homepage-hero/homepage-hero.svelte */ "./_scripts/includes/homepage-hero/homepage-hero.svelte");
/* harmony import */ var _includes_nav_nav_desktop_dropdown_svelte__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./includes/nav/nav-desktop-dropdown.svelte */ "./_scripts/includes/nav/nav-desktop-dropdown.svelte");
/* harmony import */ var _includes_nav_nav_desktop_svelte__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./includes/nav/nav-desktop.svelte */ "./_scripts/includes/nav/nav-desktop.svelte");
/* harmony import */ var _includes_nav_nav_mobile_svelte__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./includes/nav/nav-mobile.svelte */ "./_scripts/includes/nav/nav-mobile.svelte");
/* harmony import */ var _includes_nav_nav_svelte__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./includes/nav/nav.svelte */ "./_scripts/includes/nav/nav.svelte");
/* harmony import */ var _includes_helpers_store_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./includes/helpers/store.js */ "./_scripts/includes/helpers/store.js");

          let BOOKSHOP_COMPONENTS = { "../_bookshop/components/accordion/accordion.svelte": _bookshop_components_accordion_accordion_svelte__WEBPACK_IMPORTED_MODULE_1__, "../_bookshop/components/button/button.svelte": _bookshop_components_button_button_svelte__WEBPACK_IMPORTED_MODULE_2__, "../_bookshop/components/contact-form/contact-form.svelte": _bookshop_components_contact_form_contact_form_svelte__WEBPACK_IMPORTED_MODULE_3__, "../_bookshop/components/input/input.svelte": _bookshop_components_input_input_svelte__WEBPACK_IMPORTED_MODULE_4__, "../_bookshop/components/link/link.svelte": _bookshop_components_link_link_svelte__WEBPACK_IMPORTED_MODULE_5__, "../_bookshop/components/pricing-table/desktop-table/desktop-table.svelte": _bookshop_components_pricing_table_desktop_table_desktop_table_svelte__WEBPACK_IMPORTED_MODULE_6__, "../_bookshop/components/pricing-table/mobile-table/mobile-table.svelte": _bookshop_components_pricing_table_mobile_table_mobile_table_svelte__WEBPACK_IMPORTED_MODULE_7__, "../_bookshop/components/pricing-table/table/table.svelte": _bookshop_components_pricing_table_table_table_svelte__WEBPACK_IMPORTED_MODULE_8__, "../_bookshop/components/pricing/block/block.svelte": _bookshop_components_pricing_block_block_svelte__WEBPACK_IMPORTED_MODULE_9__, "../_bookshop/components/toggle/toggle.svelte": _bookshop_components_toggle_toggle_svelte__WEBPACK_IMPORTED_MODULE_10__ };
       let THEME_COMPONENTS = { "./includes/archive-filter/archive-filter.svelte": _includes_archive_filter_archive_filter_svelte__WEBPACK_IMPORTED_MODULE_11__, "./includes/docs-nav/docs-nav.svelte": _includes_docs_nav_docs_nav_svelte__WEBPACK_IMPORTED_MODULE_12__, "./includes/homepage-hero/homepage-hero.svelte": _includes_homepage_hero_homepage_hero_svelte__WEBPACK_IMPORTED_MODULE_13__, "./includes/nav/nav-desktop-dropdown.svelte": _includes_nav_nav_desktop_dropdown_svelte__WEBPACK_IMPORTED_MODULE_14__, "./includes/nav/nav-desktop.svelte": _includes_nav_nav_desktop_svelte__WEBPACK_IMPORTED_MODULE_15__, "./includes/nav/nav-mobile.svelte": _includes_nav_nav_mobile_svelte__WEBPACK_IMPORTED_MODULE_16__, "./includes/nav/nav.svelte": _includes_nav_nav_svelte__WEBPACK_IMPORTED_MODULE_17__ };



/**
 * Convert a component path (like in bookshop) to a component name.
 * Removes duplicate file/folder name, stops at components folder or dotpath.
 * @param  {String} filepath Raw filepath that was imported
 * @return {String}          Component name, as per bookshop conventions
 */
const rewriteSvelteComponent = (filepath) => {
  const fp = filepath.toLowerCase().split('/').reverse();
  const componentName = [fp[0].replace(/\..*$/, '')];
  const startAt = fp[1] === componentName[0] ? 2 : 1;
  for (let i = startAt; i < fp.length; i++) {
    if (fp[i] === 'components') break;
    if (/\./.test(fp[i])) break;
    componentName.unshift(fp[i]);
  }
  return componentName.join('/');
};

/**
 * Turn a raw import-glob-keyed object into a map of components
 * @param  {Object} importedObj Output from import-glob-keyed
 * @param  {Object} appObj      Object to insert components into
 */
const mapSvelteFiles = (importedObj, appObj) => {
	for (let [file, component] of Object.entries(importedObj)) {
		file = rewriteSvelteComponent(file);
		appObj[file] = component.default;
	}
}

const transformProps = (props, target) => {
	const storeName = props.store || props._store;
	if (storeName) {
		props.store = _includes_helpers_store_js__WEBPACK_IMPORTED_MODULE_18__[storeName];
	}

  if (props.cloudcannon_encrypted_details || props._cloudcannon_encrypted_details) {
    const existingEncryptedDetails = target.querySelector("[name=\"_encrypted_details\"]");
    if (existingEncryptedDetails) {
      props.cloudcannon_encrypted_details = existingEncryptedDetails.value;
    }
  }
}

(function() {
	const usableApps = {};
	if (typeof BOOKSHOP_COMPONENTS !== 'undefined') mapSvelteFiles(BOOKSHOP_COMPONENTS, usableApps);
	if (typeof THEME_COMPONENTS !== 'undefined') mapSvelteFiles(THEME_COMPONENTS, usableApps);

  	svelte_slabs_renderer__WEBPACK_IMPORTED_MODULE_0__["renderSlabs"](usableApps, {
  		transformProps
  	})
}());


/***/ }),

/***/ "./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js ***!
  \*****************************************************************/
/*! exports provided: disableBodyScroll, clearAllBodyScrollLocks, enableBodyScroll */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disableBodyScroll", function() { return disableBodyScroll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearAllBodyScrollLocks", function() { return clearAllBodyScrollLocks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableBodyScroll", function() { return enableBodyScroll; });
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

// Older browsers don't support event options, feature detect it.

// Adopted and modified solution from Bohdan Didukh (2017)
// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi

var hasPassiveEvents = false;
if (typeof window !== 'undefined') {
  var passiveTestOptions = {
    get passive() {
      hasPassiveEvents = true;
      return undefined;
    }
  };
  window.addEventListener('testPassive', null, passiveTestOptions);
  window.removeEventListener('testPassive', null, passiveTestOptions);
}

var isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);


var locks = [];
var documentListenerAdded = false;
var initialClientY = -1;
var previousBodyOverflowSetting = void 0;
var previousBodyPaddingRight = void 0;

// returns true if `el` should be allowed to receive touchmove events.
var allowTouchMove = function allowTouchMove(el) {
  return locks.some(function (lock) {
    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {
      return true;
    }

    return false;
  });
};

var preventDefault = function preventDefault(rawEvent) {
  var e = rawEvent || window.event;

  // For the case whereby consumers adds a touchmove event listener to document.
  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })
  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then
  // the touchmove event on document will break.
  if (allowTouchMove(e.target)) {
    return true;
  }

  // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).
  if (e.touches.length > 1) return true;

  if (e.preventDefault) e.preventDefault();

  return false;
};

var setOverflowHidden = function setOverflowHidden(options) {
  // If previousBodyPaddingRight is already set, don't set it again.
  if (previousBodyPaddingRight === undefined) {
    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;
    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;

    if (_reserveScrollBarGap && scrollBarGap > 0) {
      previousBodyPaddingRight = document.body.style.paddingRight;
      document.body.style.paddingRight = scrollBarGap + 'px';
    }
  }

  // If previousBodyOverflowSetting is already set, don't set it again.
  if (previousBodyOverflowSetting === undefined) {
    previousBodyOverflowSetting = document.body.style.overflow;
    document.body.style.overflow = 'hidden';
  }
};

var restoreOverflowSetting = function restoreOverflowSetting() {
  if (previousBodyPaddingRight !== undefined) {
    document.body.style.paddingRight = previousBodyPaddingRight;

    // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it
    // can be set again.
    previousBodyPaddingRight = undefined;
  }

  if (previousBodyOverflowSetting !== undefined) {
    document.body.style.overflow = previousBodyOverflowSetting;

    // Restore previousBodyOverflowSetting to undefined
    // so setOverflowHidden knows it can be set again.
    previousBodyOverflowSetting = undefined;
  }
};

// https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions
var isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {
  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;
};

var handleScroll = function handleScroll(event, targetElement) {
  var clientY = event.targetTouches[0].clientY - initialClientY;

  if (allowTouchMove(event.target)) {
    return false;
  }

  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {
    // element is at the top of its scroll.
    return preventDefault(event);
  }

  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {
    // element is at the bottom of its scroll.
    return preventDefault(event);
  }

  event.stopPropagation();
  return true;
};

var disableBodyScroll = function disableBodyScroll(targetElement, options) {
  // targetElement must be provided
  if (!targetElement) {
    // eslint-disable-next-line no-console
    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');
    return;
  }

  // disableBodyScroll must not have been called on this targetElement before
  if (locks.some(function (lock) {
    return lock.targetElement === targetElement;
  })) {
    return;
  }

  var lock = {
    targetElement: targetElement,
    options: options || {}
  };

  locks = [].concat(_toConsumableArray(locks), [lock]);

  if (isIosDevice) {
    targetElement.ontouchstart = function (event) {
      if (event.targetTouches.length === 1) {
        // detect single touch.
        initialClientY = event.targetTouches[0].clientY;
      }
    };
    targetElement.ontouchmove = function (event) {
      if (event.targetTouches.length === 1) {
        // detect single touch.
        handleScroll(event, targetElement);
      }
    };

    if (!documentListenerAdded) {
      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);
      documentListenerAdded = true;
    }
  } else {
    setOverflowHidden(options);
  }
};

var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {
  if (isIosDevice) {
    // Clear all locks ontouchstart/ontouchmove handlers, and the references.
    locks.forEach(function (lock) {
      lock.targetElement.ontouchstart = null;
      lock.targetElement.ontouchmove = null;
    });

    if (documentListenerAdded) {
      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);
      documentListenerAdded = false;
    }

    // Reset initial clientY.
    initialClientY = -1;
  } else {
    restoreOverflowSetting();
  }

  locks = [];
};

var enableBodyScroll = function enableBodyScroll(targetElement) {
  if (!targetElement) {
    // eslint-disable-next-line no-console
    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');
    return;
  }

  locks = locks.filter(function (lock) {
    return lock.targetElement !== targetElement;
  });

  if (isIosDevice) {
    targetElement.ontouchstart = null;
    targetElement.ontouchmove = null;

    if (documentListenerAdded && locks.length === 0) {
      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? { passive: false } : undefined);
      documentListenerAdded = false;
    }
  } else if (!locks.length) {
    restoreOverflowSetting();
  }
};



/***/ }),

/***/ "./node_modules/svelte-slabs-renderer/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/svelte-slabs-renderer/index.js ***!
  \*****************************************************/
/*! exports provided: renderSlabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderSlabs", function() { return renderSlabs; });
/**
 * Find props for a slab based on the given propstring
 * @param  {String} propString String defining where to locate the svelte props
 * @return {Object}            Props ready to pass to svelte
 */
const resolveProps = (propString) => {
	if (!propString) return {};
	const [src, key] = propString.split(':');
	if (src === 'window') {
		if (!window.svelteSlabs) return {};
		return window.svelteSlabs[key] || {};
	} else if (src === 'endpoint') {
		console.warn('Endpoints not yet supported');
		return {};
	}
}

/**
 * Look for svelte tags on the page, and try render an app into them.
 * @param  {Object} apps    All svelte components available, keyed by name
 * @return {Object}         All svelte apps that were rendered on the page
 */
const renderSlabs = (apps, opts) => {
	opts = {
		hydrate: true,
		...opts
	}

	const renderTargets = document.querySelectorAll("[data-svelte-slab]");
	const renderedSlabs = [];

	for (const target of renderTargets) {
		const slabName = target.dataset.svelteSlab;
		const slabPropsKey = target.dataset.svelteSlabProps;

		const app = apps[slabName];
		if (app) {
			const slabProps = resolveProps(slabPropsKey);
			if (typeof opts.transformProps === 'function') {
				opts.transformProps(slabProps, target);
			}

			renderedSlabs.push(new app({target, props: slabProps, hydrate: opts.hydrate}));
		} else {
			console.warn(`WARN: Svelte slab "${slabName}" not found`)
		}
	}

	return renderedSlabs;
}

/***/ }),

/***/ "./node_modules/svelte/easing/index.mjs":
/*!**********************************************!*\
  !*** ./node_modules/svelte/easing/index.mjs ***!
  \**********************************************/
/*! exports provided: linear, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backIn", function() { return backIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backInOut", function() { return backInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "backOut", function() { return backOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceIn", function() { return bounceIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceInOut", function() { return bounceInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bounceOut", function() { return bounceOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circIn", function() { return circIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circInOut", function() { return circInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circOut", function() { return circOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicIn", function() { return cubicIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicInOut", function() { return cubicInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubicOut", function() { return cubicOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticIn", function() { return elasticIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticInOut", function() { return elasticInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "elasticOut", function() { return elasticOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expoIn", function() { return expoIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expoInOut", function() { return expoInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "expoOut", function() { return expoOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadIn", function() { return quadIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadInOut", function() { return quadInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quadOut", function() { return quadOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quartIn", function() { return quartIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quartInOut", function() { return quartInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quartOut", function() { return quartOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quintIn", function() { return quintIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quintInOut", function() { return quintInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quintOut", function() { return quintOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sineIn", function() { return sineIn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sineInOut", function() { return sineInOut; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sineOut", function() { return sineOut; });
/* harmony import */ var _internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return _internal__WEBPACK_IMPORTED_MODULE_0__["identity"]; });



/*
Adapted from https://github.com/mattdesl
Distributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md
*/
function backInOut(t) {
    const s = 1.70158 * 1.525;
    if ((t *= 2) < 1)
        return 0.5 * (t * t * ((s + 1) * t - s));
    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);
}
function backIn(t) {
    const s = 1.70158;
    return t * t * ((s + 1) * t - s);
}
function backOut(t) {
    const s = 1.70158;
    return --t * t * ((s + 1) * t + s) + 1;
}
function bounceOut(t) {
    const a = 4.0 / 11.0;
    const b = 8.0 / 11.0;
    const c = 9.0 / 10.0;
    const ca = 4356.0 / 361.0;
    const cb = 35442.0 / 1805.0;
    const cc = 16061.0 / 1805.0;
    const t2 = t * t;
    return t < a
        ? 7.5625 * t2
        : t < b
            ? 9.075 * t2 - 9.9 * t + 3.4
            : t < c
                ? ca * t2 - cb * t + cc
                : 10.8 * t * t - 20.52 * t + 10.72;
}
function bounceInOut(t) {
    return t < 0.5
        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))
        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;
}
function bounceIn(t) {
    return 1.0 - bounceOut(1.0 - t);
}
function circInOut(t) {
    if ((t *= 2) < 1)
        return -0.5 * (Math.sqrt(1 - t * t) - 1);
    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
}
function circIn(t) {
    return 1.0 - Math.sqrt(1.0 - t * t);
}
function circOut(t) {
    return Math.sqrt(1 - --t * t);
}
function cubicInOut(t) {
    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;
}
function cubicIn(t) {
    return t * t * t;
}
function cubicOut(t) {
    const f = t - 1.0;
    return f * f * f + 1.0;
}
function elasticInOut(t) {
    return t < 0.5
        ? 0.5 *
            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *
            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))
        : 0.5 *
            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *
            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +
            1.0;
}
function elasticIn(t) {
    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));
}
function elasticOut(t) {
    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);
}
function expoInOut(t) {
    return t === 0.0 || t === 1.0
        ? t
        : t < 0.5
            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)
            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;
}
function expoIn(t) {
    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));
}
function expoOut(t) {
    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);
}
function quadInOut(t) {
    t /= 0.5;
    if (t < 1)
        return 0.5 * t * t;
    t--;
    return -0.5 * (t * (t - 2) - 1);
}
function quadIn(t) {
    return t * t;
}
function quadOut(t) {
    return -t * (t - 2.0);
}
function quartInOut(t) {
    return t < 0.5
        ? +8.0 * Math.pow(t, 4.0)
        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;
}
function quartIn(t) {
    return Math.pow(t, 4.0);
}
function quartOut(t) {
    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;
}
function quintInOut(t) {
    if ((t *= 2) < 1)
        return 0.5 * t * t * t * t * t;
    return 0.5 * ((t -= 2) * t * t * t * t + 2);
}
function quintIn(t) {
    return t * t * t * t * t;
}
function quintOut(t) {
    return --t * t * t * t * t + 1;
}
function sineInOut(t) {
    return -0.5 * (Math.cos(Math.PI * t) - 1);
}
function sineIn(t) {
    const v = Math.cos(t * Math.PI * 0.5);
    if (Math.abs(v) < 1e-14)
        return 1;
    else
        return 1 - v;
}
function sineOut(t) {
    return Math.sin((t * Math.PI) / 2);
}




/***/ }),

/***/ "./node_modules/svelte/index.mjs":
/*!***************************************!*\
  !*** ./node_modules/svelte/index.mjs ***!
  \***************************************/
/*! exports provided: SvelteComponent, afterUpdate, beforeUpdate, createEventDispatcher, getContext, onDestroy, onMount, setContext, tick */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SvelteComponent", function() { return _internal__WEBPACK_IMPORTED_MODULE_0__["SvelteComponentDev"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "afterUpdate", function() { return _internal__WEBPACK_IMPORTED_MODULE_0__["afterUpdate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "beforeUpdate", function() { return _internal__WEBPACK_IMPORTED_MODULE_0__["beforeUpdate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createEventDispatcher", function() { return _internal__WEBPACK_IMPORTED_MODULE_0__["createEventDispatcher"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getContext", function() { return _internal__WEBPACK_IMPORTED_MODULE_0__["getContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onDestroy", function() { return _internal__WEBPACK_IMPORTED_MODULE_0__["onDestroy"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "onMount", function() { return _internal__WEBPACK_IMPORTED_MODULE_0__["onMount"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "setContext", function() { return _internal__WEBPACK_IMPORTED_MODULE_0__["setContext"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tick", function() { return _internal__WEBPACK_IMPORTED_MODULE_0__["tick"]; });




/***/ }),

/***/ "./node_modules/svelte/internal/index.mjs":
/*!************************************************!*\
  !*** ./node_modules/svelte/internal/index.mjs ***!
  \************************************************/
/*! exports provided: HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HtmlTag", function() { return HtmlTag; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SvelteComponent", function() { return SvelteComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SvelteComponentDev", function() { return SvelteComponentDev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SvelteElement", function() { return SvelteElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "action_destroyer", function() { return action_destroyer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add_attribute", function() { return add_attribute; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add_classes", function() { return add_classes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add_flush_callback", function() { return add_flush_callback; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add_location", function() { return add_location; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add_render_callback", function() { return add_render_callback; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add_resize_listener", function() { return add_resize_listener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "add_transform", function() { return add_transform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "afterUpdate", function() { return afterUpdate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "append", function() { return append; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "append_dev", function() { return append_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "assign", function() { return assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attr", function() { return attr; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "attr_dev", function() { return attr_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "beforeUpdate", function() { return beforeUpdate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bind", function() { return bind; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "binding_callbacks", function() { return binding_callbacks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blank_object", function() { return blank_object; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bubble", function() { return bubble; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "check_outros", function() { return check_outros; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "children", function() { return children; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "claim_component", function() { return claim_component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "claim_element", function() { return claim_element; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "claim_space", function() { return claim_space; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "claim_text", function() { return claim_text; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clear_loops", function() { return clear_loops; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "component_subscribe", function() { return component_subscribe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compute_rest_props", function() { return compute_rest_props; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compute_slots", function() { return compute_slots; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEventDispatcher", function() { return createEventDispatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create_animation", function() { return create_animation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create_bidirectional_transition", function() { return create_bidirectional_transition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create_component", function() { return create_component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create_in_transition", function() { return create_in_transition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create_out_transition", function() { return create_out_transition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create_slot", function() { return create_slot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "create_ssr_component", function() { return create_ssr_component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "current_component", function() { return current_component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "custom_event", function() { return custom_event; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataset_dev", function() { return dataset_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return debug; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "destroy_block", function() { return destroy_block; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "destroy_component", function() { return destroy_component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "destroy_each", function() { return destroy_each; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detach", function() { return detach; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detach_after_dev", function() { return detach_after_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detach_before_dev", function() { return detach_before_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detach_between_dev", function() { return detach_between_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "detach_dev", function() { return detach_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dirty_components", function() { return dirty_components; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dispatch_dev", function() { return dispatch_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "each", function() { return each; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "element", function() { return element; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "element_is", function() { return element_is; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "empty", function() { return empty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "escape", function() { return escape; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "escaped", function() { return escaped; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exclude_internal_props", function() { return exclude_internal_props; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fix_and_destroy_block", function() { return fix_and_destroy_block; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fix_and_outro_and_destroy_block", function() { return fix_and_outro_and_destroy_block; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fix_position", function() { return fix_position; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "flush", function() { return flush; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getContext", function() { return getContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_binding_group_value", function() { return get_binding_group_value; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_current_component", function() { return get_current_component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_slot_changes", function() { return get_slot_changes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_slot_context", function() { return get_slot_context; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_spread_object", function() { return get_spread_object; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_spread_update", function() { return get_spread_update; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "get_store_value", function() { return get_store_value; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "globals", function() { return globals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "group_outros", function() { return group_outros; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "handle_promise", function() { return handle_promise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "has_prop", function() { return has_prop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insert", function() { return insert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "insert_dev", function() { return insert_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intros", function() { return intros; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "invalid_attribute_name_character", function() { return invalid_attribute_name_character; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "is_client", function() { return is_client; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "is_crossorigin", function() { return is_crossorigin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "is_empty", function() { return is_empty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "is_function", function() { return is_function; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "is_promise", function() { return is_promise; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listen", function() { return listen; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listen_dev", function() { return listen_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loop", function() { return loop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loop_guard", function() { return loop_guard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "missing_component", function() { return missing_component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mount_component", function() { return mount_component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "noop", function() { return noop; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "not_equal", function() { return not_equal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "now", function() { return now; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "null_to_empty", function() { return null_to_empty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "object_without_properties", function() { return object_without_properties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onDestroy", function() { return onDestroy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onMount", function() { return onMount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "once", function() { return once; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "outro_and_destroy_block", function() { return outro_and_destroy_block; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prevent_default", function() { return prevent_default; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "prop_dev", function() { return prop_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "query_selector_all", function() { return query_selector_all; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "raf", function() { return raf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "run", function() { return run; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "run_all", function() { return run_all; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "safe_not_equal", function() { return safe_not_equal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "schedule_update", function() { return schedule_update; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "select_multiple_value", function() { return select_multiple_value; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "select_option", function() { return select_option; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "select_options", function() { return select_options; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "select_value", function() { return select_value; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "self", function() { return self; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setContext", function() { return setContext; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_attributes", function() { return set_attributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_current_component", function() { return set_current_component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_custom_element_data", function() { return set_custom_element_data; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_data", function() { return set_data; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_data_dev", function() { return set_data_dev; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_input_type", function() { return set_input_type; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_input_value", function() { return set_input_value; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_now", function() { return set_now; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_raf", function() { return set_raf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_store_value", function() { return set_store_value; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_style", function() { return set_style; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "set_svg_attributes", function() { return set_svg_attributes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "space", function() { return space; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spread", function() { return spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stop_propagation", function() { return stop_propagation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscribe", function() { return subscribe; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "svg_element", function() { return svg_element; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "text", function() { return text; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tick", function() { return tick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "time_ranges_to_array", function() { return time_ranges_to_array; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "to_number", function() { return to_number; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toggle_class", function() { return toggle_class; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transition_in", function() { return transition_in; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transition_out", function() { return transition_out; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "update_keyed_each", function() { return update_keyed_each; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "update_slot", function() { return update_slot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validate_component", function() { return validate_component; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validate_each_argument", function() { return validate_each_argument; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validate_each_keys", function() { return validate_each_keys; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validate_slots", function() { return validate_slots; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validate_store", function() { return validate_store; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "xlink_attr", function() { return xlink_attr; });
function noop() { }
const identity = x => x;
function assign(tar, src) {
    // @ts-ignore
    for (const k in src)
        tar[k] = src[k];
    return tar;
}
function is_promise(value) {
    return value && typeof value === 'object' && typeof value.then === 'function';
}
function add_location(element, file, line, column, char) {
    element.__svelte_meta = {
        loc: { file, line, column, char }
    };
}
function run(fn) {
    return fn();
}
function blank_object() {
    return Object.create(null);
}
function run_all(fns) {
    fns.forEach(run);
}
function is_function(thing) {
    return typeof thing === 'function';
}
function safe_not_equal(a, b) {
    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
}
function not_equal(a, b) {
    return a != a ? b == b : a !== b;
}
function is_empty(obj) {
    return Object.keys(obj).length === 0;
}
function validate_store(store, name) {
    if (store != null && typeof store.subscribe !== 'function') {
        throw new Error(`'${name}' is not a store with a 'subscribe' method`);
    }
}
function subscribe(store, ...callbacks) {
    if (store == null) {
        return noop;
    }
    const unsub = store.subscribe(...callbacks);
    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function get_store_value(store) {
    let value;
    subscribe(store, _ => value = _)();
    return value;
}
function component_subscribe(component, store, callback) {
    component.$$.on_destroy.push(subscribe(store, callback));
}
function create_slot(definition, ctx, $$scope, fn) {
    if (definition) {
        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);
        return definition[0](slot_ctx);
    }
}
function get_slot_context(definition, ctx, $$scope, fn) {
    return definition[1] && fn
        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))
        : $$scope.ctx;
}
function get_slot_changes(definition, $$scope, dirty, fn) {
    if (definition[2] && fn) {
        const lets = definition[2](fn(dirty));
        if ($$scope.dirty === undefined) {
            return lets;
        }
        if (typeof lets === 'object') {
            const merged = [];
            const len = Math.max($$scope.dirty.length, lets.length);
            for (let i = 0; i < len; i += 1) {
                merged[i] = $$scope.dirty[i] | lets[i];
            }
            return merged;
        }
        return $$scope.dirty | lets;
    }
    return $$scope.dirty;
}
function update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {
    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);
    if (slot_changes) {
        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);
        slot.p(slot_context, slot_changes);
    }
}
function exclude_internal_props(props) {
    const result = {};
    for (const k in props)
        if (k[0] !== '$')
            result[k] = props[k];
    return result;
}
function compute_rest_props(props, keys) {
    const rest = {};
    keys = new Set(keys);
    for (const k in props)
        if (!keys.has(k) && k[0] !== '$')
            rest[k] = props[k];
    return rest;
}
function compute_slots(slots) {
    const result = {};
    for (const key in slots) {
        result[key] = true;
    }
    return result;
}
function once(fn) {
    let ran = false;
    return function (...args) {
        if (ran)
            return;
        ran = true;
        fn.call(this, ...args);
    };
}
function null_to_empty(value) {
    return value == null ? '' : value;
}
function set_store_value(store, ret, value = ret) {
    store.set(value);
    return ret;
}
const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);
function action_destroyer(action_result) {
    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;
}

const is_client = typeof window !== 'undefined';
let now = is_client
    ? () => window.performance.now()
    : () => Date.now();
let raf = is_client ? cb => requestAnimationFrame(cb) : noop;
// used internally for testing
function set_now(fn) {
    now = fn;
}
function set_raf(fn) {
    raf = fn;
}

const tasks = new Set();
function run_tasks(now) {
    tasks.forEach(task => {
        if (!task.c(now)) {
            tasks.delete(task);
            task.f();
        }
    });
    if (tasks.size !== 0)
        raf(run_tasks);
}
/**
 * For testing purposes only!
 */
function clear_loops() {
    tasks.clear();
}
/**
 * Creates a new task that runs on each raf frame
 * until it returns a falsy value or is aborted
 */
function loop(callback) {
    let task;
    if (tasks.size === 0)
        raf(run_tasks);
    return {
        promise: new Promise(fulfill => {
            tasks.add(task = { c: callback, f: fulfill });
        }),
        abort() {
            tasks.delete(task);
        }
    };
}

function append(target, node) {
    target.appendChild(node);
}
function insert(target, node, anchor) {
    target.insertBefore(node, anchor || null);
}
function detach(node) {
    node.parentNode.removeChild(node);
}
function destroy_each(iterations, detaching) {
    for (let i = 0; i < iterations.length; i += 1) {
        if (iterations[i])
            iterations[i].d(detaching);
    }
}
function element(name) {
    return document.createElement(name);
}
function element_is(name, is) {
    return document.createElement(name, { is });
}
function object_without_properties(obj, exclude) {
    const target = {};
    for (const k in obj) {
        if (has_prop(obj, k)
            // @ts-ignore
            && exclude.indexOf(k) === -1) {
            // @ts-ignore
            target[k] = obj[k];
        }
    }
    return target;
}
function svg_element(name) {
    return document.createElementNS('http://www.w3.org/2000/svg', name);
}
function text(data) {
    return document.createTextNode(data);
}
function space() {
    return text(' ');
}
function empty() {
    return text('');
}
function listen(node, event, handler, options) {
    node.addEventListener(event, handler, options);
    return () => node.removeEventListener(event, handler, options);
}
function prevent_default(fn) {
    return function (event) {
        event.preventDefault();
        // @ts-ignore
        return fn.call(this, event);
    };
}
function stop_propagation(fn) {
    return function (event) {
        event.stopPropagation();
        // @ts-ignore
        return fn.call(this, event);
    };
}
function self(fn) {
    return function (event) {
        // @ts-ignore
        if (event.target === this)
            fn.call(this, event);
    };
}
function attr(node, attribute, value) {
    if (value == null)
        node.removeAttribute(attribute);
    else if (node.getAttribute(attribute) !== value)
        node.setAttribute(attribute, value);
}
function set_attributes(node, attributes) {
    // @ts-ignore
    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);
    for (const key in attributes) {
        if (attributes[key] == null) {
            node.removeAttribute(key);
        }
        else if (key === 'style') {
            node.style.cssText = attributes[key];
        }
        else if (key === '__value') {
            node.value = node[key] = attributes[key];
        }
        else if (descriptors[key] && descriptors[key].set) {
            node[key] = attributes[key];
        }
        else {
            attr(node, key, attributes[key]);
        }
    }
}
function set_svg_attributes(node, attributes) {
    for (const key in attributes) {
        attr(node, key, attributes[key]);
    }
}
function set_custom_element_data(node, prop, value) {
    if (prop in node) {
        node[prop] = value;
    }
    else {
        attr(node, prop, value);
    }
}
function xlink_attr(node, attribute, value) {
    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);
}
function get_binding_group_value(group, __value, checked) {
    const value = new Set();
    for (let i = 0; i < group.length; i += 1) {
        if (group[i].checked)
            value.add(group[i].__value);
    }
    if (!checked) {
        value.delete(__value);
    }
    return Array.from(value);
}
function to_number(value) {
    return value === '' ? null : +value;
}
function time_ranges_to_array(ranges) {
    const array = [];
    for (let i = 0; i < ranges.length; i += 1) {
        array.push({ start: ranges.start(i), end: ranges.end(i) });
    }
    return array;
}
function children(element) {
    return Array.from(element.childNodes);
}
function claim_element(nodes, name, attributes, svg) {
    for (let i = 0; i < nodes.length; i += 1) {
        const node = nodes[i];
        if (node.nodeName === name) {
            let j = 0;
            const remove = [];
            while (j < node.attributes.length) {
                const attribute = node.attributes[j++];
                if (!attributes[attribute.name]) {
                    remove.push(attribute.name);
                }
            }
            for (let k = 0; k < remove.length; k++) {
                node.removeAttribute(remove[k]);
            }
            return nodes.splice(i, 1)[0];
        }
    }
    return svg ? svg_element(name) : element(name);
}
function claim_text(nodes, data) {
    for (let i = 0; i < nodes.length; i += 1) {
        const node = nodes[i];
        if (node.nodeType === 3) {
            node.data = '' + data;
            return nodes.splice(i, 1)[0];
        }
    }
    return text(data);
}
function claim_space(nodes) {
    return claim_text(nodes, ' ');
}
function set_data(text, data) {
    data = '' + data;
    if (text.wholeText !== data)
        text.data = data;
}
function set_input_value(input, value) {
    input.value = value == null ? '' : value;
}
function set_input_type(input, type) {
    try {
        input.type = type;
    }
    catch (e) {
        // do nothing
    }
}
function set_style(node, key, value, important) {
    node.style.setProperty(key, value, important ? 'important' : '');
}
function select_option(select, value) {
    for (let i = 0; i < select.options.length; i += 1) {
        const option = select.options[i];
        if (option.__value === value) {
            option.selected = true;
            return;
        }
    }
}
function select_options(select, value) {
    for (let i = 0; i < select.options.length; i += 1) {
        const option = select.options[i];
        option.selected = ~value.indexOf(option.__value);
    }
}
function select_value(select) {
    const selected_option = select.querySelector(':checked') || select.options[0];
    return selected_option && selected_option.__value;
}
function select_multiple_value(select) {
    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);
}
// unfortunately this can't be a constant as that wouldn't be tree-shakeable
// so we cache the result instead
let crossorigin;
function is_crossorigin() {
    if (crossorigin === undefined) {
        crossorigin = false;
        try {
            if (typeof window !== 'undefined' && window.parent) {
                void window.parent.document;
            }
        }
        catch (error) {
            crossorigin = true;
        }
    }
    return crossorigin;
}
function add_resize_listener(node, fn) {
    const computed_style = getComputedStyle(node);
    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;
    if (computed_style.position === 'static') {
        node.style.position = 'relative';
    }
    const iframe = element('iframe');
    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +
        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);
    iframe.setAttribute('aria-hidden', 'true');
    iframe.tabIndex = -1;
    const crossorigin = is_crossorigin();
    let unsubscribe;
    if (crossorigin) {
        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;
        unsubscribe = listen(window, 'message', (event) => {
            if (event.source === iframe.contentWindow)
                fn();
        });
    }
    else {
        iframe.src = 'about:blank';
        iframe.onload = () => {
            unsubscribe = listen(iframe.contentWindow, 'resize', fn);
        };
    }
    append(node, iframe);
    return () => {
        if (crossorigin) {
            unsubscribe();
        }
        else if (unsubscribe && iframe.contentWindow) {
            unsubscribe();
        }
        detach(iframe);
    };
}
function toggle_class(element, name, toggle) {
    element.classList[toggle ? 'add' : 'remove'](name);
}
function custom_event(type, detail) {
    const e = document.createEvent('CustomEvent');
    e.initCustomEvent(type, false, false, detail);
    return e;
}
function query_selector_all(selector, parent = document.body) {
    return Array.from(parent.querySelectorAll(selector));
}
class HtmlTag {
    constructor(anchor = null) {
        this.a = anchor;
        this.e = this.n = null;
    }
    m(html, target, anchor = null) {
        if (!this.e) {
            this.e = element(target.nodeName);
            this.t = target;
            this.h(html);
        }
        this.i(anchor);
    }
    h(html) {
        this.e.innerHTML = html;
        this.n = Array.from(this.e.childNodes);
    }
    i(anchor) {
        for (let i = 0; i < this.n.length; i += 1) {
            insert(this.t, this.n[i], anchor);
        }
    }
    p(html) {
        this.d();
        this.h(html);
        this.i(this.a);
    }
    d() {
        this.n.forEach(detach);
    }
}

const active_docs = new Set();
let active = 0;
// https://github.com/darkskyapp/string-hash/blob/master/index.js
function hash(str) {
    let hash = 5381;
    let i = str.length;
    while (i--)
        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);
    return hash >>> 0;
}
function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {
    const step = 16.666 / duration;
    let keyframes = '{\n';
    for (let p = 0; p <= 1; p += step) {
        const t = a + (b - a) * ease(p);
        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\n`;
    }
    const rule = keyframes + `100% {${fn(b, 1 - b)}}\n}`;
    const name = `__svelte_${hash(rule)}_${uid}`;
    const doc = node.ownerDocument;
    active_docs.add(doc);
    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);
    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});
    if (!current_rules[name]) {
        current_rules[name] = true;
        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);
    }
    const animation = node.style.animation || '';
    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;
    active += 1;
    return name;
}
function delete_rule(node, name) {
    const previous = (node.style.animation || '').split(', ');
    const next = previous.filter(name
        ? anim => anim.indexOf(name) < 0 // remove specific animation
        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations
    );
    const deleted = previous.length - next.length;
    if (deleted) {
        node.style.animation = next.join(', ');
        active -= deleted;
        if (!active)
            clear_rules();
    }
}
function clear_rules() {
    raf(() => {
        if (active)
            return;
        active_docs.forEach(doc => {
            const stylesheet = doc.__svelte_stylesheet;
            let i = stylesheet.cssRules.length;
            while (i--)
                stylesheet.deleteRule(i);
            doc.__svelte_rules = {};
        });
        active_docs.clear();
    });
}

function create_animation(node, from, fn, params) {
    if (!from)
        return noop;
    const to = node.getBoundingClientRect();
    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)
        return noop;
    const { delay = 0, duration = 300, easing = identity, 
    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?
    start: start_time = now() + delay, 
    // @ts-ignore todo:
    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);
    let running = true;
    let started = false;
    let name;
    function start() {
        if (css) {
            name = create_rule(node, 0, 1, duration, delay, easing, css);
        }
        if (!delay) {
            started = true;
        }
    }
    function stop() {
        if (css)
            delete_rule(node, name);
        running = false;
    }
    loop(now => {
        if (!started && now >= start_time) {
            started = true;
        }
        if (started && now >= end) {
            tick(1, 0);
            stop();
        }
        if (!running) {
            return false;
        }
        if (started) {
            const p = now - start_time;
            const t = 0 + 1 * easing(p / duration);
            tick(t, 1 - t);
        }
        return true;
    });
    start();
    tick(0, 1);
    return stop;
}
function fix_position(node) {
    const style = getComputedStyle(node);
    if (style.position !== 'absolute' && style.position !== 'fixed') {
        const { width, height } = style;
        const a = node.getBoundingClientRect();
        node.style.position = 'absolute';
        node.style.width = width;
        node.style.height = height;
        add_transform(node, a);
    }
}
function add_transform(node, a) {
    const b = node.getBoundingClientRect();
    if (a.left !== b.left || a.top !== b.top) {
        const style = getComputedStyle(node);
        const transform = style.transform === 'none' ? '' : style.transform;
        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;
    }
}

let current_component;
function set_current_component(component) {
    current_component = component;
}
function get_current_component() {
    if (!current_component)
        throw new Error(`Function called outside component initialization`);
    return current_component;
}
function beforeUpdate(fn) {
    get_current_component().$$.before_update.push(fn);
}
function onMount(fn) {
    get_current_component().$$.on_mount.push(fn);
}
function afterUpdate(fn) {
    get_current_component().$$.after_update.push(fn);
}
function onDestroy(fn) {
    get_current_component().$$.on_destroy.push(fn);
}
function createEventDispatcher() {
    const component = get_current_component();
    return (type, detail) => {
        const callbacks = component.$$.callbacks[type];
        if (callbacks) {
            // TODO are there situations where events could be dispatched
            // in a server (non-DOM) environment?
            const event = custom_event(type, detail);
            callbacks.slice().forEach(fn => {
                fn.call(component, event);
            });
        }
    };
}
function setContext(key, context) {
    get_current_component().$$.context.set(key, context);
}
function getContext(key) {
    return get_current_component().$$.context.get(key);
}
// TODO figure out if we still want to support
// shorthand events, or if we want to implement
// a real bubbling mechanism
function bubble(component, event) {
    const callbacks = component.$$.callbacks[event.type];
    if (callbacks) {
        callbacks.slice().forEach(fn => fn(event));
    }
}

const dirty_components = [];
const intros = { enabled: false };
const binding_callbacks = [];
const render_callbacks = [];
const flush_callbacks = [];
const resolved_promise = Promise.resolve();
let update_scheduled = false;
function schedule_update() {
    if (!update_scheduled) {
        update_scheduled = true;
        resolved_promise.then(flush);
    }
}
function tick() {
    schedule_update();
    return resolved_promise;
}
function add_render_callback(fn) {
    render_callbacks.push(fn);
}
function add_flush_callback(fn) {
    flush_callbacks.push(fn);
}
let flushing = false;
const seen_callbacks = new Set();
function flush() {
    if (flushing)
        return;
    flushing = true;
    do {
        // first, call beforeUpdate functions
        // and update components
        for (let i = 0; i < dirty_components.length; i += 1) {
            const component = dirty_components[i];
            set_current_component(component);
            update(component.$$);
        }
        set_current_component(null);
        dirty_components.length = 0;
        while (binding_callbacks.length)
            binding_callbacks.pop()();
        // then, once components are updated, call
        // afterUpdate functions. This may cause
        // subsequent updates...
        for (let i = 0; i < render_callbacks.length; i += 1) {
            const callback = render_callbacks[i];
            if (!seen_callbacks.has(callback)) {
                // ...so guard against infinite loops
                seen_callbacks.add(callback);
                callback();
            }
        }
        render_callbacks.length = 0;
    } while (dirty_components.length);
    while (flush_callbacks.length) {
        flush_callbacks.pop()();
    }
    update_scheduled = false;
    flushing = false;
    seen_callbacks.clear();
}
function update($$) {
    if ($$.fragment !== null) {
        $$.update();
        run_all($$.before_update);
        const dirty = $$.dirty;
        $$.dirty = [-1];
        $$.fragment && $$.fragment.p($$.ctx, dirty);
        $$.after_update.forEach(add_render_callback);
    }
}

let promise;
function wait() {
    if (!promise) {
        promise = Promise.resolve();
        promise.then(() => {
            promise = null;
        });
    }
    return promise;
}
function dispatch(node, direction, kind) {
    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));
}
const outroing = new Set();
let outros;
function group_outros() {
    outros = {
        r: 0,
        c: [],
        p: outros // parent group
    };
}
function check_outros() {
    if (!outros.r) {
        run_all(outros.c);
    }
    outros = outros.p;
}
function transition_in(block, local) {
    if (block && block.i) {
        outroing.delete(block);
        block.i(local);
    }
}
function transition_out(block, local, detach, callback) {
    if (block && block.o) {
        if (outroing.has(block))
            return;
        outroing.add(block);
        outros.c.push(() => {
            outroing.delete(block);
            if (callback) {
                if (detach)
                    block.d(1);
                callback();
            }
        });
        block.o(local);
    }
}
const null_transition = { duration: 0 };
function create_in_transition(node, fn, params) {
    let config = fn(node, params);
    let running = false;
    let animation_name;
    let task;
    let uid = 0;
    function cleanup() {
        if (animation_name)
            delete_rule(node, animation_name);
    }
    function go() {
        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;
        if (css)
            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);
        tick(0, 1);
        const start_time = now() + delay;
        const end_time = start_time + duration;
        if (task)
            task.abort();
        running = true;
        add_render_callback(() => dispatch(node, true, 'start'));
        task = loop(now => {
            if (running) {
                if (now >= end_time) {
                    tick(1, 0);
                    dispatch(node, true, 'end');
                    cleanup();
                    return running = false;
                }
                if (now >= start_time) {
                    const t = easing((now - start_time) / duration);
                    tick(t, 1 - t);
                }
            }
            return running;
        });
    }
    let started = false;
    return {
        start() {
            if (started)
                return;
            delete_rule(node);
            if (is_function(config)) {
                config = config();
                wait().then(go);
            }
            else {
                go();
            }
        },
        invalidate() {
            started = false;
        },
        end() {
            if (running) {
                cleanup();
                running = false;
            }
        }
    };
}
function create_out_transition(node, fn, params) {
    let config = fn(node, params);
    let running = true;
    let animation_name;
    const group = outros;
    group.r += 1;
    function go() {
        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;
        if (css)
            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);
        const start_time = now() + delay;
        const end_time = start_time + duration;
        add_render_callback(() => dispatch(node, false, 'start'));
        loop(now => {
            if (running) {
                if (now >= end_time) {
                    tick(0, 1);
                    dispatch(node, false, 'end');
                    if (!--group.r) {
                        // this will result in `end()` being called,
                        // so we don't need to clean up here
                        run_all(group.c);
                    }
                    return false;
                }
                if (now >= start_time) {
                    const t = easing((now - start_time) / duration);
                    tick(1 - t, t);
                }
            }
            return running;
        });
    }
    if (is_function(config)) {
        wait().then(() => {
            // @ts-ignore
            config = config();
            go();
        });
    }
    else {
        go();
    }
    return {
        end(reset) {
            if (reset && config.tick) {
                config.tick(1, 0);
            }
            if (running) {
                if (animation_name)
                    delete_rule(node, animation_name);
                running = false;
            }
        }
    };
}
function create_bidirectional_transition(node, fn, params, intro) {
    let config = fn(node, params);
    let t = intro ? 0 : 1;
    let running_program = null;
    let pending_program = null;
    let animation_name = null;
    function clear_animation() {
        if (animation_name)
            delete_rule(node, animation_name);
    }
    function init(program, duration) {
        const d = program.b - t;
        duration *= Math.abs(d);
        return {
            a: t,
            b: program.b,
            d,
            duration,
            start: program.start,
            end: program.start + duration,
            group: program.group
        };
    }
    function go(b) {
        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;
        const program = {
            start: now() + delay,
            b
        };
        if (!b) {
            // @ts-ignore todo: improve typings
            program.group = outros;
            outros.r += 1;
        }
        if (running_program || pending_program) {
            pending_program = program;
        }
        else {
            // if this is an intro, and there's a delay, we need to do
            // an initial tick and/or apply CSS animation immediately
            if (css) {
                clear_animation();
                animation_name = create_rule(node, t, b, duration, delay, easing, css);
            }
            if (b)
                tick(0, 1);
            running_program = init(program, duration);
            add_render_callback(() => dispatch(node, b, 'start'));
            loop(now => {
                if (pending_program && now > pending_program.start) {
                    running_program = init(pending_program, duration);
                    pending_program = null;
                    dispatch(node, running_program.b, 'start');
                    if (css) {
                        clear_animation();
                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);
                    }
                }
                if (running_program) {
                    if (now >= running_program.end) {
                        tick(t = running_program.b, 1 - t);
                        dispatch(node, running_program.b, 'end');
                        if (!pending_program) {
                            // we're done
                            if (running_program.b) {
                                // intro — we can tidy up immediately
                                clear_animation();
                            }
                            else {
                                // outro — needs to be coordinated
                                if (!--running_program.group.r)
                                    run_all(running_program.group.c);
                            }
                        }
                        running_program = null;
                    }
                    else if (now >= running_program.start) {
                        const p = now - running_program.start;
                        t = running_program.a + running_program.d * easing(p / running_program.duration);
                        tick(t, 1 - t);
                    }
                }
                return !!(running_program || pending_program);
            });
        }
    }
    return {
        run(b) {
            if (is_function(config)) {
                wait().then(() => {
                    // @ts-ignore
                    config = config();
                    go(b);
                });
            }
            else {
                go(b);
            }
        },
        end() {
            clear_animation();
            running_program = pending_program = null;
        }
    };
}

function handle_promise(promise, info) {
    const token = info.token = {};
    function update(type, index, key, value) {
        if (info.token !== token)
            return;
        info.resolved = value;
        let child_ctx = info.ctx;
        if (key !== undefined) {
            child_ctx = child_ctx.slice();
            child_ctx[key] = value;
        }
        const block = type && (info.current = type)(child_ctx);
        let needs_flush = false;
        if (info.block) {
            if (info.blocks) {
                info.blocks.forEach((block, i) => {
                    if (i !== index && block) {
                        group_outros();
                        transition_out(block, 1, 1, () => {
                            info.blocks[i] = null;
                        });
                        check_outros();
                    }
                });
            }
            else {
                info.block.d(1);
            }
            block.c();
            transition_in(block, 1);
            block.m(info.mount(), info.anchor);
            needs_flush = true;
        }
        info.block = block;
        if (info.blocks)
            info.blocks[index] = block;
        if (needs_flush) {
            flush();
        }
    }
    if (is_promise(promise)) {
        const current_component = get_current_component();
        promise.then(value => {
            set_current_component(current_component);
            update(info.then, 1, info.value, value);
            set_current_component(null);
        }, error => {
            set_current_component(current_component);
            update(info.catch, 2, info.error, error);
            set_current_component(null);
            if (!info.hasCatch) {
                throw error;
            }
        });
        // if we previously had a then/catch block, destroy it
        if (info.current !== info.pending) {
            update(info.pending, 0);
            return true;
        }
    }
    else {
        if (info.current !== info.then) {
            update(info.then, 1, info.value, promise);
            return true;
        }
        info.resolved = promise;
    }
}

const globals = (typeof window !== 'undefined'
    ? window
    : typeof globalThis !== 'undefined'
        ? globalThis
        : global);

function destroy_block(block, lookup) {
    block.d(1);
    lookup.delete(block.key);
}
function outro_and_destroy_block(block, lookup) {
    transition_out(block, 1, 1, () => {
        lookup.delete(block.key);
    });
}
function fix_and_destroy_block(block, lookup) {
    block.f();
    destroy_block(block, lookup);
}
function fix_and_outro_and_destroy_block(block, lookup) {
    block.f();
    outro_and_destroy_block(block, lookup);
}
function update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {
    let o = old_blocks.length;
    let n = list.length;
    let i = o;
    const old_indexes = {};
    while (i--)
        old_indexes[old_blocks[i].key] = i;
    const new_blocks = [];
    const new_lookup = new Map();
    const deltas = new Map();
    i = n;
    while (i--) {
        const child_ctx = get_context(ctx, list, i);
        const key = get_key(child_ctx);
        let block = lookup.get(key);
        if (!block) {
            block = create_each_block(key, child_ctx);
            block.c();
        }
        else if (dynamic) {
            block.p(child_ctx, dirty);
        }
        new_lookup.set(key, new_blocks[i] = block);
        if (key in old_indexes)
            deltas.set(key, Math.abs(i - old_indexes[key]));
    }
    const will_move = new Set();
    const did_move = new Set();
    function insert(block) {
        transition_in(block, 1);
        block.m(node, next);
        lookup.set(block.key, block);
        next = block.first;
        n--;
    }
    while (o && n) {
        const new_block = new_blocks[n - 1];
        const old_block = old_blocks[o - 1];
        const new_key = new_block.key;
        const old_key = old_block.key;
        if (new_block === old_block) {
            // do nothing
            next = new_block.first;
            o--;
            n--;
        }
        else if (!new_lookup.has(old_key)) {
            // remove old block
            destroy(old_block, lookup);
            o--;
        }
        else if (!lookup.has(new_key) || will_move.has(new_key)) {
            insert(new_block);
        }
        else if (did_move.has(old_key)) {
            o--;
        }
        else if (deltas.get(new_key) > deltas.get(old_key)) {
            did_move.add(new_key);
            insert(new_block);
        }
        else {
            will_move.add(old_key);
            o--;
        }
    }
    while (o--) {
        const old_block = old_blocks[o];
        if (!new_lookup.has(old_block.key))
            destroy(old_block, lookup);
    }
    while (n)
        insert(new_blocks[n - 1]);
    return new_blocks;
}
function validate_each_keys(ctx, list, get_context, get_key) {
    const keys = new Set();
    for (let i = 0; i < list.length; i++) {
        const key = get_key(get_context(ctx, list, i));
        if (keys.has(key)) {
            throw new Error(`Cannot have duplicate keys in a keyed each`);
        }
        keys.add(key);
    }
}

function get_spread_update(levels, updates) {
    const update = {};
    const to_null_out = {};
    const accounted_for = { $$scope: 1 };
    let i = levels.length;
    while (i--) {
        const o = levels[i];
        const n = updates[i];
        if (n) {
            for (const key in o) {
                if (!(key in n))
                    to_null_out[key] = 1;
            }
            for (const key in n) {
                if (!accounted_for[key]) {
                    update[key] = n[key];
                    accounted_for[key] = 1;
                }
            }
            levels[i] = n;
        }
        else {
            for (const key in o) {
                accounted_for[key] = 1;
            }
        }
    }
    for (const key in to_null_out) {
        if (!(key in update))
            update[key] = undefined;
    }
    return update;
}
function get_spread_object(spread_props) {
    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};
}

// source: https://html.spec.whatwg.org/multipage/indices.html
const boolean_attributes = new Set([
    'allowfullscreen',
    'allowpaymentrequest',
    'async',
    'autofocus',
    'autoplay',
    'checked',
    'controls',
    'default',
    'defer',
    'disabled',
    'formnovalidate',
    'hidden',
    'ismap',
    'loop',
    'multiple',
    'muted',
    'nomodule',
    'novalidate',
    'open',
    'playsinline',
    'readonly',
    'required',
    'reversed',
    'selected'
]);

const invalid_attribute_name_character = /[\s'">/=\u{FDD0}-\u{FDEF}\u{FFFE}\u{FFFF}\u{1FFFE}\u{1FFFF}\u{2FFFE}\u{2FFFF}\u{3FFFE}\u{3FFFF}\u{4FFFE}\u{4FFFF}\u{5FFFE}\u{5FFFF}\u{6FFFE}\u{6FFFF}\u{7FFFE}\u{7FFFF}\u{8FFFE}\u{8FFFF}\u{9FFFE}\u{9FFFF}\u{AFFFE}\u{AFFFF}\u{BFFFE}\u{BFFFF}\u{CFFFE}\u{CFFFF}\u{DFFFE}\u{DFFFF}\u{EFFFE}\u{EFFFF}\u{FFFFE}\u{FFFFF}\u{10FFFE}\u{10FFFF}]/u;
// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
// https://infra.spec.whatwg.org/#noncharacter
function spread(args, classes_to_add) {
    const attributes = Object.assign({}, ...args);
    if (classes_to_add) {
        if (attributes.class == null) {
            attributes.class = classes_to_add;
        }
        else {
            attributes.class += ' ' + classes_to_add;
        }
    }
    let str = '';
    Object.keys(attributes).forEach(name => {
        if (invalid_attribute_name_character.test(name))
            return;
        const value = attributes[name];
        if (value === true)
            str += " " + name;
        else if (boolean_attributes.has(name.toLowerCase())) {
            if (value)
                str += " " + name;
        }
        else if (value != null) {
            str += ` ${name}="${String(value).replace(/"/g, '&#34;').replace(/'/g, '&#39;')}"`;
        }
    });
    return str;
}
const escaped = {
    '"': '&quot;',
    "'": '&#39;',
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;'
};
function escape(html) {
    return String(html).replace(/["'&<>]/g, match => escaped[match]);
}
function each(items, fn) {
    let str = '';
    for (let i = 0; i < items.length; i += 1) {
        str += fn(items[i], i);
    }
    return str;
}
const missing_component = {
    $$render: () => ''
};
function validate_component(component, name) {
    if (!component || !component.$$render) {
        if (name === 'svelte:component')
            name += ' this={...}';
        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
    }
    return component;
}
function debug(file, line, column, values) {
    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console
    console.log(values); // eslint-disable-line no-console
    return '';
}
let on_destroy;
function create_ssr_component(fn) {
    function $$render(result, props, bindings, slots) {
        const parent_component = current_component;
        const $$ = {
            on_destroy,
            context: new Map(parent_component ? parent_component.$$.context : []),
            // these will be immediately discarded
            on_mount: [],
            before_update: [],
            after_update: [],
            callbacks: blank_object()
        };
        set_current_component({ $$ });
        const html = fn(result, props, bindings, slots);
        set_current_component(parent_component);
        return html;
    }
    return {
        render: (props = {}, options = {}) => {
            on_destroy = [];
            const result = { title: '', head: '', css: new Set() };
            const html = $$render(result, props, {}, options);
            run_all(on_destroy);
            return {
                html,
                css: {
                    code: Array.from(result.css).map(css => css.code).join('\n'),
                    map: null // TODO
                },
                head: result.title + result.head
            };
        },
        $$render
    };
}
function add_attribute(name, value, boolean) {
    if (value == null || (boolean && !value))
        return '';
    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}
function add_classes(classes) {
    return classes ? ` class="${classes}"` : ``;
}

function bind(component, name, callback) {
    const index = component.$$.props[name];
    if (index !== undefined) {
        component.$$.bound[index] = callback;
        callback(component.$$.ctx[index]);
    }
}
function create_component(block) {
    block && block.c();
}
function claim_component(block, parent_nodes) {
    block && block.l(parent_nodes);
}
function mount_component(component, target, anchor) {
    const { fragment, on_mount, on_destroy, after_update } = component.$$;
    fragment && fragment.m(target, anchor);
    // onMount happens before the initial afterUpdate
    add_render_callback(() => {
        const new_on_destroy = on_mount.map(run).filter(is_function);
        if (on_destroy) {
            on_destroy.push(...new_on_destroy);
        }
        else {
            // Edge case - component was destroyed immediately,
            // most likely as a result of a binding initialising
            run_all(new_on_destroy);
        }
        component.$$.on_mount = [];
    });
    after_update.forEach(add_render_callback);
}
function destroy_component(component, detaching) {
    const $$ = component.$$;
    if ($$.fragment !== null) {
        run_all($$.on_destroy);
        $$.fragment && $$.fragment.d(detaching);
        // TODO null out other refs, including component.$$ (but need to
        // preserve final state?)
        $$.on_destroy = $$.fragment = null;
        $$.ctx = [];
    }
}
function make_dirty(component, i) {
    if (component.$$.dirty[0] === -1) {
        dirty_components.push(component);
        schedule_update();
        component.$$.dirty.fill(0);
    }
    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));
}
function init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {
    const parent_component = current_component;
    set_current_component(component);
    const prop_values = options.props || {};
    const $$ = component.$$ = {
        fragment: null,
        ctx: null,
        // state
        props,
        update: noop,
        not_equal,
        bound: blank_object(),
        // lifecycle
        on_mount: [],
        on_destroy: [],
        before_update: [],
        after_update: [],
        context: new Map(parent_component ? parent_component.$$.context : []),
        // everything else
        callbacks: blank_object(),
        dirty,
        skip_bound: false
    };
    let ready = false;
    $$.ctx = instance
        ? instance(component, prop_values, (i, ret, ...rest) => {
            const value = rest.length ? rest[0] : ret;
            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
                if (!$$.skip_bound && $$.bound[i])
                    $$.bound[i](value);
                if (ready)
                    make_dirty(component, i);
            }
            return ret;
        })
        : [];
    $$.update();
    ready = true;
    run_all($$.before_update);
    // `false` as a special case of no DOM component
    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;
    if (options.target) {
        if (options.hydrate) {
            const nodes = children(options.target);
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            $$.fragment && $$.fragment.l(nodes);
            nodes.forEach(detach);
        }
        else {
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            $$.fragment && $$.fragment.c();
        }
        if (options.intro)
            transition_in(component.$$.fragment);
        mount_component(component, options.target, options.anchor);
        flush();
    }
    set_current_component(parent_component);
}
let SvelteElement;
if (typeof HTMLElement === 'function') {
    SvelteElement = class extends HTMLElement {
        constructor() {
            super();
            this.attachShadow({ mode: 'open' });
        }
        connectedCallback() {
            // @ts-ignore todo: improve typings
            for (const key in this.$$.slotted) {
                // @ts-ignore todo: improve typings
                this.appendChild(this.$$.slotted[key]);
            }
        }
        attributeChangedCallback(attr, _oldValue, newValue) {
            this[attr] = newValue;
        }
        $destroy() {
            destroy_component(this, 1);
            this.$destroy = noop;
        }
        $on(type, callback) {
            // TODO should this delegate to addEventListener?
            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
            callbacks.push(callback);
            return () => {
                const index = callbacks.indexOf(callback);
                if (index !== -1)
                    callbacks.splice(index, 1);
            };
        }
        $set($$props) {
            if (this.$$set && !is_empty($$props)) {
                this.$$.skip_bound = true;
                this.$$set($$props);
                this.$$.skip_bound = false;
            }
        }
    };
}
class SvelteComponent {
    $destroy() {
        destroy_component(this, 1);
        this.$destroy = noop;
    }
    $on(type, callback) {
        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
        callbacks.push(callback);
        return () => {
            const index = callbacks.indexOf(callback);
            if (index !== -1)
                callbacks.splice(index, 1);
        };
    }
    $set($$props) {
        if (this.$$set && !is_empty($$props)) {
            this.$$.skip_bound = true;
            this.$$set($$props);
            this.$$.skip_bound = false;
        }
    }
}

function dispatch_dev(type, detail) {
    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.0' }, detail)));
}
function append_dev(target, node) {
    dispatch_dev("SvelteDOMInsert", { target, node });
    append(target, node);
}
function insert_dev(target, node, anchor) {
    dispatch_dev("SvelteDOMInsert", { target, node, anchor });
    insert(target, node, anchor);
}
function detach_dev(node) {
    dispatch_dev("SvelteDOMRemove", { node });
    detach(node);
}
function detach_between_dev(before, after) {
    while (before.nextSibling && before.nextSibling !== after) {
        detach_dev(before.nextSibling);
    }
}
function detach_before_dev(after) {
    while (after.previousSibling) {
        detach_dev(after.previousSibling);
    }
}
function detach_after_dev(before) {
    while (before.nextSibling) {
        detach_dev(before.nextSibling);
    }
}
function listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {
    const modifiers = options === true ? ["capture"] : options ? Array.from(Object.keys(options)) : [];
    if (has_prevent_default)
        modifiers.push('preventDefault');
    if (has_stop_propagation)
        modifiers.push('stopPropagation');
    dispatch_dev("SvelteDOMAddEventListener", { node, event, handler, modifiers });
    const dispose = listen(node, event, handler, options);
    return () => {
        dispatch_dev("SvelteDOMRemoveEventListener", { node, event, handler, modifiers });
        dispose();
    };
}
function attr_dev(node, attribute, value) {
    attr(node, attribute, value);
    if (value == null)
        dispatch_dev("SvelteDOMRemoveAttribute", { node, attribute });
    else
        dispatch_dev("SvelteDOMSetAttribute", { node, attribute, value });
}
function prop_dev(node, property, value) {
    node[property] = value;
    dispatch_dev("SvelteDOMSetProperty", { node, property, value });
}
function dataset_dev(node, property, value) {
    node.dataset[property] = value;
    dispatch_dev("SvelteDOMSetDataset", { node, property, value });
}
function set_data_dev(text, data) {
    data = '' + data;
    if (text.wholeText === data)
        return;
    dispatch_dev("SvelteDOMSetData", { node: text, data });
    text.data = data;
}
function validate_each_argument(arg) {
    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {
        let msg = '{#each} only iterates over array-like objects.';
        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {
            msg += ' You can use a spread to convert this iterable into an array.';
        }
        throw new Error(msg);
    }
}
function validate_slots(name, slot, keys) {
    for (const slot_key of Object.keys(slot)) {
        if (!~keys.indexOf(slot_key)) {
            console.warn(`<${name}> received an unexpected slot "${slot_key}".`);
        }
    }
}
class SvelteComponentDev extends SvelteComponent {
    constructor(options) {
        if (!options || (!options.target && !options.$$inline)) {
            throw new Error(`'target' is a required option`);
        }
        super();
    }
    $destroy() {
        super.$destroy();
        this.$destroy = () => {
            console.warn(`Component was already destroyed`); // eslint-disable-line no-console
        };
    }
    $capture_state() { }
    $inject_state() { }
}
function loop_guard(timeout) {
    const start = Date.now();
    return () => {
        if (Date.now() - start > timeout) {
            throw new Error(`Infinite loop detected`);
        }
    };
}




/***/ }),

/***/ "./node_modules/svelte/store/index.mjs":
/*!*********************************************!*\
  !*** ./node_modules/svelte/store/index.mjs ***!
  \*********************************************/
/*! exports provided: get, derived, readable, writable */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "derived", function() { return derived; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "readable", function() { return readable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "writable", function() { return writable; });
/* harmony import */ var _internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal */ "./node_modules/svelte/internal/index.mjs");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "get", function() { return _internal__WEBPACK_IMPORTED_MODULE_0__["get_store_value"]; });




const subscriber_queue = [];
/**
 * Creates a `Readable` store that allows reading by subscription.
 * @param value initial value
 * @param {StartStopNotifier}start start and stop notifications for subscriptions
 */
function readable(value, start) {
    return {
        subscribe: writable(value, start).subscribe
    };
}
/**
 * Create a `Writable` store that allows both updating and reading by subscription.
 * @param {*=}value initial value
 * @param {StartStopNotifier=}start start and stop notifications for subscriptions
 */
function writable(value, start = _internal__WEBPACK_IMPORTED_MODULE_0__["noop"]) {
    let stop;
    const subscribers = [];
    function set(new_value) {
        if (Object(_internal__WEBPACK_IMPORTED_MODULE_0__["safe_not_equal"])(value, new_value)) {
            value = new_value;
            if (stop) { // store is ready
                const run_queue = !subscriber_queue.length;
                for (let i = 0; i < subscribers.length; i += 1) {
                    const s = subscribers[i];
                    s[1]();
                    subscriber_queue.push(s, value);
                }
                if (run_queue) {
                    for (let i = 0; i < subscriber_queue.length; i += 2) {
                        subscriber_queue[i][0](subscriber_queue[i + 1]);
                    }
                    subscriber_queue.length = 0;
                }
            }
        }
    }
    function update(fn) {
        set(fn(value));
    }
    function subscribe(run, invalidate = _internal__WEBPACK_IMPORTED_MODULE_0__["noop"]) {
        const subscriber = [run, invalidate];
        subscribers.push(subscriber);
        if (subscribers.length === 1) {
            stop = start(set) || _internal__WEBPACK_IMPORTED_MODULE_0__["noop"];
        }
        run(value);
        return () => {
            const index = subscribers.indexOf(subscriber);
            if (index !== -1) {
                subscribers.splice(index, 1);
            }
            if (subscribers.length === 0) {
                stop();
                stop = null;
            }
        };
    }
    return { set, update, subscribe };
}
function derived(stores, fn, initial_value) {
    const single = !Array.isArray(stores);
    const stores_array = single
        ? [stores]
        : stores;
    const auto = fn.length < 2;
    return readable(initial_value, (set) => {
        let inited = false;
        const values = [];
        let pending = 0;
        let cleanup = _internal__WEBPACK_IMPORTED_MODULE_0__["noop"];
        const sync = () => {
            if (pending) {
                return;
            }
            cleanup();
            const result = fn(single ? values[0] : values, set);
            if (auto) {
                set(result);
            }
            else {
                cleanup = Object(_internal__WEBPACK_IMPORTED_MODULE_0__["is_function"])(result) ? result : _internal__WEBPACK_IMPORTED_MODULE_0__["noop"];
            }
        };
        const unsubscribers = stores_array.map((store, i) => Object(_internal__WEBPACK_IMPORTED_MODULE_0__["subscribe"])(store, (value) => {
            values[i] = value;
            pending &= ~(1 << i);
            if (inited) {
                sync();
            }
        }, () => {
            pending |= (1 << i);
        }));
        inited = true;
        sync();
        return function stop() {
            Object(_internal__WEBPACK_IMPORTED_MODULE_0__["run_all"])(unsubscribers);
            cleanup();
        };
    });
}




/***/ }),

/***/ "./node_modules/svelte/transition/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/svelte/transition/index.mjs ***!
  \**************************************************/
/*! exports provided: blur, crossfade, draw, fade, fly, scale, slide */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blur", function() { return blur; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "crossfade", function() { return crossfade; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "draw", function() { return draw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fade", function() { return fade; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fly", function() { return fly; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scale", function() { return scale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slide", function() { return slide; });
/* harmony import */ var _easing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../easing */ "./node_modules/svelte/easing/index.mjs");
/* harmony import */ var _internal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal */ "./node_modules/svelte/internal/index.mjs");



/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function blur(node, { delay = 0, duration = 400, easing = _easing__WEBPACK_IMPORTED_MODULE_0__["cubicInOut"], amount = 5, opacity = 0 }) {
    const style = getComputedStyle(node);
    const target_opacity = +style.opacity;
    const f = style.filter === 'none' ? '' : style.filter;
    const od = target_opacity * (1 - opacity);
    return {
        delay,
        duration,
        easing,
        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`
    };
}
function fade(node, { delay = 0, duration = 400, easing = _easing__WEBPACK_IMPORTED_MODULE_0__["linear"] }) {
    const o = +getComputedStyle(node).opacity;
    return {
        delay,
        duration,
        easing,
        css: t => `opacity: ${t * o}`
    };
}
function fly(node, { delay = 0, duration = 400, easing = _easing__WEBPACK_IMPORTED_MODULE_0__["cubicOut"], x = 0, y = 0, opacity = 0 }) {
    const style = getComputedStyle(node);
    const target_opacity = +style.opacity;
    const transform = style.transform === 'none' ? '' : style.transform;
    const od = target_opacity * (1 - opacity);
    return {
        delay,
        duration,
        easing,
        css: (t, u) => `
			transform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);
			opacity: ${target_opacity - (od * u)}`
    };
}
function slide(node, { delay = 0, duration = 400, easing = _easing__WEBPACK_IMPORTED_MODULE_0__["cubicOut"] }) {
    const style = getComputedStyle(node);
    const opacity = +style.opacity;
    const height = parseFloat(style.height);
    const padding_top = parseFloat(style.paddingTop);
    const padding_bottom = parseFloat(style.paddingBottom);
    const margin_top = parseFloat(style.marginTop);
    const margin_bottom = parseFloat(style.marginBottom);
    const border_top_width = parseFloat(style.borderTopWidth);
    const border_bottom_width = parseFloat(style.borderBottomWidth);
    return {
        delay,
        duration,
        easing,
        css: t => `overflow: hidden;` +
            `opacity: ${Math.min(t * 20, 1) * opacity};` +
            `height: ${t * height}px;` +
            `padding-top: ${t * padding_top}px;` +
            `padding-bottom: ${t * padding_bottom}px;` +
            `margin-top: ${t * margin_top}px;` +
            `margin-bottom: ${t * margin_bottom}px;` +
            `border-top-width: ${t * border_top_width}px;` +
            `border-bottom-width: ${t * border_bottom_width}px;`
    };
}
function scale(node, { delay = 0, duration = 400, easing = _easing__WEBPACK_IMPORTED_MODULE_0__["cubicOut"], start = 0, opacity = 0 }) {
    const style = getComputedStyle(node);
    const target_opacity = +style.opacity;
    const transform = style.transform === 'none' ? '' : style.transform;
    const sd = 1 - start;
    const od = target_opacity * (1 - opacity);
    return {
        delay,
        duration,
        easing,
        css: (_t, u) => `
			transform: ${transform} scale(${1 - (sd * u)});
			opacity: ${target_opacity - (od * u)}
		`
    };
}
function draw(node, { delay = 0, speed, duration, easing = _easing__WEBPACK_IMPORTED_MODULE_0__["cubicInOut"] }) {
    const len = node.getTotalLength();
    if (duration === undefined) {
        if (speed === undefined) {
            duration = 800;
        }
        else {
            duration = len / speed;
        }
    }
    else if (typeof duration === 'function') {
        duration = duration(len);
    }
    return {
        delay,
        duration,
        easing,
        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`
    };
}
function crossfade(_a) {
    var { fallback } = _a, defaults = __rest(_a, ["fallback"]);
    const to_receive = new Map();
    const to_send = new Map();
    function crossfade(from, node, params) {
        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = _easing__WEBPACK_IMPORTED_MODULE_0__["cubicOut"] } = Object(_internal__WEBPACK_IMPORTED_MODULE_1__["assign"])(Object(_internal__WEBPACK_IMPORTED_MODULE_1__["assign"])({}, defaults), params);
        const to = node.getBoundingClientRect();
        const dx = from.left - to.left;
        const dy = from.top - to.top;
        const dw = from.width / to.width;
        const dh = from.height / to.height;
        const d = Math.sqrt(dx * dx + dy * dy);
        const style = getComputedStyle(node);
        const transform = style.transform === 'none' ? '' : style.transform;
        const opacity = +style.opacity;
        return {
            delay,
            duration: Object(_internal__WEBPACK_IMPORTED_MODULE_1__["is_function"])(duration) ? duration(d) : duration,
            easing,
            css: (t, u) => `
				opacity: ${t * opacity};
				transform-origin: top left;
				transform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});
			`
        };
    }
    function transition(items, counterparts, intro) {
        return (node, params) => {
            items.set(params.key, {
                rect: node.getBoundingClientRect()
            });
            return () => {
                if (counterparts.has(params.key)) {
                    const { rect } = counterparts.get(params.key);
                    counterparts.delete(params.key);
                    return crossfade(rect, node, params);
                }
                // if the node is disappearing altogether
                // (i.e. wasn't claimed by the other list)
                // then we need to supply an outro
                items.delete(params.key);
                return fallback && fallback(node, params, intro);
            };
        };
    }
    return [
        transition(to_send, to_receive, false),
        transition(to_receive, to_send, true)
    ];
}




/***/ })

/******/ });
//# sourceMappingURL=app.js.map